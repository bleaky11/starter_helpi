{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { backgroundStyle } from \"./CSS/Background\";\nimport { useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent() {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [questions, setQuestions] = useState;\n  function updateAnswer(event, index) {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index].selected = updatedQuestions[index].selected.map(() => true);\n    updateProgress();\n  }\n  function updateProgress() {\n    setProgress(prevProgress => Math.min(prevProgress + 100 / questions.length, 100));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          style: {\n            border: \"2px solid red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This assessment is designed to determine an appopriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best ability of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), questions[0].text, /*#__PURE__*/_jsxDEV(Form, {\n          children: questions[0].choices.map(choice => /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: choice.label,\n            name: \"basic-question\",\n            value: choice.label,\n            onChange: event => updateAnswer(event, 0)\n          }, choice.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), questions[1].text, /*#__PURE__*/_jsxDEV(Form, {\n          children: questions[1].choices.map(choice => /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: choice.label,\n            name: \"basic-question\",\n            value: choice.label,\n            onChange: event => updateAnswer(event, 1)\n          }, choice.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), questions[2].text, /*#__PURE__*/_jsxDEV(Form, {\n          children: questions[0].choices.map(choice => /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: choice.label,\n            name: \"basic-question\",\n            value: choice.label,\n            onChange: event => updateAnswer(event, 2)\n          }, choice.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicCareerComponent, \"MDavqfnVfXtrXQtLNoGNVIaRLCY=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["backgroundStyle","useState","Container","Form","jsxDEV","_jsxDEV","BasicCareerComponent","_s","progress","setProgress","questions","setQuestions","updateAnswer","event","index","updatedQuestions","selected","map","updateProgress","prevProgress","Math","min","length","style","children","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","id","value","max","textAlign","border","marginLeft","text","choices","choice","Check","type","label","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { backgroundStyle } from \"./CSS/Background\";\r\nimport { useState } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\n\r\nexport function BasicCareerComponent(): JSX.Element \r\n{\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [questions, setQuestions] = useState<\r\n[{text: \"Mock Question #1\", choices: [{id: 1, label: \"choice-1\"}, {id: 2, label: \"choice-2\"}, {id: 3, label: \"choice-3\"}], selected: [false, false, false]},\r\n{text: \"Mock Question #2\", choices: [{id: 1, label: \"choice-1\"}, {id: 2, label: \"choice-2\"}, {id: 3, label: \"choice-3\"}], selected: [false, false, false]}, \r\n{text: \"Mock Question #3\", choices: [{id: 1, label: \"choice-1\"}, {id: 2, label: \"choice-2\"}, {id: 3, label: \"choice-3\"}], selected: [false, false, false]}]>;\r\n\r\n  function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, index: number) \r\n  {\r\n    const updatedQuestions = [...questions];\r\n    updatedQuestions[index].selected = updatedQuestions[index].selected.map(() => true);\r\n    updateProgress();\r\n  }\r\n\r\n  function updateProgress(): void\r\n  {\r\n    setProgress((prevProgress) => Math.min(prevProgress + (100 / questions.length), 100));\r\n  }\r\n\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <div>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n      <label htmlFor=\"question\" style={{ marginRight: \"10px\" }}>\r\n          Percent Complete: {progress.toFixed(0)}%\r\n     </label>\r\n      <progress id=\"question\" value={progress} max=\"100\" />\r\n</div>\r\n        <h1 style= {{textAlign: \"center\"}}>Here is the Basic Career Page!</h1>\r\n        <br></br>\r\n        <div>\r\n        <Container style = {{border:\"2px solid red\"}}>\r\n        <p> \r\n          This assessment is designed to determine an appopriate career path going forward. \r\n          You will be asked a series of multiple choice questions. If you're looking for more \r\n          in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're \r\n          in a comfortable environment and answer each question to the best ability of your ability.\r\n        </p>\r\n        </Container>\r\n        </div>\r\n        <div\r\n          style = {{marginLeft: \"30px\"}}>\r\n          <br></br>\r\n          {questions[0].text}\r\n          <Form>\r\n                    {questions[0].choices.map((choice) =>\r\n                    <Form.Check\r\n                    key = {choice.id}\r\n                    type = \"radio\"\r\n                    label = {choice.label}\r\n                    name = \"basic-question\"\r\n                    value = {choice.label}\r\n                    onChange={(event) => updateAnswer(event, 0)}\r\n                    >\r\n                    </Form.Check>)}\r\n          </Form>\r\n          {questions[1].text}\r\n          <Form>\r\n                    {questions[1].choices.map((choice) =>\r\n                    <Form.Check\r\n                    key = {choice.id}\r\n                    type = \"radio\"\r\n                    label = {choice.label}\r\n                    name = \"basic-question\"\r\n                    value = {choice.label}\r\n                    onChange={(event) => updateAnswer(event, 1)}\r\n                    >\r\n                    </Form.Check>)}\r\n          </Form>\r\n          {questions[2].text}\r\n          <Form>\r\n          {questions[0].choices.map((choice) =>\r\n                    <Form.Check\r\n                    key = {choice.id}\r\n                    type = \"radio\"\r\n                    label = {choice.label}\r\n                    name = \"basic-question\"\r\n                    value = {choice.label}\r\n                    onChange={(event) => updateAnswer(event, 2)}\r\n                    >\r\n                    </Form.Check>)}\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}