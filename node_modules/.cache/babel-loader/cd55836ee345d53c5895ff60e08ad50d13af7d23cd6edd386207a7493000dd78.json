{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = ({\n  userInfo,\n  setUserInfo,\n  remember,\n  setRemember,\n  updateStatus,\n  handleRemember,\n  handleSubmit,\n  closeForm,\n  accounts,\n  selectedUser,\n  setSelect,\n  formTitle\n}) => {\n  _s();\n  useEffect(() => {\n    if (formTitle === \"Create Account\") {\n      setUserInfo({\n        username: \"\",\n        password: \"\"\n      });\n    }\n  }, [formTitle, setUserInfo, setSelect]); // Ensure this runs when formTitle changes\n\n  const handleUserSelect = event => {\n    const selectedUsername = event.target.value;\n    setSelect(selectedUsername);\n    const selectedAccount = accounts.find(account => account.username === selectedUsername);\n    if (selectedAccount) {\n      setUserInfo({\n        username: selectedAccount.username,\n        password: selectedAccount.password\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-popup\",\n    id: \"myForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), formTitle === \"Log in\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"25px\"\n        },\n        children: accounts.length === 0 ? /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"savedUsers\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"No Saved Usernames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: selectedUser,\n            onChange: handleUserSelect,\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"No saved users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"savedUsers\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Saved Usernames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: selectedUser,\n            onChange: handleUserSelect,\n            children: accounts.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: user.username\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInfo.username,\n        placeholder: \"Enter Username\",\n        name: \"username\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"psw\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: userInfo.password,\n        placeholder: \"Enter Password\",\n        name: \"password\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '8px'\n          },\n          children: \"Remember me?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          id: \"save-user\",\n          name: \"save-user\",\n          checked: remember,\n          onChange: handleRemember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        type: \"button\",\n        className: \"btn cancel\",\n        onClick: closeForm,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","Form","jsxDEV","_jsxDEV","LoginForm","userInfo","setUserInfo","remember","setRemember","updateStatus","handleRemember","handleSubmit","closeForm","accounts","selectedUser","setSelect","formTitle","_s","username","password","handleUserSelect","event","selectedUsername","target","value","selectedAccount","find","account","className","id","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","length","Group","controlId","Label","Select","onChange","disabled","map","user","htmlFor","type","placeholder","name","required","display","alignItems","marginRight","Check","checked","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/LoginForm.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport './LoginForm.css';\r\n\r\nexport interface LoginFormProps {\r\n  closeForm: () => void;\r\n  userInfo: { username: string; password: string };\r\n  setUserInfo: (value: React.SetStateAction<{ username: string; password: string }>) => void;\r\n  remember: boolean;\r\n  setRemember: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateStatus: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleRemember: () => void;\r\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\r\n  accounts: { username: string; password: string }[];\r\n  selectedUser: string;\r\n  setSelect: (value: React.SetStateAction<string>) => void;\r\n  formTitle: string;\r\n}\r\n\r\nexport const LoginForm: React.FC<LoginFormProps> = ({\r\n  userInfo,\r\n  setUserInfo,\r\n  remember,\r\n  setRemember,\r\n  updateStatus,\r\n  handleRemember,\r\n  handleSubmit,\r\n  closeForm,\r\n  accounts,\r\n  selectedUser,\r\n  setSelect,\r\n  formTitle,\r\n}) => {\r\n\r\n  useEffect(() => {\r\n    if (formTitle === \"Create Account\") {\r\n      setUserInfo({ username: \"\", password: \"\" });\r\n    }\r\n  }, [formTitle, setUserInfo, setSelect]); // Ensure this runs when formTitle changes\r\n\r\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedUsername = event.target.value;\r\n    setSelect(selectedUsername);\r\n\r\n    const selectedAccount = accounts.find(account => account.username === selectedUsername);\r\n    if (selectedAccount) {\r\n      setUserInfo({\r\n        username: selectedAccount.username,\r\n        password: selectedAccount.password,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-popup\" id=\"myForm\">\r\n      <form className=\"form-container\" onSubmit={handleSubmit}>\r\n        <h1>{formTitle}</h1>\r\n        \r\n        {/* Only show dropdown in \"Log in\" mode */}\r\n        {formTitle === \"Log in\" && (\r\n          <div style={{ marginBottom: \"25px\" }}>\r\n            {accounts.length === 0 ? (\r\n              <Form.Group controlId=\"savedUsers\">\r\n                <Form.Label>No Saved Usernames</Form.Label>\r\n                <Form.Select value={selectedUser} onChange={handleUserSelect} disabled>\r\n                  <option>No saved users</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            ) : (\r\n              <Form.Group controlId=\"savedUsers\">\r\n                <Form.Label>Saved Usernames</Form.Label>\r\n                <Form.Select value={selectedUser} onChange={handleUserSelect}>\r\n                  {accounts.map((user) => (\r\n                    <option key={user.username} value={user.username}>\r\n                      {user.username}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <label htmlFor=\"username\"><b>Username</b></label>\r\n        <input\r\n          type=\"text\"\r\n          value={userInfo.username}\r\n          placeholder=\"Enter Username\"\r\n          name=\"username\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n        <label htmlFor=\"psw\"><b>Password</b></label>\r\n        <input\r\n          type=\"password\"\r\n          value={userInfo.password}\r\n          placeholder=\"Enter Password\"\r\n          name=\"password\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"btn\">Login</button>\r\n        \r\n        {/* Remember me option */}\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <span style={{ marginRight: '8px' }}>Remember me?</span>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"save-user\"\r\n            name=\"save-user\"\r\n            checked={remember}\r\n            onChange={handleRemember}\r\n          />\r\n        </div>\r\n        \r\n        <button style={{ marginTop: \"10px\" }} type=\"button\" className=\"btn cancel\" onClick={closeForm}>Close</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}