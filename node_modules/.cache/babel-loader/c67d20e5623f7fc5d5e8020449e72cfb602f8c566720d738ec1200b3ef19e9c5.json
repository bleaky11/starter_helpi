{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport { LoginForm } from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userID, setID] = useState(1);\n  const indexedDB = window.indexedDB;\n  const request = indexedDB.open(\"UserDatabase\", 1);\n  request.onerror = function (event) {\n    console.error(\"Error occured accessing user database!\");\n    console.error(event);\n  };\n  request.onupgradeneeded = function () {\n    const db = request.result;\n    const store = db.createObjectStore(\"users\", {\n      keyPath: \"id\"\n    });\n    store.createIndex(\"username_and_password\", [\"username\", \"password\"], {\n      unique: false\n    });\n  };\n  request.onsuccess = function () {\n    const db = request.result;\n    const transaction = db.transaction(\"users\", 'readwrite');\n    const store = transaction.objectStore(\"users\");\n    const makeUserIndex = store.index(\"username_and_password\");\n    if (isLoggedIn) {\n      store.put({\n        id: userID,\n        username: userInfo.username,\n        password: userInfo.password\n      });\n      const userQuery = makeUserIndex.get(userID);\n      if (userQuery.onsuccess) {\n        if (isFormOpen) {\n          /*#__PURE__*/_jsxDEV(LoginForm, {\n            userInfo: userInfo,\n            setInfo: setInfo,\n            remember: remember,\n            setRemember: setRemember,\n            handleRemember: handleRemember,\n            handleSubmit: handleSubmit,\n            updateStatus: updateStatus,\n            closeForm: () => setIsFormOpen(false),\n            formTitle: userQuery.result === \"username\" && userQuery.result === \"password\" ? \"Log In\" : \"Create Account\"\n            // Pass the title based on conditions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this);\n        }\n      }\n      transaction.oncomplete = function () {\n        setID(userID + 1); // set for next user\n        db.close();\n      };\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsLoggedIn(true);\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleRemember = () => {\n    setRemember(prevRemember => !prevRemember);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        float: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Signed in as: \", userInfo.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"Zb2R+KXw+JSk6Bm5etPuKZQ9OP4=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","userProfile","LoginForm","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","userID","setID","indexedDB","window","request","open","onerror","event","console","error","onupgradeneeded","db","result","store","createObjectStore","keyPath","createIndex","unique","onsuccess","transaction","objectStore","makeUserIndex","index","put","id","userQuery","get","handleRemember","handleSubmit","updateStatus","closeForm","formTitle","fileName","_jsxFileName","lineNumber","columnNumber","oncomplete","close","preventDefault","toggleForm","name","value","target","prevInfo","prevRemember","children","style","position","float","src","alt","width","height","cursor","onClick","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState} from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport { LoginForm } from './LoginForm';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setInfo] = useState<{ username: string; password: string }>({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [userID, setID] = useState<number>(1);\r\n\r\n  const indexedDB = window.indexedDB;\r\n\r\n  const request = indexedDB.open(\"UserDatabase\", 1);\r\n\r\n  request.onerror = function(event){\r\n    console.error(\"Error occured accessing user database!\");\r\n    console.error(event);\r\n  }\r\n\r\n  request.onupgradeneeded = function()\r\n  {\r\n    const db = request.result;\r\n    const store = db.createObjectStore(\"users\", {keyPath: \"id\"});\r\n    store.createIndex(\"username_and_password\", [\"username\", \"password\"], {unique: false});\r\n  }\r\n\r\n  request.onsuccess = function()\r\n  {\r\n    const db = request.result;\r\n    const transaction = db.transaction(\"users\", 'readwrite');\r\n    const store = transaction.objectStore(\"users\");\r\n    const makeUserIndex = store.index(\"username_and_password\");\r\n    if(isLoggedIn)\r\n    {\r\n      store.put({id: userID, username: userInfo.username, password: userInfo.password});\r\n      const userQuery = makeUserIndex.get(userID);\r\n      if(userQuery.onsuccess)\r\n      {\r\n        if(isFormOpen)\r\n          {\r\n            <LoginForm\r\n              userInfo={userInfo}\r\n              setInfo={setInfo}\r\n              remember={remember}\r\n              setRemember={setRemember}\r\n              handleRemember={handleRemember}\r\n              handleSubmit = {handleSubmit}\r\n              updateStatus={updateStatus}\r\n              closeForm={() => setIsFormOpen(false)}\r\n              formTitle={(userQuery.result === \"username\" && userQuery.result === \"password\") ? \"Log In\" : \"Create Account\"}\r\n               // Pass the title based on conditions\r\n            />\r\n          }\r\n      }\r\n      transaction.oncomplete = function()\r\n      {\r\n        setID(userID + 1); // set for next user\r\n        db.close();\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) =>\r\n  {\r\n    event.preventDefault();\r\n    setIsLoggedIn(true);\r\n  }\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember((prevRemember) => !prevRemember);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div style={{position: \"absolute\", float: \"left\" }}>\r\n          <h3>Signed in as: {userInfo.username}!</h3>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {/* Show the user image only when not logged in */}\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={toggleForm}\r\n          />\r\n        </div>\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}