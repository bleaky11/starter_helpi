{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { backgroundStyle } from \"./CSS/Background\";\nimport { useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent() {\n  _s();\n  const questions = [{\n    question: \"Mock Answer #1\",\n    isAnswered: false\n  }, {\n    question: \"Mock Answer #2\",\n    isAnswered: false\n  }, {\n    question: \"Mock Answer #3\",\n    isAnswered: false\n  }];\n  const [progress, setProgress] = useState(0);\n  function updateAnswer(event, index) {\n    questions[index].isAnswered = !questions[index].isAnswered;\n  }\n  function updateProgress() {\n    setProgress(prevProgress => Math.min(prevProgress + 100 / questions.length, 100));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          style: {\n            border: \"2px solid red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This assessment is designed to determine an appopriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best ability of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), questions[0].question, /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"answer\",\n            name: \"quizAnswer\",\n            value: \"answer\" // Or some unique value\n            ,\n            onChange: event => updateAnswer(event, 0) // Call updateAnswer on change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), questions[1].question, /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"answer\",\n            name: \"quizAnswer\",\n            value: \"answer\" // Or some unique value\n            ,\n            onChange: event => updateAnswer(event, 1) // Call updateAnswer on change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), questions[2].question, /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"answer\",\n            name: \"quizAnswer\",\n            value: \"answer\" // Or some unique value\n            ,\n            onChange: event => updateAnswer(event, 2) // Call updateAnswer on change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicCareerComponent, \"MDavqfnVfXtrXQtLNoGNVIaRLCY=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["backgroundStyle","useState","Container","Form","jsxDEV","_jsxDEV","BasicCareerComponent","_s","questions","question","isAnswered","progress","setProgress","updateAnswer","event","index","updateProgress","prevProgress","Math","min","length","style","children","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","id","value","max","textAlign","border","marginLeft","Check","type","label","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { backgroundStyle } from \"./CSS/Background\";\r\nimport { useState } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\n\r\nexport function BasicCareerComponent(): JSX.Element \r\n{\r\n\r\n  const questions = [\r\n    {question: \"Mock Answer #1\", isAnswered: false},\r\n    {question: \"Mock Answer #2\", isAnswered: false},\r\n    {question: \"Mock Answer #3\", isAnswered: false}\r\n  ]\r\n\r\n  const [progress, setProgress] = useState<number>(0);\r\n\r\n  function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, index: number) \r\n  {\r\n    questions[index].isAnswered = !questions[index].isAnswered;\r\n  }\r\n\r\n  function updateProgress(): void\r\n  {\r\n    setProgress((prevProgress) => Math.min(prevProgress + (100 / questions.length), 100));\r\n  }\r\n\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <div>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n      {/* {questions[0].isAnswered ? () => updateProgress(): questions[1].isAnswered ? () => updateProgress(): questions[2].isAnswered ? () => updateProgress()\r\n      : null} */}\r\n      <label htmlFor=\"question\" style={{ marginRight: \"10px\" }}>\r\n          Percent Complete: {progress.toFixed(0)}%\r\n     </label>\r\n      <progress id=\"question\" value={progress} max=\"100\" />\r\n</div>\r\n        <h1 style= {{textAlign: \"center\"}}>Here is the Basic Career Page!</h1>\r\n        <br></br>\r\n        <div>\r\n        <Container style = {{border:\"2px solid red\"}}>\r\n        <p> \r\n          This assessment is designed to determine an appopriate career path going forward. \r\n          You will be asked a series of multiple choice questions. If you're looking for more \r\n          in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're \r\n          in a comfortable environment and answer each question to the best ability of your ability.\r\n        </p>\r\n        </Container>\r\n        </div>\r\n        <div\r\n          style = {{marginLeft: \"30px\"}}>\r\n          <br></br>\r\n          {questions[0].question}\r\n          <Form>\r\n                    <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"answer\"\r\n                        name=\"quizAnswer\"\r\n                        value=\"answer\" // Or some unique value\r\n                        onChange = {(event) => updateAnswer(event, 0)} // Call updateAnswer on change\r\n                    />\r\n          </Form>\r\n          {questions[1].question}\r\n          <Form>\r\n                    <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"answer\"\r\n                        name=\"quizAnswer\"\r\n                        value=\"answer\" // Or some unique value\r\n                        onChange ={(event) => updateAnswer(event, 1)}  // Call updateAnswer on change\r\n                    />\r\n          </Form>\r\n          {questions[2].question}\r\n          <Form>\r\n                    <Form.Check\r\n                        type=\"radio\"\r\n                        label=\"answer\"\r\n                        name=\"quizAnswer\"\r\n                        value=\"answer\" // Or some unique value\r\n                        onChange={(event) => updateAnswer(event, 2)}  // Call updateAnswer on change\r\n                    />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}