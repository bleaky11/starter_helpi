{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from 'your-button-library'; // Adjust the import based on your UI library\nimport LoginForm from './LoginForm'; // Adjust the import path based on your project structure\nimport userProfile from './path-to-your-profile-image'; // Adjust the import based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyComponent = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userInfo, setUserInfo] = useState({});\n  const [remember, setRemember] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"\"); // State for the form title\n\n  // Toggle function to open/close the form\n  const toggleForm = () => {\n    setIsFormOpen(prev => !prev); // Toggle the current state\n  };\n\n  // Show form with specific title\n  const showForm = title => {\n    setFormTitle(title); // Set the form title\n    toggleForm(); // Open the form\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        float: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Signed in as: \", userInfo.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\") // Set title to \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showForm(\"Log in\") // Set title to \"Log in\"\n        ,\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkblue\"\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), isFormOpen && !isLoggedIn &&\n    /*#__PURE__*/\n    // Conditional rendering of LoginForm\n    _jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: () => {/* handle remember logic */},\n      handleSubmit: () => {/* handle submit logic */},\n      updateStatus: () => {/* update status logic */},\n      closeForm: toggleForm // Use toggleForm to close the form\n      ,\n      formTitle: formTitle // Pass the form title to LoginForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(MyComponent, \"Jfe8J/h03KM3cJ1OvGYcFrfs3ZU=\");\n_c = MyComponent;\nexport default MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","Button","LoginForm","userProfile","jsxDEV","_jsxDEV","MyComponent","_s","isFormOpen","setIsFormOpen","isLoggedIn","setIsLoggedIn","userInfo","setUserInfo","remember","setRemember","formTitle","setFormTitle","toggleForm","prev","showForm","title","children","style","position","float","username","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","cursor","onClick","marginTop","borderRadius","backgroundColor","handleRemember","handleSubmit","updateStatus","closeForm","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'your-button-library'; // Adjust the import based on your UI library\r\nimport LoginForm from './LoginForm'; // Adjust the import path based on your project structure\r\nimport userProfile from './path-to-your-profile-image'; // Adjust the import based on your project structure\r\n\r\nconst MyComponent = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({});\r\n  const [remember, setRemember] = useState(false);\r\n  const [formTitle, setFormTitle] = useState(\"\"); // State for the form title\r\n\r\n  // Toggle function to open/close the form\r\n  const toggleForm = () => {\r\n    setIsFormOpen((prev) => !prev); // Toggle the current state\r\n  };\r\n\r\n  // Show form with specific title\r\n  const showForm = (title) => {\r\n    setFormTitle(title); // Set the form title\r\n    toggleForm(); // Open the form\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div style={{ position: \"absolute\", float: \"left\" }}>\r\n          <h3>Signed in as: {userInfo.username}!</h3>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")} // Set title to \"Create Account\"\r\n          />\r\n          <Button\r\n            onClick={() => showForm(\"Log in\")} // Set title to \"Log in\"\r\n            style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkblue\" }}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {isFormOpen && !isLoggedIn && ( // Conditional rendering of LoginForm\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={() => { /* handle remember logic */ }}\r\n          handleSubmit={() => { /* handle submit logic */ }}\r\n          updateStatus={() => { /* update status logic */ }}\r\n          closeForm={toggleForm} // Use toggleForm to close the form\r\n          formTitle={formTitle} // Pass the form title to LoginForm\r\n        />\r\n      )}\r\n\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}