{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\detailedCareer.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport questionMarks from \"./Images/Questions.png\";\nimport detective2 from \"./Images/Detective2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DetailedCareerComponent({\n  detailedComplete,\n  toggleDetailed\n}) {\n  _s();\n  const [questionPage, setQuestionPage] = useState(0);\n  const [tempAnswers, setTempAnswers] = useState(new Array(7).fill(\"\"));\n  const [questions, setQuestions] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const currentQuestion = questions.find(q => q.page === questionPage); //Variable to track which question is displayed\n  if (sessionStorage.getItem(\"quizAnswers\") === null) {\n    sessionStorage.setItem(\"quizAnswers\", JSON.stringify({}));\n  }\n  const updateProgress = useCallback(() => {\n    //When an answer to a question is saved, update progress\n    const totalQuestions = questions.length;\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\n    sessionStorage.setItem(\"quizAnswers\", JSON.stringify(savedAnswers));\n    const answeredQuestions = Object.keys(savedAnswers).filter(key => savedAnswers[key]).length;\n    const progressPercentage = answeredQuestions / totalQuestions * 100;\n    setProgress(progressPercentage);\n  }, [questions]);\n  useEffect(() => {\n    //Allows for each question to have a different answerbox while still being editable\n    const storedQuestions = JSON.parse(sessionStorage.getItem(\"quizQuestions\") || \"[]\");\n    if (storedQuestions.length > 0) {\n      setQuestions(storedQuestions);\n    } else {\n      const defaultQuestions = [{\n        text: \"What have you always wanted to be when you grew up?\",\n        type: \"text\",\n        answered: false,\n        page: 0,\n        answer: \"\",\n        tip: \"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\"\n      }, {\n        text: \"Whether inside or outside of school, what is your favorite class that you have ever taken?\",\n        type: \"text\",\n        answered: false,\n        page: 1,\n        answer: \"\",\n        tip: \"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"\n      }, {\n        text: \"What societal stressor do you feel most passionate about addressing?\",\n        type: \"text\",\n        answered: false,\n        page: 2,\n        answer: \"\",\n        tip: \"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"\n      }, {\n        text: \"What did you dislike most about jobs or tasks you've had to do in the past?\",\n        type: \"text\",\n        answered: false,\n        page: 3,\n        answer: \"\",\n        tip: \"A lot of people dislike working in groups as they have less control over the task at hand.\"\n      }, {\n        text: \"What is a topic or subject that you could teach someone about?\",\n        type: \"text\",\n        answered: false,\n        page: 4,\n        answer: \"\",\n        tip: \"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"\n      }, {\n        text: \"What are your favorite hobbies?\",\n        type: \"text\",\n        answered: false,\n        page: 5,\n        answer: \"\",\n        tip: \"Do you enjoy any outdoor activities, sports, instruments, or games?\"\n      }, {\n        text: \"What 3 words would others use to describe you?\",\n        type: \"text\",\n        answered: false,\n        page: 6,\n        answer: \"\",\n        tip: \"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"\n      }];\n      setQuestions(defaultQuestions);\n      sessionStorage.setItem(\"quizQuestions\", JSON.stringify(defaultQuestions));\n    }\n\n    // Load saved answers from session storage when the component mounts\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\n    const updatedTempAnswers = new Array(7).fill(\"\");\n\n    // Populate tempAnswers with saved answers\n    Object.keys(savedAnswers).forEach(key => {\n      updatedTempAnswers[parseInt(key)] = savedAnswers[key];\n    });\n    setTempAnswers(updatedTempAnswers);\n\n    // Calculate progress after setting questions\n    const totalQuestions = storedQuestions.length;\n    const answeredQuestions = Object.keys(savedAnswers).filter(key => savedAnswers[key]).length;\n    const progressPercentage = totalQuestions > 0 ? answeredQuestions / totalQuestions * 100 : 0;\n    setProgress(progressPercentage);\n  }, []);\n  function updateAnswered() {\n    //Function to record the user's answer when they click the \"Record Answer\" button\n    if (currentQuestion) {\n      const updatedQuestions = [...questions];\n      updatedQuestions[questionPage].answered = true; //Updates the answered status of the question to true\n      updatedQuestions[questionPage].answer = tempAnswers[questionPage]; //Sets the answer value of the question to the user's answer\n      setQuestions(updatedQuestions); //Update the questions state to include user's answer\n      const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\"); //Creates an array from \"quizAnswers\" in storage, or returns an empty array if it doesn't exist\n      savedAnswers[questionPage] = tempAnswers[questionPage]; //Populate array with user's answer\n      sessionStorage.setItem(\"quizAnswers\", JSON.stringify(savedAnswers)); //Update \"quizAnswers\" in storage with the new array\n      updateProgress();\n    }\n    if (tempAnswers[questionPage]) {\n      setQuestionPage(prev => Math.min(questions.length - 1, prev + 1));\n    }\n  }\n  function handleAnswerChange(event) {\n    //Function to place a user's new answer in a temp variable to hold before recording\n    setTempAnswers(prevAnswers => {\n      const updatedAnswers = [...prevAnswers];\n      updatedAnswers[questionPage] = event.target.value;\n      return updatedAnswers;\n    });\n  }\n  function toggleExplanation() {\n    //Turns explanation blurb on and off\n    setShowExplanation(prev => !prev);\n  }\n  function IsRecorded({\n    savedAnswer,\n    currentText\n  }) {\n    //Displays the user's recorded answer\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Your Answer: \", savedAnswer, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: savedAnswer === currentText ? \"Response Recorded!\" : \"Please Record Your Response!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n  function handleSubmit({\n    detailedComplete,\n    toggleDetailed\n  }) {\n    toggleDetailed(true);\n    alert(\"Thanks for completing the Detailed Career quiz!\");\n  }\n  function DetailedSubmit({\n    detailedComplete,\n    toggleDetailed\n  }) {\n    //Submit button - disabled if progress is less than 100\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\",\n          background: \"#DDA15E\",\n          border: \"3px\",\n          borderColor: \"#bc6c25\",\n          borderStyle: \"solid\"\n        },\n        disabled: progress < 100,\n        onClick: () => handleSubmit({\n          detailedComplete,\n          toggleDetailed\n        }),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 10\n    }, this);\n  }\n  function handleClear() {\n    //Function to handle clearing quiz and resetting progress\n    sessionStorage.removeItem(\"quizAnswers\"); //removes saved answers from storage\n    sessionStorage.removeItem(\"quizQuestions\"); //removes saved questions from storage\n    const defaultQuestions = [{\n      text: \"What have you always wanted to be when you grew up?\",\n      type: \"text\",\n      answered: false,\n      page: 0,\n      answer: \"\",\n      tip: \"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\"\n    }, {\n      text: \"Whether inside or outside of school, what is your favorite class that you have ever taken?\",\n      type: \"text\",\n      answered: false,\n      page: 1,\n      answer: \"\",\n      tip: \"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"\n    }, {\n      text: \"What societal stressor do you feel most passionate about addressing?\",\n      type: \"text\",\n      answered: false,\n      page: 2,\n      answer: \"\",\n      tip: \"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"\n    }, {\n      text: \"What did you dislike most about jobs or tasks you've had to do in the past?\",\n      type: \"text\",\n      answered: false,\n      page: 3,\n      answer: \"\",\n      tip: \"A lot of people dislike working in groups as they have less control over the task at hand.\"\n    }, {\n      text: \"What is a topic or subject that you could teach someone about?\",\n      type: \"text\",\n      answered: false,\n      page: 4,\n      answer: \"\",\n      tip: \"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"\n    }, {\n      text: \"What are your favorite hobbies?\",\n      type: \"text\",\n      answered: false,\n      page: 5,\n      answer: \"\",\n      tip: \"Do you enjoy any outdoor activities, sports, instruments, or games?\"\n    }, {\n      text: \"What 3 words would others use to describe you?\",\n      type: \"text\",\n      answered: false,\n      page: 6,\n      answer: \"\",\n      tip: \"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"\n    }]; //Initializes a questions array with blank answers, false answer value\n    setQuestions(defaultQuestions); //Update state with empty questions array\n    setTempAnswers(new Array(defaultQuestions.length).fill(\"\")); //Initializes a new array the length of the defaultQuestions array and fills it with empty strings\n    setProgress(0); //Reset progress\n    setTimeout(() => {\n      alert(\"Quiz Cleared!\");\n    }, 0); //Wait until all of the clear logic runs before displaying message\n    setQuestionPage(prev => Math.min(questions.length - 1, 0));\n  }\n  function DetailedClear() {\n    //Clear button\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\",\n          background: \"#DDA15E\",\n          border: \"3px\",\n          borderColor: \"#bc6c25\",\n          borderStyle: \"solid\"\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 12\n    }, this);\n  }\n  function getSavedAnswer(page) {\n    //Helper function to get and display the user's saved answer from storage\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\n    return savedAnswers[page] || \"\"; // Return the saved answer or an empty string if not present\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        marginBottom: \"10px\",\n        marginRight: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"question\",\n        style: {\n          marginRight: \"10px\",\n          fontSize: \"25px\"\n        },\n        children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        id: \"question\",\n        value: progress,\n        max: \"100\",\n        style: {\n          height: \"45px\",\n          width: \"300px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here is the Detailed Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          border: \"2px solid red\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This assessment is designed to determine an appopriate career path going forward. You will be asked a series of elaborate questions that may require some additional thought to answer. Before you begin, make sure you're in a comfortable environment and answer each question to your best ability.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [currentQuestion.text, /*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggleExplanation,\n            style: {\n              fontSize: '24px',\n              marginLeft: '10px',\n              background: 'transparent',\n              border: 'none',\n              cursor: 'pointer',\n              color: 'blue'\n            },\n            children: \"?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), showExplanation && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            padding: '10px',\n            border: '1px solid lightgray',\n            borderRadius: '5px',\n            background: '#f9f9f9'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: currentQuestion.tip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: detective2,\n            alt: \"Detective\",\n            style: {\n              width: '10%',\n              height: '10%',\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: tempAnswers[questionPage],\n            onChange: handleAnswerChange,\n            style: {\n              width: '25%',\n              height: '5em',\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: questionMarks,\n            alt: \"Question Marks\",\n            style: {\n              width: '10%',\n              height: '10%',\n              marginLeft: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(IsRecorded, {\n            savedAnswer: getSavedAnswer(questionPage),\n            currentText: tempAnswers[questionPage]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '100%',\n          marginTop: '20px',\n          padding: \"0 37%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            background: \"#DDA15E\",\n            border: \"3px\",\n            borderColor: \"#bc6c25\",\n            borderStyle: \"solid\"\n          },\n          onClick: () => setQuestionPage(prev => Math.max(0, prev - 1)),\n          disabled: questionPage === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            background: \"#DDA15E\",\n            border: \"3px\",\n            borderColor: \"#bc6c25\",\n            borderStyle: \"solid\",\n            width: \"200px\"\n          },\n          onClick: () => updateAnswered(),\n          children: \"Record Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            background: \"#DDA15E\",\n            border: \"3px\",\n            borderColor: \"#bc6c25\",\n            borderStyle: \"solid\"\n          },\n          onClick: () => setQuestionPage(prev => Math.min(questions.length - 1, prev + 1)),\n          disabled: questionPage === 6,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"80px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DetailedSubmit, {\n        detailedComplete: detailedComplete,\n        toggleDetailed: toggleDetailed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DetailedClear, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailedCareerComponent, \"KwmvrIaR+QFlV5mLIAS29Xi2sY8=\");\n_c = DetailedCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"DetailedCareerComponent\");","map":{"version":3,"names":["useCallback","useEffect","useState","Button","Container","questionMarks","detective2","jsxDEV","_jsxDEV","DetailedCareerComponent","detailedComplete","toggleDetailed","_s","questionPage","setQuestionPage","tempAnswers","setTempAnswers","Array","fill","questions","setQuestions","progress","setProgress","showExplanation","setShowExplanation","currentQuestion","find","q","page","sessionStorage","getItem","setItem","JSON","stringify","updateProgress","totalQuestions","length","savedAnswers","parse","answeredQuestions","Object","keys","filter","key","progressPercentage","storedQuestions","defaultQuestions","text","type","answered","answer","tip","updatedTempAnswers","forEach","parseInt","updateAnswered","updatedQuestions","prev","Math","min","handleAnswerChange","event","prevAnswers","updatedAnswers","target","value","toggleExplanation","IsRecorded","savedAnswer","currentText","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","alert","DetailedSubmit","style","height","width","borderRadius","background","border","borderColor","borderStyle","disabled","onClick","handleClear","removeItem","setTimeout","DetailedClear","getSavedAnswer","className","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","fontSize","toFixed","id","max","textAlign","flexDirection","marginLeft","cursor","color","marginTop","padding","src","alt","onChange","resize","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/detailedCareer.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport questionMarks from \"./Images/Questions.png\";\r\nimport detective2 from \"./Images/Detective2.png\";\r\n\r\ninterface submitButton{ // Interface for keeping track of Detailed Question Completion\r\n  detailedComplete: boolean;\r\n  toggleDetailed: (notDetailed: boolean) => void;\r\n}\r\n\r\ninterface Question // Interface to handle question attributes\r\n{\r\n  text: string;\r\n  type: string;\r\n  answered: boolean;\r\n  page: number;\r\n  answer: string;\r\n  tip?: string;\r\n}\r\n\r\nexport function DetailedCareerComponent({ detailedComplete, toggleDetailed }: submitButton): JSX.Element {\r\n  const [questionPage, setQuestionPage] = useState<number>(0);\r\n  const [tempAnswers, setTempAnswers] = useState<string[]>(new Array(7).fill(\"\"));\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [showExplanation, setShowExplanation] = useState<boolean>(false);\r\n\r\n\r\n  const currentQuestion = questions.find(q => q.page === questionPage); //Variable to track which question is displayed\r\n  if(sessionStorage.getItem(\"quizAnswers\") === null){\r\n    sessionStorage.setItem(\"quizAnswers\", JSON.stringify({}))\r\n  }\r\n\r\n  const updateProgress = useCallback(() => { //When an answer to a question is saved, update progress\r\n    const totalQuestions = questions.length;\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\r\n    sessionStorage.setItem(\"quizAnswers\", JSON.stringify(savedAnswers));\r\n    const answeredQuestions = Object.keys(savedAnswers).filter(key => savedAnswers[key]).length;\r\n    const progressPercentage = (answeredQuestions / totalQuestions) * 100;\r\n    setProgress(progressPercentage);\r\n  }, [questions]);\r\n\r\n  useEffect(() => { //Allows for each question to have a different answerbox while still being editable\r\n    const storedQuestions = JSON.parse(sessionStorage.getItem(\"quizQuestions\") || \"[]\");\r\n    if (storedQuestions.length > 0){\r\n      setQuestions(storedQuestions)\r\n    } else {\r\n      const defaultQuestions = [\r\n        { text: \"What have you always wanted to be when you grew up?\", type: \"text\", answered: false, page: 0, answer: \"\", tip: \"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\" },\r\n        { text: \"Whether inside or outside of school, what is your favorite class that you have ever taken?\", type: \"text\", answered: false, page: 1, answer: \"\", tip: \"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"  },\r\n        { text: \"What societal stressor do you feel most passionate about addressing?\", type: \"text\", answered: false, page: 2, answer: \"\", tip: \"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"  },\r\n        { text: \"What did you dislike most about jobs or tasks you've had to do in the past?\", type: \"text\", answered: false, page: 3, answer: \"\", tip: \"A lot of people dislike working in groups as they have less control over the task at hand.\"  },\r\n        { text: \"What is a topic or subject that you could teach someone about?\", type: \"text\", answered: false, page: 4, answer: \"\", tip: \"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"  },\r\n        { text: \"What are your favorite hobbies?\", type: \"text\", answered: false, page: 5, answer: \"\", tip: \"Do you enjoy any outdoor activities, sports, instruments, or games?\"  },\r\n        { text: \"What 3 words would others use to describe you?\", type: \"text\", answered: false, page: 6, answer: \"\", tip: \"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"  }\r\n      ]\r\n      setQuestions(defaultQuestions)\r\n      sessionStorage.setItem(\"quizQuestions\", JSON.stringify(defaultQuestions));\r\n    }\r\n\r\n    // Load saved answers from session storage when the component mounts\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\r\n    const updatedTempAnswers = new Array(7).fill(\"\");\r\n\r\n    // Populate tempAnswers with saved answers\r\n    Object.keys(savedAnswers).forEach((key) => {\r\n      updatedTempAnswers[parseInt(key)] = savedAnswers[key];\r\n    });\r\n    setTempAnswers(updatedTempAnswers);\r\n  \r\n    // Calculate progress after setting questions\r\n    const totalQuestions = storedQuestions.length;\r\n    const answeredQuestions = Object.keys(savedAnswers).filter(key => savedAnswers[key]).length;\r\n    const progressPercentage = totalQuestions > 0 ? (answeredQuestions / totalQuestions) * 100 : 0;\r\n    setProgress(progressPercentage);\r\n  \r\n  }, []);\r\n\r\n  function updateAnswered() { //Function to record the user's answer when they click the \"Record Answer\" button\r\n    if (currentQuestion) {\r\n      const updatedQuestions = [...questions];\r\n      updatedQuestions[questionPage].answered = true; //Updates the answered status of the question to true\r\n      updatedQuestions[questionPage].answer = tempAnswers[questionPage]; //Sets the answer value of the question to the user's answer\r\n      setQuestions(updatedQuestions); //Update the questions state to include user's answer\r\n      const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\"); //Creates an array from \"quizAnswers\" in storage, or returns an empty array if it doesn't exist\r\n      savedAnswers[questionPage] = tempAnswers[questionPage]; //Populate array with user's answer\r\n      sessionStorage.setItem(\"quizAnswers\", JSON.stringify(savedAnswers)); //Update \"quizAnswers\" in storage with the new array\r\n      updateProgress();\r\n    }if(tempAnswers[questionPage]){\r\n      setQuestionPage(prev => Math.min(questions.length - 1, prev + 1))\r\n    }\r\n  }\r\n\r\n  function handleAnswerChange(event: React.ChangeEvent<HTMLTextAreaElement>) { //Function to place a user's new answer in a temp variable to hold before recording\r\n    setTempAnswers(prevAnswers => {\r\n      const updatedAnswers = [...prevAnswers];\r\n      updatedAnswers[questionPage] = event.target.value;\r\n      return updatedAnswers;\r\n    });\r\n  }\r\n\r\n  function toggleExplanation() { //Turns explanation blurb on and off\r\n    setShowExplanation(prev => !prev);\r\n  }\r\n\r\n  function IsRecorded({ savedAnswer, currentText }: { savedAnswer: string; currentText: string }) { //Displays the user's recorded answer\r\n    return (\r\n      <div>\r\n        Your Answer: {savedAnswer}\r\n        <div>\r\n        {savedAnswer === currentText ? \"Response Recorded!\" : \"Please Record Your Response!\"}\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  function handleSubmit({detailedComplete, toggleDetailed}: submitButton)\r\n{\r\n  toggleDetailed(true);\r\n  alert(\"Thanks for completing the Detailed Career quiz!\");\r\n}\r\n\r\nfunction DetailedSubmit({detailedComplete, toggleDetailed}: submitButton): JSX.Element { //Submit button - disabled if progress is less than 100\r\n  return(<div>\r\n    <Button style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} disabled={progress < 100} onClick={() => handleSubmit({detailedComplete, toggleDetailed})}>Submit</Button>\r\n  </div>)\r\n}\r\n\r\n  function handleClear(){ //Function to handle clearing quiz and resetting progress\r\n    sessionStorage.removeItem(\"quizAnswers\"); //removes saved answers from storage\r\n    sessionStorage.removeItem(\"quizQuestions\"); //removes saved questions from storage\r\n    const defaultQuestions = [\r\n      { text: \"What have you always wanted to be when you grew up?\", type: \"text\", answered: false, page: 0, answer: \"\", tip: \"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\" },\r\n      { text: \"Whether inside or outside of school, what is your favorite class that you have ever taken?\", type: \"text\", answered: false, page: 1, answer: \"\", tip: \"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"  },\r\n      { text: \"What societal stressor do you feel most passionate about addressing?\", type: \"text\", answered: false, page: 2, answer: \"\", tip: \"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"  },\r\n      { text: \"What did you dislike most about jobs or tasks you've had to do in the past?\", type: \"text\", answered: false, page: 3, answer: \"\", tip: \"A lot of people dislike working in groups as they have less control over the task at hand.\"  },\r\n      { text: \"What is a topic or subject that you could teach someone about?\", type: \"text\", answered: false, page: 4, answer: \"\", tip: \"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"  },\r\n      { text: \"What are your favorite hobbies?\", type: \"text\", answered: false, page: 5, answer: \"\", tip: \"Do you enjoy any outdoor activities, sports, instruments, or games?\"  },\r\n      { text: \"What 3 words would others use to describe you?\", type: \"text\", answered: false, page: 6, answer: \"\", tip: \"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"  }\r\n    ]; //Initializes a questions array with blank answers, false answer value\r\n    setQuestions(defaultQuestions); //Update state with empty questions array\r\n    setTempAnswers(new Array(defaultQuestions.length).fill(\"\")); //Initializes a new array the length of the defaultQuestions array and fills it with empty strings\r\n    setProgress(0); //Reset progress\r\n    setTimeout(() => {\r\n      alert(\"Quiz Cleared!\");\r\n  }, 0); //Wait until all of the clear logic runs before displaying message\r\n    setQuestionPage(prev => Math.min(questions.length - 1, 0))\r\n  }\r\n\r\n  function DetailedClear(){ //Clear button\r\n    return(<div>\r\n      <Button onClick={handleClear} style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}}>Clear</Button>\r\n    </div>)\r\n  }\r\n\r\n  function getSavedAnswer(page: number) { //Helper function to get and display the user's saved answer from storage\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\r\n    return savedAnswers[page] || \"\"; // Return the saved answer or an empty string if not present\r\n  }\r\n  \r\n  return (\r\n    <div className=\"Background\">\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n          <label htmlFor=\"question\" style={{ marginRight: \"10px\", fontSize: \"25px\" }}>\r\n            Percent Complete: {progress.toFixed(0)}%\r\n          </label>\r\n          <progress id=\"question\" value={progress} max=\"100\" style={{ height: \"45px\", width: \"300px\" }} />\r\n        </div>\r\n      <div style={{textAlign: \"center\"}}>\r\n        <h1>Here is the Detailed Career Page!</h1>\r\n        <div></div>\r\n        <Container style={{ border: \"2px solid red\" }}>\r\n            <p>\r\n            This assessment is designed to determine an appopriate career path going\r\n            forward. You will be asked a series of elaborate questions that may require some\r\n            additional thought to answer. Before you begin, make sure you're in a comfortable environment and\r\n            answer each question to your best ability.\r\n            </p>\r\n        </Container>\r\n      </div>\r\n      <div>\r\n      {currentQuestion && (\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center' }}>\r\n          <h2>{currentQuestion.text}\r\n          <Button \r\n            onClick={toggleExplanation} \r\n            style={{fontSize: '24px', marginLeft: '10px', background: 'transparent', border: 'none', cursor: 'pointer', color: 'blue' }}>\r\n            ?\r\n          </Button>\r\n          </h2>\r\n          {showExplanation && (\r\n            <div style={{ marginTop: '10px', padding: '10px', border: '1px solid lightgray', borderRadius: '5px', background: '#f9f9f9' }}>\r\n              <p>{currentQuestion.tip}</p>\r\n            </div>\r\n          )}\r\n          \r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '10px' }}>\r\n            <img src={detective2} alt=\"Detective\" style={{ width: '10%', height: '10%', marginRight: '10px' }} />\r\n              <textarea \r\n                value={tempAnswers[questionPage]} \r\n                onChange={handleAnswerChange} \r\n                style={{ width: '25%', height: '5em', resize: 'none' }} \r\n              />\r\n            <img src={questionMarks} alt=\"Question Marks\" style={{ width: '10%', height: '10%', marginLeft: '10px' }} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div style={{textAlign: \"center\"}}>\r\n        {currentQuestion && (<div style={{marginTop: \"20px\"}}>\r\n          <IsRecorded savedAnswer={getSavedAnswer(questionPage)} currentText={tempAnswers[questionPage]} /></div>\r\n        )}\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginTop: '20px', padding: \"0 37%\" }}>\r\n        <Button style={{background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} onClick={() => setQuestionPage(prev => Math.max(0, prev - 1))} disabled={questionPage === 0}>Previous</Button>\r\n        <Button style={{background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\", width: \"200px\"}} onClick={() => updateAnswered()}>Record Answer</Button>\r\n        <Button style={{background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} onClick={() => setQuestionPage(prev => Math.min(questions.length - 1, prev + 1))} disabled={questionPage === 6}>Next</Button>\r\n      </div>\r\n    </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"80px\" }}>\r\n        <DetailedSubmit detailedComplete={detailedComplete} toggleDetailed={toggleDetailed}/>\r\n        <DetailedClear />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}