{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Form } from \"react-bootstrap\"; // Assuming you're using react-bootstrap\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CareerComponent() {\n  _s();\n  const [progress, setProgress] = useState(0); // Start at 0%\n  const [answer, setAnswer] = useState(\"\");\n\n  // Example questions for the quiz\n  const questions = [{\n    id: 1,\n    label: \"Answer Option 1\"\n  }, {\n    id: 2,\n    label: \"Answer Option 2\"\n  }, {\n    id: 3,\n    label: \"Answer Option 3\"\n  }];\n  const totalQuestions = questions.length; // Total number of questions\n\n  // This function will be called when the answer changes\n  const updateAnswer = event => {\n    setAnswer(event.target.value);\n    setProgress(prevProgress => Math.min(prevProgress + 100 / totalQuestions, 100)); // Increment progress\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"question\",\n      children: \"Quiz Completion:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n      style: {\n        float: \"right\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\",\n        marginRight: \"30px\"\n      },\n      id: \"question\",\n      value: progress,\n      max: \"100\",\n      children: [progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Here is the Basic Career Page!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: questions.map(q => /*#__PURE__*/_jsxDEV(Form.Check, {\n        type: \"radio\",\n        label: q.label,\n        name: \"quizAnswer\",\n        value: q.label // Or some unique value\n        ,\n        onChange: updateAnswer // Call updateAnswer on change\n      }, q.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(CareerComponent, \"cGs0qcKhNmuPl7EIqeMGSPFaIQk=\");\n_c = CareerComponent;\nvar _c;\n$RefreshReg$(_c, \"CareerComponent\");","map":{"version":3,"names":["useState","Form","jsxDEV","_jsxDEV","CareerComponent","_s","progress","setProgress","answer","setAnswer","questions","id","label","totalQuestions","length","updateAnswer","event","target","value","prevProgress","Math","min","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","style","float","marginTop","marginBottom","marginRight","max","textAlign","map","q","Check","type","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\"; // Assuming you're using react-bootstrap\r\n\r\nexport function CareerComponent(): JSX.Element {\r\n    const [progress, setProgress] = useState<number>(0); // Start at 0%\r\n    const [answer, setAnswer] = useState<string>(\"\");\r\n    \r\n    // Example questions for the quiz\r\n    const questions = [\r\n        { id: 1, label: \"Answer Option 1\" },\r\n        { id: 2, label: \"Answer Option 2\" },\r\n        { id: 3, label: \"Answer Option 3\" },\r\n    ];\r\n\r\n    const totalQuestions = questions.length; // Total number of questions\r\n\r\n    // This function will be called when the answer changes\r\n    const updateAnswer = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setAnswer(event.target.value);\r\n        setProgress((prevProgress) => Math.min(prevProgress + (100 / totalQuestions), 100)); // Increment progress\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"question\">Quiz Completion:</label>\r\n            <progress\r\n                style={{ float: \"right\", marginTop: \"10px\", marginBottom: \"10px\", marginRight: \"30px\" }}\r\n                id=\"question\"\r\n                value={progress}\r\n                max=\"100\"\r\n            >\r\n                {progress}%\r\n            </progress>\r\n            \r\n            <h1 style={{ textAlign: \"center\" }}>Here is the Basic Career Page!</h1>\r\n\r\n            <Form>\r\n                {questions.map((q) => (\r\n                    <Form.Check\r\n                        key={q.id}\r\n                        type=\"radio\"\r\n                        label={q.label}\r\n                        name=\"quizAnswer\"\r\n                        value={q.label} // Or some unique value\r\n                        onChange={updateAnswer} // Call updateAnswer on change\r\n                    />\r\n                ))}\r\n            </Form>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,SAASC,eAAeA,CAAA,EAAgB;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAS,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;;EAEhD;EACA,MAAMU,SAAS,GAAG,CACd;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAC,EACnC;IAAED,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAC,EACnC;IAAED,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAkB,CAAC,CACtC;EAED,MAAMC,cAAc,GAAGH,SAAS,CAACI,MAAM,CAAC,CAAC;;EAEzC;EACA,MAAMC,YAAY,GAAIC,KAA0C,IAAK;IACjEP,SAAS,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7BX,WAAW,CAAEY,YAAY,IAAKC,IAAI,CAACC,GAAG,CAACF,YAAY,GAAI,GAAG,GAAGN,cAAe,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;EACzF,CAAC;EAED,oBACIV,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAOoB,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDxB,OAAA;MACIyB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEC,YAAY,EAAE,MAAM;QAAEC,WAAW,EAAE;MAAO,CAAE;MACxFrB,EAAE,EAAC,UAAU;MACbO,KAAK,EAAEZ,QAAS;MAChB2B,GAAG,EAAC,KAAK;MAAAX,QAAA,GAERhB,QAAQ,EAAC,GACd;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eAEXxB,OAAA;MAAIyB,KAAK,EAAE;QAAEM,SAAS,EAAE;MAAS,CAAE;MAAAZ,QAAA,EAAC;IAA8B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvExB,OAAA,CAACF,IAAI;MAAAqB,QAAA,EACAZ,SAAS,CAACyB,GAAG,CAAEC,CAAC,iBACbjC,OAAA,CAACF,IAAI,CAACoC,KAAK;QAEPC,IAAI,EAAC,OAAO;QACZ1B,KAAK,EAAEwB,CAAC,CAACxB,KAAM;QACf2B,IAAI,EAAC,YAAY;QACjBrB,KAAK,EAAEkB,CAAC,CAACxB,KAAM,CAAC;QAAA;QAChB4B,QAAQ,EAAEzB,YAAa,CAAC;MAAA,GALnBqB,CAAC,CAACzB,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACtB,EAAA,CA/CeD,eAAe;AAAAqC,EAAA,GAAfrC,eAAe;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}