{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\nimport { LoginForm } from './LoginForm';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  const [db, setDb] = useState(null);\n  const [accounts, setAccounts] = useState([{\n    username: \"\",\n    password: \"\"\n  }]);\n  const [savedUser, setSavedUser] = useState(\"\");\n  const checkInfo = (savedUsername, savedPassword, userInput, passInput) => {\n    if (userInput === savedUsername && passInput === savedPassword) {\n      return true;\n    } else {\n      alert(userInput !== savedUsername ? \"Wrong username entered!\" : \"Wrong password entered!\");\n      return false;\n    }\n  };\n  useEffect(() => {\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"UserDatabase\", 2);\n    request.onerror = event => {\n      console.error(\"Error opening user database!\", event);\n    };\n    request.onupgradeneeded = event => {\n      const dbInstance = event.target.result;\n      dbInstance.createObjectStore(\"users\", {\n        keyPath: \"username\"\n      });\n      console.log(\"Object store created.\");\n    };\n    request.onsuccess = () => {\n      const dbInstance = request.result;\n      setDb(dbInstance);\n      if (dbInstance) {\n        const transaction = dbInstance.transaction(\"users\", \"readonly\");\n        const store = transaction.objectStore(\"users\");\n        const getAllRequest = store.getAll();\n        getAllRequest.onsuccess = () => {\n          const allUsers = getAllRequest.result;\n          const rememberedUsernames = allUsers.filter(user => user.remembered).map(user => user.username);\n          setAccounts(rememberedUsernames);\n          if (rememberedUsernames.length > 0) {\n            setSavedUser(rememberedUsernames[0]);\n            setUserInfo(prev => ({\n              ...prev,\n              username: rememberedUsernames[0]\n            }));\n          }\n        };\n        getAllRequest.onerror = event => {\n          console.error(\"Error retrieving users from the users object store:\", event);\n        };\n      } else {\n        console.error(\"Database is not initialized.\");\n      }\n    };\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!userInfo.username || !userInfo.password) {\n      console.error(\"Username and password must be provided.\");\n      return;\n    }\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readwrite\");\n      const store = transaction.objectStore(\"users\");\n      const userQuery = store.get(userInfo.username);\n      userQuery.onsuccess = () => {\n        if (userQuery.result) {\n          const savedUsername = userQuery.result.username;\n          const savedPassword = userQuery.result.password;\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\n            setIsLoggedIn(true);\n            clearForm();\n          }\n        } else if (formTitle === \"Create Account\") {\n          const newUser = {\n            username: userInfo.username,\n            password: userInfo.password,\n            remembered: remember\n          };\n          store.put(newUser).onsuccess = () => {\n            if (remember) {\n              setAccounts(prevAccounts => {\n                const updatedAccounts = [...prevAccounts, userInfo.username];\n                localStorage.setItem(\"savedAccounts\", JSON.stringify(updatedAccounts));\n                return updatedAccounts;\n              });\n              setSavedUser(userInfo.username);\n              setUserInfo(prev => ({\n                ...prev,\n                username: userInfo.username\n              }));\n            }\n            setIsLoggedIn(true);\n            alert(\"Account creation success!\");\n            clearForm();\n          };\n        } else {\n          alert(\"User does not exist. Please create an account first.\");\n          clearForm();\n        }\n      };\n      userQuery.onerror = () => {\n        console.error(\"Error querying user data\");\n      };\n      transaction.onerror = event => {\n        console.error(\"Transaction failed:\", event);\n      };\n      if (remember) {\n        localStorage.setItem(\"savedUsername\", userInfo.username);\n      } else {\n        localStorage.removeItem(\"savedUsername\");\n      }\n    } else {\n      console.error(\"Database not initialized\");\n    }\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const clearForm = () => {\n    setUserInfo({\n      username: \"\",\n      password: \"\"\n    });\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  const handleRemember = () => {\n    const newRememberState = !remember;\n    setRemember(newRememberState);\n    localStorage.setItem(\"rememberMe\", newRememberState ? \"true\" : \"false\");\n    console.log(\"Remember Me state changed to:\", newRememberState);\n  };\n  const showForm = title => {\n    setFormTitle(title);\n    toggleForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: jerboa,\n        alt: \"Four-Toed Jerboa\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkred\"\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showForm(\"Log in\"),\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkblue\"\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      updateStatus: updateStatus,\n      savedUser: savedUser,\n      setSavedUser: setSavedUser,\n      accounts: accounts,\n      closeForm: toggleForm,\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"It1H82A3jWq1v5m6x9nMb1kLJvg=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","jerboa","LoginForm","Button","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","db","setDb","accounts","setAccounts","savedUser","setSavedUser","checkInfo","savedUsername","savedPassword","userInput","passInput","alert","indexedDB","window","request","open","onerror","event","console","error","onupgradeneeded","dbInstance","target","result","createObjectStore","keyPath","log","onsuccess","transaction","store","objectStore","getAllRequest","getAll","allUsers","rememberedUsernames","filter","user","remembered","map","length","prev","handleSubmit","preventDefault","userQuery","get","clearForm","newUser","put","prevAccounts","updatedAccounts","localStorage","setItem","JSON","stringify","removeItem","toggleForm","updateStatus","name","value","prevInfo","handleLogout","handleRemember","newRememberState","showForm","title","children","src","alt","style","float","width","height","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","borderRadius","backgroundColor","closeForm","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\r\nimport { LoginForm } from './LoginForm';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<{ username: string; password: string }>({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [formTitle, setFormTitle] = useState<string>(\"Create Account\");\r\n  const [db, setDb] = useState<IDBDatabase | null>(null);\r\n  const [accounts, setAccounts] = useState<{ username: string; password: string }[]>([{ username: \"\", password: \"\" }]);\r\n  const [savedUser, setSavedUser] = useState<string>(\"\");\r\n\r\n  const checkInfo = (savedUsername: string, savedPassword: string, userInput: string, passInput: string) => {\r\n    if (userInput === savedUsername && passInput === savedPassword) {\r\n      return true;\r\n    } else {\r\n      alert(userInput !== savedUsername ? \"Wrong username entered!\" : \"Wrong password entered!\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const indexedDB = window.indexedDB;\r\n    const request = indexedDB.open(\"UserDatabase\", 2);\r\n\r\n    request.onerror = (event) => {\r\n      console.error(\"Error opening user database!\", event);\r\n    };\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const dbInstance = (event.target as IDBOpenDBRequest).result;\r\n      dbInstance.createObjectStore(\"users\", { keyPath: \"username\" });\r\n      console.log(\"Object store created.\");\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      const dbInstance = request.result;\r\n      setDb(dbInstance);\r\n\r\n      if (dbInstance) {\r\n        const transaction = dbInstance.transaction(\"users\", \"readonly\");\r\n        const store = transaction.objectStore(\"users\");\r\n        const getAllRequest = store.getAll();\r\n\r\n        getAllRequest.onsuccess = () => {\r\n          const allUsers = getAllRequest.result as { username: string; remembered: boolean }[];\r\n          const rememberedUsernames = allUsers\r\n            .filter(user => user.remembered)\r\n            .map(user => user.username);\r\n          setAccounts(rememberedUsernames);\r\n          \r\n          if (rememberedUsernames.length > 0) {\r\n            setSavedUser(rememberedUsernames[0]);\r\n            setUserInfo(prev => ({ ...prev, username: rememberedUsernames[0] }));\r\n          }\r\n        };\r\n\r\n        getAllRequest.onerror = (event) => {\r\n          console.error(\"Error retrieving users from the users object store:\", event);\r\n        };\r\n      } else {\r\n        console.error(\"Database is not initialized.\");\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!userInfo.username || !userInfo.password) {\r\n      console.error(\"Username and password must be provided.\");\r\n      return;\r\n    }\r\n\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readwrite\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const userQuery = store.get(userInfo.username);\r\n\r\n      userQuery.onsuccess = () => {\r\n        if (userQuery.result) {\r\n          const savedUsername = userQuery.result.username;\r\n          const savedPassword = userQuery.result.password;\r\n\r\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\r\n            setIsLoggedIn(true);\r\n            clearForm();\r\n          }\r\n        } else if (formTitle === \"Create Account\") {\r\n          const newUser = { username: userInfo.username, password: userInfo.password, remembered: remember };\r\n          store.put(newUser).onsuccess = () => {\r\n            if (remember) {\r\n              setAccounts(prevAccounts => {\r\n                const updatedAccounts = [...prevAccounts, userInfo.username];\r\n                localStorage.setItem(\"savedAccounts\", JSON.stringify(updatedAccounts));\r\n                return updatedAccounts;\r\n              });\r\n              setSavedUser(userInfo.username);\r\n              setUserInfo(prev => ({ ...prev, username: userInfo.username }));\r\n            }\r\n            setIsLoggedIn(true);\r\n            alert(\"Account creation success!\");\r\n            clearForm();\r\n          };\r\n        } else {\r\n          alert(\"User does not exist. Please create an account first.\");\r\n          clearForm();\r\n        }\r\n      };\r\n\r\n      userQuery.onerror = () => {\r\n        console.error(\"Error querying user data\");\r\n      };\r\n\r\n      transaction.onerror = (event) => {\r\n        console.error(\"Transaction failed:\", event);\r\n      };\r\n\r\n      if (remember) {\r\n        localStorage.setItem(\"savedUsername\", userInfo.username);\r\n      } else {\r\n        localStorage.removeItem(\"savedUsername\");\r\n      }\r\n    } else {\r\n      console.error(\"Database not initialized\");\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setUserInfo({ username: \"\", password: \"\" });\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUserInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    const newRememberState = !remember;\r\n    setRemember(newRememberState);\r\n    localStorage.setItem(\"rememberMe\", newRememberState ? \"true\" : \"false\");\r\n    console.log(\"Remember Me state changed to:\", newRememberState);\r\n  };\r\n\r\n  const showForm = (title: string) => {\r\n    setFormTitle(title);\r\n    toggleForm();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <img\r\n            src={jerboa}\r\n            alt=\"Four-Toed Jerboa\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title={userInfo.username}\r\n          />\r\n          <Button\r\n            onClick={handleLogout}\r\n            style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkred\" }}\r\n          >\r\n            Log out\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title=\"Guest\"\r\n          />\r\n          <Button\r\n            onClick={() => showForm(\"Log in\")}\r\n            style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkblue\" }}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          updateStatus={updateStatus}\r\n          savedUser={savedUser}\r\n          setSavedUser={setSavedUser}\r\n          accounts={accounts}\r\n          closeForm={toggleForm}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}