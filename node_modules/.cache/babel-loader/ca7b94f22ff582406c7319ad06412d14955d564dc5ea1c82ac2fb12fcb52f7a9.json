{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport './CSS/Background.css';\nimport { useEffect, useState } from \"react\";\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent({\n  basicComplete,\n  toggleBasic,\n  savedCareer,\n  setCareer,\n  count,\n  setCount\n}) {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  function handleSave() {\n    localStorage.setItem(\"quizProgress\", JSON.stringify(progress)); //keep track of question and progress states\n    localStorage.setItem(\"quizAnswers\", JSON.stringify(questions));\n    setCount(count + 1);\n    alert(\"Quiz saved!\");\n  }\n  function handleSubmit({\n    basicComplete,\n    toggleBasic\n  }) {\n    toggleBasic(!basicComplete);\n    handleSave();\n    setCareer(\"quizAnswers\");\n    alert(\"Thanks for completing the Basic Career quiz!\");\n  }\n  const clearStorage = () => {\n    console.log(\"Clearing local storage\");\n    localStorage.removeItem(\"quizProgress\");\n    localStorage.removeItem(\"quizAnswers\");\n    sessionStorage.removeItem(\"visited\"); // Ensure this is cleared\n    setQuestions([]);\n  };\n  useEffect(() => {\n    const savedProgress = localStorage.getItem(\"quizProgress\");\n    const savedAnswers = localStorage.getItem(\"quizAnswers\");\n    const hasVisited = sessionStorage.getItem(\"visited\");\n    console.log(\"Has Visited:\", hasVisited); // Debug output\n\n    if (!hasVisited) {\n      clearStorage(); // This will now clear sessionStorage correctly\n      sessionStorage.setItem(\"visited\", \"true\"); // Set the visited flag\n      console.log(\"CHILLIN IN THE WRONG SPOT\"); // Expect this on the first visit\n    } else {\n      setProgress(JSON.parse(savedProgress || \"0\")); // Load saved progress\n      setQuestions(JSON.parse(savedAnswers || \"[]\")); // Load saved answers\n      console.log(\"HELLO CAN YOU HEAR ME\"); // Expect this on subsequent visits\n    }\n  }, []);\n  function BasicSubmit({\n    basicComplete,\n    toggleBasic\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\"\n        },\n        disabled: progress < 100,\n        onClick: () => handleSubmit({\n          basicComplete,\n          toggleBasic\n        }),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  function BasicSave({\n    savedCareer,\n    setCareer\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n  function updateAnswer(event, index, selectIndex) {\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[index].type === \"radio\") {\n      // Set all to false and only mark the selected index as true\n      updatedQuestions[index].selected = updatedQuestions[index].selected.map((_, i) => i === selectIndex);\n    } else {\n      // Checkbox logic\n      updatedQuestions[index].selected[selectIndex] = event.target.checked;\n    }\n    setQuestions(updatedQuestions);\n    updateProgress(updatedQuestions);\n  }\n  function updateProgress(updatedQuestions) {\n    const totalQuestions = updatedQuestions.length;\n    const answeredQuestions = updatedQuestions.filter(question => question.selected.some(isSelected => isSelected)).length;\n    const progressPercentage = answeredQuestions / totalQuestions * 100;\n    setProgress(progressPercentage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Basic\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\",\n            fontSize: \"25px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\",\n          style: {\n            height: \"45px\",\n            width: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          style: {\n            border: \"2px solid red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This assessment is designed to determine an appropriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"100px\",\n          marginRight: \"100px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 4,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: question.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: question.choices.map((choice, selectIndex) => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: question.type,\n                  label: choice.label,\n                  name: `basic-question-${index}` // Unique name for each question\n                  ,\n                  value: choice.id,\n                  checked: question.selected[selectIndex] // Keep track of selected state\n                  ,\n                  onChange: event => updateAnswer(event, index, selectIndex)\n                }, choice.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"1350px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            float: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(BasicSave, {\n            count: count,\n            setCount: setCount,\n            savedCareer: savedCareer,\n            setCareer: setCareer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(BasicSubmit, {\n            basicComplete: basicComplete,\n            toggleBasic: toggleBasic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicCareerComponent, \"5yQ3GEJEjuzHm45xDkeSDuF5NrU=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["useEffect","useState","Button","Container","Form","Row","Col","jsxDEV","_jsxDEV","BasicCareerComponent","basicComplete","toggleBasic","savedCareer","setCareer","count","setCount","_s","progress","setProgress","questions","setQuestions","handleSave","localStorage","setItem","JSON","stringify","alert","handleSubmit","clearStorage","console","log","removeItem","sessionStorage","savedProgress","getItem","savedAnswers","hasVisited","parse","BasicSubmit","children","style","height","width","borderRadius","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","BasicSave","updateAnswer","event","index","selectIndex","updatedQuestions","type","selected","map","_","i","target","checked","updateProgress","totalQuestions","length","answeredQuestions","filter","question","some","isSelected","progressPercentage","className","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","fontSize","toFixed","id","value","max","textAlign","border","marginLeft","xs","md","text","choices","choice","Check","label","name","onChange","float","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import './CSS/Background.css';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { FormCheckType } from 'react-bootstrap/esm/FormCheck';\r\n\r\nexport interface SubmitButton {\r\n  basicComplete: boolean;\r\n  toggleBasic: (notBasic: boolean) => void;\r\n}\r\n\r\nexport interface saveButton\r\n{\r\n  savedCareer: string\r\n  setCareer: (newState: string) => void;\r\n  count: number\r\n  setCount: (clicks: number) => void;\r\n}\r\n\r\ninterface Question \r\n{\r\n  text: string;\r\n  type: string;\r\n  choices: { id: number; label: string }[];\r\n  selected: boolean[];\r\n}\r\n\r\nexport function BasicCareerComponent({ basicComplete, toggleBasic , savedCareer, setCareer, count, setCount}: SubmitButton & saveButton): JSX.Element \r\n{\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n\r\n  function handleSave()\r\n  {\r\n    localStorage.setItem(\"quizProgress\", JSON.stringify(progress)); //keep track of question and progress states\r\n    localStorage.setItem(\"quizAnswers\", JSON.stringify(questions));\r\n    setCount(count + 1);\r\n    alert(\"Quiz saved!\");\r\n  }\r\n\r\n  function handleSubmit({basicComplete, toggleBasic}: SubmitButton)\r\n  {\r\n    toggleBasic(!basicComplete);\r\n    handleSave();\r\n    setCareer(\"quizAnswers\");\r\n    alert(\"Thanks for completing the Basic Career quiz!\");\r\n  }\r\n\r\n  const clearStorage = () => {\r\n    console.log(\"Clearing local storage\");\r\n    localStorage.removeItem(\"quizProgress\");\r\n    localStorage.removeItem(\"quizAnswers\");\r\n    sessionStorage.removeItem(\"visited\"); // Ensure this is cleared\r\n    setQuestions([]);\r\n  };\r\n  \r\n\r\nuseEffect(() => {\r\n  const savedProgress = localStorage.getItem(\"quizProgress\");\r\n  const savedAnswers = localStorage.getItem(\"quizAnswers\");\r\n  const hasVisited = sessionStorage.getItem(\"visited\");\r\n\r\n  console.log(\"Has Visited:\", hasVisited); // Debug output\r\n\r\n  if (!hasVisited) {\r\n    clearStorage(); // This will now clear sessionStorage correctly\r\n    sessionStorage.setItem(\"visited\", \"true\"); // Set the visited flag\r\n    console.log(\"CHILLIN IN THE WRONG SPOT\"); // Expect this on the first visit\r\n  } else {\r\n    setProgress(JSON.parse(savedProgress || \"0\")); // Load saved progress\r\n    setQuestions(JSON.parse(savedAnswers || \"[]\")); // Load saved answers\r\n    console.log(\"HELLO CAN YOU HEAR ME\"); // Expect this on subsequent visits\r\n  }\r\n}, []);\r\n\r\n\r\n  function BasicSubmit({basicComplete, toggleBasic}: SubmitButton): JSX.Element {\r\n    return(<div>\r\n      <Button style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\"}} disabled={progress < 100} onClick={() => handleSubmit({basicComplete, toggleBasic})}>Submit</Button>\r\n    </div>)\r\n  }\r\n\r\n  function BasicSave({savedCareer, setCareer}: saveButton): JSX.Element \r\n  {\r\n    return(<div>\r\n      <Button onClick = {handleSave} style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\"}}>Save</Button>\r\n    </div>)\r\n  }\r\n\r\n\r\n  function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, index: number, selectIndex: number) {\r\n    const updatedQuestions = [...questions];\r\n\r\n    if (updatedQuestions[index].type === \"radio\") {\r\n      // Set all to false and only mark the selected index as true\r\n      updatedQuestions[index].selected = updatedQuestions[index].selected.map((_, i) => i === selectIndex);\r\n    } else {\r\n      // Checkbox logic\r\n      updatedQuestions[index].selected[selectIndex] = event.target.checked;\r\n    }\r\n    setQuestions(updatedQuestions);\r\n    updateProgress(updatedQuestions);\r\n  }\r\n\r\n  function updateProgress(updatedQuestions: typeof questions): void {\r\n    const totalQuestions = updatedQuestions.length;\r\n    const answeredQuestions = updatedQuestions.filter((question) =>\r\n      question.selected.some((isSelected) => isSelected)\r\n    ).length;\r\n    const progressPercentage = (answeredQuestions / totalQuestions) * 100;\r\n    setProgress(progressPercentage);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Basic\">\r\n      <div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n          <label htmlFor=\"question\" style={{ marginRight: \"10px\", fontSize: \"25px\" }}>\r\n            Percent Complete: {progress.toFixed(0)}%\r\n          </label>\r\n          <progress id=\"question\" value={progress} max=\"100\" style={{ height: \"45px\", width: \"300px\" }} />\r\n        </div>\r\n        <h1 style={{ textAlign: \"center\" }}>Here is the Basic Career Page!</h1>\r\n        <br />\r\n        <div>\r\n          <Container style={{ border: \"2px solid red\" }}>\r\n            <p>\r\n              This assessment is designed to determine an appropriate career path going forward.\r\n              You will be asked a series of multiple choice questions. If you're looking for more\r\n              in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're\r\n              in a comfortable environment and answer each question to the best of your ability.\r\n            </p>\r\n          </Container>\r\n        </div>\r\n        <div style={{ marginLeft: \"100px\", marginRight: \"100px\" }}>\r\n          <br />\r\n          <Row>\r\n            {questions.map((question, index) => (\r\n              <Col key={index} xs={12} md={4}> {/* 4 columns in medium size and above, full width on smaller screens */}\r\n                <div>\r\n                  <b>{question.text}</b>\r\n                  <Form>\r\n                    {question.choices.map((choice, selectIndex) => (\r\n                      <Form.Check\r\n                        key={choice.id}\r\n                        type={question.type as FormCheckType}\r\n                        label={choice.label}\r\n                        name={`basic-question-${index}`} // Unique name for each question\r\n                        value={choice.id}\r\n                        checked={question.selected[selectIndex]} // Keep track of selected state\r\n                        onChange={(event) => updateAnswer(event, index, selectIndex)}\r\n                      />\r\n                    ))}\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </div>\r\n        <div style={{ marginLeft: \"1350px\"}}>\r\n    <div style = {{display: \"flex\", float: \"right\"}}>\r\n    <BasicSave count = {count} setCount = {setCount} savedCareer= {savedCareer} setCareer={setCareer}></BasicSave>\r\n    <BasicSubmit basicComplete={basicComplete} toggleBasic={toggleBasic}/>\r\n    </div>\r\n</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}