{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport { Form } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport './LoginForm.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = ({\n  userInfo,\n  setUserInfo,\n  remember,\n  setRemember,\n  updateStatus,\n  handleRemember,\n  handleSubmit,\n  closeForm,\n  accounts,\n  selectedUser,\n  setSelect,\n  formTitle\n}) => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [showResetForm, setShowResetForm] = useState(false); // New state for controlling visibility\n\n  function updatePassword(event) {\n    setNewPassword(event.target.value);\n  }\n  function resetPassword() {\n    closeForm();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"passwordReset\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: newPassword,\n          onChange: updatePassword,\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this);\n  }\n  const handleResetClick = () => {\n    setShowResetForm(true); // Show the reset password form when the link is clicked\n  };\n  const handleUserSelect = event => {\n    const selectedUsername = event.target.value;\n    setSelect(selectedUsername);\n  };\n  useEffect(() => {\n    if (formTitle === \"Log in\" && selectedUser) {\n      const selectedAccount = accounts.find(account => account.username === selectedUser);\n      if (selectedAccount) {\n        var _selectedAccount$reme;\n        setUserInfo({\n          username: selectedAccount.username,\n          password: selectedAccount.password,\n          remembered: (_selectedAccount$reme = selectedAccount.remembered) !== null && _selectedAccount$reme !== void 0 ? _selectedAccount$reme : false\n        });\n        console.log(\"LoginForm updated userInfo:\", selectedAccount); // Debugging log\n      }\n    }\n  }, [accounts, formTitle, selectedUser, setUserInfo]);\n  console.log(\"Current userInfo:\", userInfo); // Log to see current state of userInfo  \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-popup\",\n    id: \"myForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), formTitle === \"Log in\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"25px\"\n        },\n        children: accounts.length === 0 ? /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"savedUsers\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"No Saved Usernames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: selectedUser,\n            onChange: handleUserSelect,\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"No saved users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"savedUsers\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Saved Usernames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: selectedUser,\n            onChange: handleUserSelect,\n            children: accounts.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.username,\n              children: user.username\n            }, user.username, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInfo.username,\n        placeholder: \"Enter Username\",\n        name: \"username\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"psw\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: userInfo.password,\n        placeholder: \"Enter Password\",\n        name: \"password\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleResetClick,\n        style: {\n          cursor: 'pointer',\n          color: 'blue',\n          textDecoration: 'underline'\n        },\n        children: \"Forgot Password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }, this), showResetForm && resetPassword(), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '8px'\n          },\n          children: \"Remember me?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          id: \"save-user\",\n          name: \"save-user\",\n          checked: remember,\n          onChange: handleRemember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        type: \"button\",\n        className: \"btn cancel\",\n        onClick: closeForm,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"VNlq3K919aStiu1ezYMvQ1d4UCE=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Form","useEffect","useState","React","jsxDEV","_jsxDEV","LoginForm","userInfo","setUserInfo","remember","setRemember","updateStatus","handleRemember","handleSubmit","closeForm","accounts","selectedUser","setSelect","formTitle","_s","newPassword","setNewPassword","showResetForm","setShowResetForm","updatePassword","event","target","value","resetPassword","children","Group","controlId","Control","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","handleResetClick","handleUserSelect","selectedUsername","selectedAccount","find","account","username","_selectedAccount$reme","password","remembered","console","log","className","id","onSubmit","style","marginBottom","length","Label","Select","disabled","map","user","htmlFor","name","required","onClick","cursor","color","textDecoration","display","alignItems","marginRight","Check","checked","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/LoginForm.tsx"],"sourcesContent":["import { Form} from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport './LoginForm.css';\r\nimport React from 'react';\r\n\r\nexport interface LoginFormProps {\r\n  closeForm: () => void;\r\n  userInfo: { username: string; password: string, remembered: boolean };\r\n  setUserInfo: (value: React.SetStateAction<{ username: string; password: string, remembered: boolean }>) => void;\r\n  remember: boolean;\r\n  setRemember: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateStatus: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleRemember: () => void;\r\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\r\n  accounts: { username: string; password: string, remembered: boolean}[];\r\n  selectedUser: string;\r\n  setSelect: (value: React.SetStateAction<string>) => void;\r\n  formTitle: string;\r\n}\r\n\r\nexport const LoginForm: React.FC<LoginFormProps> = ({\r\n  userInfo,\r\n  setUserInfo,\r\n  remember,\r\n  setRemember,\r\n  updateStatus,\r\n  handleRemember,\r\n  handleSubmit,\r\n  closeForm,\r\n  accounts,\r\n  selectedUser,\r\n  setSelect,\r\n  formTitle,\r\n}) => {\r\n\r\n  const [newPassword, setNewPassword] = useState<string>(\"\");\r\n  const [showResetForm, setShowResetForm] = useState<boolean>(false); // New state for controlling visibility\r\n\r\nfunction updatePassword(event: React.ChangeEvent<HTMLInputElement>)\r\n{\r\n  setNewPassword(event.target.value);\r\n}\r\n\r\nfunction resetPassword(): JSX.Element\r\n{\r\n  closeForm();\r\n  return(\r\n  <div>\r\n    <Form.Group controlId= \"passwordReset\">\r\n    <Form.Control\r\n      type = \"password\"\r\n      value = {newPassword}\r\n      onChange={updatePassword}\r\n      placeholder = \"Enter password\"\r\n      >\r\n    </Form.Control>\r\n    </Form.Group>\r\n  </div>)\r\n}\r\n\r\n  const handleResetClick = () => {\r\n    setShowResetForm(true); // Show the reset password form when the link is clicked\r\n  };\r\n\r\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedUsername = event.target.value;\r\n    setSelect(selectedUsername);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formTitle === \"Log in\" && selectedUser) {\r\n      const selectedAccount = accounts.find(account => account.username === selectedUser);\r\n      if (selectedAccount) {\r\n        setUserInfo({\r\n          username: selectedAccount.username,\r\n          password: selectedAccount.password,\r\n          remembered: selectedAccount.remembered ?? false,\r\n        });\r\n        console.log(\"LoginForm updated userInfo:\", selectedAccount); // Debugging log\r\n      }\r\n    }\r\n  }, [accounts, formTitle, selectedUser, setUserInfo]);  \r\n  \r\n  console.log(\"Current userInfo:\", userInfo); // Log to see current state of userInfo  \r\n  \r\n  return (\r\n    <div className=\"form-popup\" id=\"myForm\">\r\n      <form className=\"form-container\" onSubmit={handleSubmit}>\r\n        <h1>{formTitle}</h1>\r\n        {formTitle === \"Log in\" && (\r\n          <div style={{ marginBottom: \"25px\" }}>\r\n            {accounts.length === 0 ? (\r\n              <Form.Group controlId=\"savedUsers\">\r\n                <Form.Label>No Saved Usernames</Form.Label>\r\n                <Form.Select value={selectedUser} onChange={handleUserSelect} disabled>\r\n                  <option>No saved users</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n            ) : (\r\n              <Form.Group controlId=\"savedUsers\">\r\n                <Form.Label>Saved Usernames</Form.Label>\r\n                <Form.Select value={selectedUser} onChange={handleUserSelect}>\r\n                  {accounts.map((user) => (\r\n                    <option key={user.username} value={user.username}>\r\n                      {user.username}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        <label htmlFor=\"username\"><b>Username</b></label>\r\n        <input\r\n          type=\"text\"\r\n          value={userInfo.username}\r\n          placeholder=\"Enter Username\"\r\n          name=\"username\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n        <label htmlFor=\"psw\"><b>Password</b></label>\r\n        <input\r\n          type=\"password\"\r\n          value={userInfo.password}\r\n          placeholder=\"Enter Password\"\r\n          name=\"password\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n       <div\r\n          onClick={handleResetClick}\r\n          style={{ cursor: 'pointer', color: 'blue', textDecoration: 'underline' }}\r\n        >\r\n          Forgot Password?\r\n        </div>\r\n        {/* Render Reset Password Form if triggered */}\r\n        {showResetForm && resetPassword()}\r\n\r\n        <button type=\"submit\" className=\"btn\">Login</button>\r\n        \r\n        {/* Remember me option */}\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <span style={{ marginRight: '8px' }}>Remember me?</span>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"save-user\"\r\n            name=\"save-user\"\r\n            checked={remember}\r\n            onChange={handleRemember}\r\n          />\r\n        </div>\r\n        \r\n        <button style={{ marginTop: \"10px\" }} type=\"button\" className=\"btn cancel\" onClick={closeForm}>Close</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}