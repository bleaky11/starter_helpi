{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\LoginForm.tsx\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = ({\n  userInfo,\n  setUserInfo,\n  remember,\n  setRemember,\n  updateStatus,\n  handleRemember,\n  handleSubmit,\n  closeForm,\n  accounts,\n  savedUser,\n  setSavedUser,\n  formTitle,\n  db\n}) => {\n  const handleUserSelect = event => {\n    const selectedUsername = event.target.value;\n    setSavedUser(selectedUsername);\n    setUserInfo(prev => ({\n      ...prev,\n      username: selectedUsername\n    }));\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readonly\");\n      const store = transaction.objectStore(\"users\");\n      const userQuery = store.get(selectedUsername);\n      userQuery.onsuccess = () => {\n        if (userQuery.result) {\n          setUserInfo({\n            username: userQuery.result.username,\n            password: userQuery.result.password\n          });\n        }\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-popup\",\n    id: \"myForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"savedUsers\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: accounts.length === 0 ? \"No Saved Usernames\" : \"Saved Usernames\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            value: savedUser,\n            onChange: handleUserSelect,\n            children: accounts.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user,\n              children: user\n            }, user, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInfo.username,\n        placeholder: \"Enter Username\",\n        name: \"username\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"psw\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: userInfo.password,\n        placeholder: \"Enter Password\",\n        name: \"password\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '8px'\n          },\n          children: \"Remember me?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          id: \"save-user\",\n          name: \"save-user\",\n          checked: remember,\n          onChange: handleRemember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        type: \"button\",\n        className: \"btn cancel\",\n        onClick: closeForm,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Form","jsxDEV","_jsxDEV","LoginForm","userInfo","setUserInfo","remember","setRemember","updateStatus","handleRemember","handleSubmit","closeForm","accounts","savedUser","setSavedUser","formTitle","db","handleUserSelect","event","selectedUsername","target","value","prev","username","transaction","store","objectStore","userQuery","get","onsuccess","result","password","className","id","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","Group","controlId","Label","length","Select","onChange","map","user","htmlFor","type","placeholder","name","required","display","alignItems","marginRight","Check","checked","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/LoginForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport './LoginForm.css';\r\n\r\nexport interface LoginFormProps {\r\n  closeForm: () => void;\r\n  userInfo: { username: string; password: string };\r\n  setUserInfo: (value: React.SetStateAction<{ username: string; password: string }>) => void;\r\n  remember: boolean;\r\n  setRemember: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateStatus: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleRemember: () => void;\r\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\r\n  accounts: string[];\r\n  savedUser: string;\r\n  setSavedUser: (value: React.SetStateAction<string>) => void;\r\n  formTitle: string;\r\n  db: IDBDatabase | null;\r\n}\r\n\r\nexport const LoginForm: React.FC<LoginFormProps> = ({\r\n  userInfo,\r\n  setUserInfo,\r\n  remember,\r\n  setRemember,\r\n  updateStatus,\r\n  handleRemember,\r\n  handleSubmit,\r\n  closeForm,\r\n  accounts,\r\n  savedUser,\r\n  setSavedUser,\r\n  formTitle,\r\n  db,\r\n}) => {\r\n  \r\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedUsername = event.target.value;\r\n    setSavedUser(selectedUsername);\r\n    setUserInfo((prev) => ({ ...prev, username: selectedUsername }));\r\n\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readonly\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const userQuery = store.get(selectedUsername);\r\n\r\n      userQuery.onsuccess = () => {\r\n        if (userQuery.result) {\r\n          setUserInfo({ username: userQuery.result.username, password: userQuery.result.password });\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-popup\" id=\"myForm\">\r\n      <form className=\"form-container\" onSubmit={handleSubmit}>\r\n        <h1>{formTitle}</h1>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Form.Group controlId=\"savedUsers\">\r\n            <Form.Label>{accounts.length === 0 ? \"No Saved Usernames\" : \"Saved Usernames\"}</Form.Label>\r\n            <Form.Select value={savedUser} onChange={handleUserSelect}>\r\n              {accounts.map((user) => (\r\n                <option key={user} value={user}>\r\n                  {user}\r\n                </option>\r\n              ))}\r\n            </Form.Select>\r\n          </Form.Group>\r\n        </div>\r\n\r\n        <label htmlFor=\"username\"><b>Username</b></label>\r\n        <input\r\n          type=\"text\"\r\n          value={userInfo.username}\r\n          placeholder=\"Enter Username\"\r\n          name=\"username\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n        <label htmlFor=\"psw\"><b>Password</b></label>\r\n        <input\r\n          type=\"password\"\r\n          value={userInfo.password}\r\n          placeholder=\"Enter Password\"\r\n          name=\"password\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"btn\">Login</button>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <span style={{ marginRight: '8px' }}>Remember me?</span>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"save-user\"\r\n            name=\"save-user\"\r\n            checked={remember}\r\n            onChange={handleRemember}\r\n          />\r\n        </div>\r\n        <button style={{ marginTop: \"10px\" }} type=\"button\" className=\"btn cancel\" onClick={closeForm}>Close</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}