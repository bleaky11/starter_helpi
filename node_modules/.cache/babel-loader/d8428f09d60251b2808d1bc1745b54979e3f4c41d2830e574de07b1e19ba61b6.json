{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { backgroundStyle } from \"./CSS/Background\";\nimport { useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent() {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [questions, setQuestions] = useState([{\n    text: \"Mock Question #1\",\n    choices: [{\n      id: 1,\n      label: \"choice-1\"\n    }, {\n      id: 2,\n      label: \"choice-2\"\n    }, {\n      id: 3,\n      label: \"choice-3\"\n    }],\n    selected: [false, false, false]\n  }, {\n    text: \"Mock Question #2\",\n    choices: [{\n      id: 1,\n      label: \"choice-1\"\n    }, {\n      id: 2,\n      label: \"choice-2\"\n    }, {\n      id: 3,\n      label: \"choice-3\"\n    }],\n    selected: [false, false, false]\n  }, {\n    text: \"Mock Question #3\",\n    choices: [{\n      id: 1,\n      label: \"choice-1\"\n    }, {\n      id: 2,\n      label: \"choice-2\"\n    }, {\n      id: 3,\n      label: \"choice-3\"\n    }],\n    selected: [false, false, false]\n  }]);\n  function updateAnswer(event, questionIndex, choiceIndex) {\n    const updatedQuestions = [...questions];\n\n    // Update the selected state based on whether the checkbox is checked or unchecked\n    updatedQuestions[questionIndex].selected[choiceIndex] = event.target.checked;\n    setQuestions(updatedQuestions);\n\n    // Only update progress if there's at least one selection\n    updateProgress(questionIndex);\n  }\n  function updateProgress(index) {\n    // Check if at least one checkbox is selected\n    const isAnySelected = questions[index].selected.some(isSelected => isSelected);\n    if (isAnySelected) {\n      // Update progress only if there is at least one selected\n      setProgress(prevProgress => Math.min(prevProgress + 100 / questions.length, 100));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          style: {\n            border: \"2px solid red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This assessment is designed to determine an appropriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: question.choices.map((choice, choiceIndex) => /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: choice.label,\n              checked: question.selected[choiceIndex],\n              onChange: event => updateAnswer(event, questionIndex, choiceIndex)\n            }, choice.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, questionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(BasicCareerComponent, \"jipm9uGuBMPMMnRSQ1T3d78AIkY=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["backgroundStyle","useState","Container","Form","jsxDEV","_jsxDEV","BasicCareerComponent","_s","progress","setProgress","questions","setQuestions","text","choices","id","label","selected","updateAnswer","event","questionIndex","choiceIndex","updatedQuestions","target","checked","updateProgress","index","isAnySelected","some","isSelected","prevProgress","Math","min","length","style","children","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","value","max","textAlign","border","marginLeft","map","question","choice","Check","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { backgroundStyle } from \"./CSS/Background\";\r\nimport { useState } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\n\r\nexport function BasicCareerComponent(): JSX.Element \r\n{\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [questions, setQuestions] = useState([\r\n        { text: \"Mock Question #1\", choices: [{ id: 1, label: \"choice-1\" }, { id: 2, label: \"choice-2\" }, { id: 3, label: \"choice-3\" }], selected: [false, false, false] },\r\n        { text: \"Mock Question #2\", choices: [{ id: 1, label: \"choice-1\" }, { id: 2, label: \"choice-2\" }, { id: 3, label: \"choice-3\" }], selected: [false, false, false] },\r\n        { text: \"Mock Question #3\", choices: [{ id: 1, label: \"choice-1\" }, { id: 2, label: \"choice-2\" }, { id: 3, label: \"choice-3\" }], selected: [false, false, false] },\r\n    ]);\r\n\r\n    function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, questionIndex: number, choiceIndex: number) \r\n    {\r\n        const updatedQuestions = [...questions];\r\n        \r\n        // Update the selected state based on whether the checkbox is checked or unchecked\r\n        updatedQuestions[questionIndex].selected[choiceIndex] = event.target.checked;\r\n        setQuestions(updatedQuestions);\r\n        \r\n        // Only update progress if there's at least one selection\r\n        updateProgress(questionIndex);\r\n    }\r\n    \r\n    function updateProgress(index: number): void \r\n    {\r\n        // Check if at least one checkbox is selected\r\n        const isAnySelected = questions[index].selected.some(isSelected => isSelected);\r\n        \r\n        if (isAnySelected) {\r\n            // Update progress only if there is at least one selected\r\n            setProgress((prevProgress) => Math.min(prevProgress + (100 / questions.length), 100));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={backgroundStyle}>\r\n            <div>\r\n                <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n                    <label htmlFor=\"question\" style={{ marginRight: \"10px\" }}>\r\n                        Percent Complete: {progress.toFixed(0)}%\r\n                    </label>\r\n                    <progress id=\"question\" value={progress} max=\"100\" />\r\n                </div>\r\n                <h1 style={{ textAlign: \"center\" }}>Here is the Basic Career Page!</h1>\r\n                <br />\r\n                <div>\r\n                    <Container style={{ border: \"2px solid red\" }}>\r\n                        <p>\r\n                            This assessment is designed to determine an appropriate career path going forward. \r\n                            You will be asked a series of multiple choice questions. If you're looking for more \r\n                            in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're \r\n                            in a comfortable environment and answer each question to the best of your ability.\r\n                        </p>\r\n                    </Container>\r\n                </div>\r\n                <div style={{ marginLeft: \"30px\" }}>\r\n                    <br />\r\n                    {questions.map((question, questionIndex) => (\r\n                        <div key={questionIndex}>\r\n                            <h4>{question.text}</h4>\r\n                            <Form>\r\n                                {question.choices.map((choice, choiceIndex) => (\r\n                                    <Form.Check\r\n                                        key={choice.id}\r\n                                        type=\"checkbox\"\r\n                                        label={choice.label}\r\n                                        checked={question.selected[choiceIndex]}\r\n                                        onChange={(event) => updateAnswer(event, questionIndex, choiceIndex)}\r\n                                    />\r\n                                ))}\r\n                            </Form>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}