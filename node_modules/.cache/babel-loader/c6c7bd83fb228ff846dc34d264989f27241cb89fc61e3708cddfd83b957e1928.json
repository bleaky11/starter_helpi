{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\nimport { LoginForm } from './LoginForm';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: \"Guest\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  const [accounts, setAccounts] = useState([]);\n  const [savedUser, setSavedUser] = useState(accounts[0]);\n  const [db, setDb] = useState(null); // Store db instance\n\n  const checkInfo = (savedUsername, savedPassword, userInput, passInput) => {\n    return userInput === savedUsername && passInput === savedPassword;\n  };\n  useEffect(() => {\n    // Load accounts from localStorage\n    const savedAccounts = JSON.parse(localStorage.getItem(\"savedAccounts\") || \"[]\");\n    setAccounts(savedAccounts);\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"UserDatabase\", 2);\n    request.onerror = event => {\n      console.error(\"Error accessing user database!\", event);\n    };\n    request.onupgradeneeded = event => {\n      const db = event.target.result;\n      db.createObjectStore(\"users\", {\n        keyPath: \"username\"\n      });\n      console.log(\"Object store created.\");\n    };\n    request.onsuccess = () => {\n      const dbInstance = request.result;\n      setDb(dbInstance);\n\n      // Remember Me logic\n      const rememberMe = localStorage.getItem(\"rememberMe\") === \"true\";\n      setRemember(rememberMe);\n      if (rememberMe) {\n        const savedUsername = localStorage.getItem(\"savedUsername\");\n        if (savedUsername) {\n          const transaction = dbInstance.transaction(\"users\", \"readonly\");\n          const store = transaction.objectStore(\"users\");\n          const userQuery = store.get(savedUsername);\n          userQuery.onsuccess = () => {\n            if (userQuery.result) {\n              setUserInfo({\n                username: userQuery.result.username,\n                password: userQuery.result.password\n              });\n              setIsLoggedIn(true);\n            } else {\n              console.log(\"No saved user data found for username:\", savedUsername);\n            }\n          };\n          userQuery.onerror = event => {\n            console.error(\"Error querying user data:\", event);\n          };\n        }\n      }\n    };\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readwrite\");\n      const store = transaction.objectStore(\"users\");\n      const userQuery = store.get(userInfo.username);\n      userQuery.onsuccess = () => {\n        var _userQuery$result, _userQuery$result2;\n        const savedUsername = (_userQuery$result = userQuery.result) === null || _userQuery$result === void 0 ? void 0 : _userQuery$result.username;\n        const savedPassword = (_userQuery$result2 = userQuery.result) === null || _userQuery$result2 === void 0 ? void 0 : _userQuery$result2.password;\n        if (userQuery.result) {\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\n            setIsLoggedIn(true);\n          }\n        } else if (formTitle === \"Create Account\") {\n          const newUser = {\n            username: userInfo.username,\n            password: userInfo.password\n          };\n          store.put(newUser).onsuccess = () => setIsLoggedIn(true);\n\n          // Update accounts array and localStorage\n          const updatedAccounts = [...accounts, userInfo.username];\n          setAccounts(updatedAccounts);\n          localStorage.setItem(\"savedAccounts\", JSON.stringify(updatedAccounts));\n        } else {\n          alert(\"User does not exist. Please create an account first.\");\n        }\n      };\n      if (remember) {\n        localStorage.setItem(\"savedUsername\", userInfo.username);\n      } else {\n        localStorage.removeItem(\"savedUsername\");\n      }\n    }\n  };\n  const updateUsername = event => {\n    setSavedUser(event.target.value);\n  };\n  const showAccounts = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"savedUsers\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Saved Usernames\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n        value: savedUser,\n        onChange: updateUsername,\n        children: accounts.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user,\n          children: user\n        }, user, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n  const handleLogout = () => setIsLoggedIn(false);\n  const handleRemember = () => {\n    const newRememberState = !remember;\n    setRemember(newRememberState);\n    localStorage.setItem(\"rememberMe\", newRememberState ? \"true\" : \"false\");\n  };\n  const showForm = title => {\n    setFormTitle(title);\n    setIsFormOpen(!isFormOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: jerboa,\n        alt: \"Four-Toed Jerboa\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkred\"\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showForm(\"Log in\"),\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkblue\"\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      accounts: accounts // Pass accounts array\n      ,\n      savedUser: savedUser // Pass saved user\n      ,\n      setSavedUser: setSavedUser // Allow update of saved user\n      ,\n      updateStatus: event => setUserInfo({\n        ...userInfo,\n        [event.target.name]: event.target.value\n      }) // Update user info directly\n      ,\n      closeForm: () => setIsFormOpen(false),\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 86\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"Vq6xUDSfYdO8ETYFiJ7y9V5x/fU=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","jerboa","LoginForm","Button","Form","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","accounts","setAccounts","savedUser","setSavedUser","db","setDb","checkInfo","savedUsername","savedPassword","userInput","passInput","savedAccounts","JSON","parse","localStorage","getItem","indexedDB","window","request","open","onerror","event","console","error","onupgradeneeded","target","result","createObjectStore","keyPath","log","onsuccess","dbInstance","rememberMe","transaction","store","objectStore","userQuery","get","handleSubmit","preventDefault","_userQuery$result","_userQuery$result2","newUser","put","updatedAccounts","setItem","stringify","alert","removeItem","updateUsername","value","showAccounts","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Select","onChange","map","user","handleLogout","handleRemember","newRememberState","showForm","title","src","alt","style","float","width","height","cursor","onClick","marginTop","borderRadius","backgroundColor","updateStatus","name","closeForm","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\r\nimport { LoginForm } from './LoginForm';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<{ username: string; password: string }>({ username: \"Guest\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [formTitle, setFormTitle] = useState<string>(\"Create Account\");\r\n  const [accounts, setAccounts] = useState<string[]>([]);\r\n  const [savedUser, setSavedUser] = useState<string>(accounts[0]);\r\n  const [db, setDb] = useState<IDBDatabase | null>(null); // Store db instance\r\n\r\n  const checkInfo = (savedUsername: string, savedPassword: string, userInput: string, passInput: string) => {\r\n    return userInput === savedUsername && passInput === savedPassword;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load accounts from localStorage\r\n    const savedAccounts = JSON.parse(localStorage.getItem(\"savedAccounts\") || \"[]\");\r\n    setAccounts(savedAccounts);\r\n\r\n    const indexedDB = window.indexedDB;\r\n    const request = indexedDB.open(\"UserDatabase\", 2);\r\n\r\n    request.onerror = (event) => {\r\n      console.error(\"Error accessing user database!\", event);\r\n    };\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = (event.target as IDBOpenDBRequest).result;\r\n      db.createObjectStore(\"users\", { keyPath: \"username\" });\r\n      console.log(\"Object store created.\");\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      const dbInstance = request.result;\r\n      setDb(dbInstance);\r\n\r\n      // Remember Me logic\r\n      const rememberMe = localStorage.getItem(\"rememberMe\") === \"true\";\r\n      setRemember(rememberMe);\r\n\r\n      if (rememberMe) {\r\n        const savedUsername = localStorage.getItem(\"savedUsername\");\r\n        if (savedUsername) {\r\n          const transaction = dbInstance.transaction(\"users\", \"readonly\");\r\n          const store = transaction.objectStore(\"users\");\r\n          const userQuery = store.get(savedUsername);\r\n\r\n          userQuery.onsuccess = () => {\r\n            if (userQuery.result) {\r\n              setUserInfo({ username: userQuery.result.username, password: userQuery.result.password });\r\n              setIsLoggedIn(true);\r\n            } else {\r\n              console.log(\"No saved user data found for username:\", savedUsername);\r\n            }\r\n          };\r\n\r\n          userQuery.onerror = (event) => {\r\n            console.error(\"Error querying user data:\", event);\r\n          };\r\n        }\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readwrite\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const userQuery = store.get(userInfo.username);\r\n\r\n      userQuery.onsuccess = () => {\r\n        const savedUsername = userQuery.result?.username;\r\n        const savedPassword = userQuery.result?.password;\r\n\r\n        if (userQuery.result) {\r\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\r\n            setIsLoggedIn(true);\r\n          }\r\n        } else if (formTitle === \"Create Account\") {\r\n          const newUser = { username: userInfo.username, password: userInfo.password };\r\n          store.put(newUser).onsuccess = () => setIsLoggedIn(true);\r\n\r\n          // Update accounts array and localStorage\r\n          const updatedAccounts = [...accounts, userInfo.username];\r\n          setAccounts(updatedAccounts);\r\n          localStorage.setItem(\"savedAccounts\", JSON.stringify(updatedAccounts));\r\n        } else {\r\n          alert(\"User does not exist. Please create an account first.\");\r\n        }\r\n      };\r\n\r\n      if (remember) {\r\n        localStorage.setItem(\"savedUsername\", userInfo.username);\r\n      } else {\r\n        localStorage.removeItem(\"savedUsername\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateUsername = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSavedUser(event.target.value);\r\n  };\r\n\r\n  const showAccounts = () => (\r\n    <div>\r\n      <Form.Group controlId=\"savedUsers\">\r\n        <Form.Label>Saved Usernames</Form.Label>\r\n        <Form.Select value={savedUser} onChange={updateUsername}>\r\n          {accounts.map((user) => (\r\n            <option key={user} value={user}>\r\n              {user}\r\n            </option>\r\n          ))}\r\n        </Form.Select>\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n\r\n  const handleLogout = () => setIsLoggedIn(false);\r\n\r\n  const handleRemember = () => {\r\n    const newRememberState = !remember;\r\n    setRemember(newRememberState);\r\n    localStorage.setItem(\"rememberMe\", newRememberState ? \"true\" : \"false\");\r\n  };\r\n\r\n  const showForm = (title: string) => {\r\n    setFormTitle(title);\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <img src={jerboa} alt=\"Four-Toed Jerboa\" style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }} onClick={() => showForm(\"Create Account\")} title={userInfo.username} />\r\n          <Button onClick={handleLogout} style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkred\" }}>Log out</Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img src={userProfile} alt=\"User Profile\" style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }} onClick={() => showForm(\"Create Account\")} title=\"Guest\" />\r\n          <Button onClick={() => showForm(\"Log in\")} style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkblue\" }}>Log in</Button>\r\n        </div>\r\n      )}\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          accounts={accounts}  // Pass accounts array\r\n          savedUser={savedUser}  // Pass saved user\r\n          setSavedUser={setSavedUser}  // Allow update of saved user\r\n          updateStatus={(event) => setUserInfo({ ...userInfo, [event.target.name]: event.target.value })} // Update user info directly\r\n          closeForm={() => setIsFormOpen(false)}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}><h1>The Career Quiz</h1></a>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}