{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { backgroundStyle } from \"./CSS/Background\";\nimport { useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent() {\n  _s();\n  const questions = [{\n    text: \"Mock Question 1\",\n    isAnswered: false\n  }, {\n    text: \"Mock Question 2\",\n    isAnswered: false\n  }, {\n    text: \"Mock Question 3\",\n    isAnswered: false\n  }];\n  const [progress, setProgress] = useState(0);\n  const [answeredQuestions, setAnsweredQuestions] = useState(questions.map(() => false)); // Track answers\n\n  function updateProgress() {\n    const answeredCount = answeredQuestions.filter(isAnswered => isAnswered).length;\n    setProgress(answeredCount / questions.length * 100);\n  }\n  function handleAnswerChange(index) {\n    const updatedAnswers = [...answeredQuestions];\n    updatedAnswers[index] = true; // Mark this question as answered\n    setAnsweredQuestions(updatedAnswers);\n    updateProgress(); // Update progress when a question is answered\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          border: \"2px solid red\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This assessment is designed to determine an appropriate career path going forward. You will be asked a series of multiple choice questions. Answer each question to the best of your ability.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"answer\",\n              name: `quizAnswer${index}`,\n              value: \"answer\",\n              onChange: () => handleAnswerChange(index) // Trigger on answer change\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), answeredQuestions[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You answered this question!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 44\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicCareerComponent, \"0P9CPhcKUb/gc/ihQESjdcniDPk=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["backgroundStyle","useState","Container","Form","jsxDEV","_jsxDEV","BasicCareerComponent","_s","questions","text","isAnswered","progress","setProgress","answeredQuestions","setAnsweredQuestions","map","updateProgress","answeredCount","filter","length","handleAnswerChange","index","updatedAnswers","style","children","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","id","value","max","textAlign","border","marginLeft","question","Check","type","label","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { backgroundStyle } from \"./CSS/Background\";\r\nimport { useState } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\n\r\nexport function BasicCareerComponent(): JSX.Element \r\n{\r\n  const questions = [\r\n    { text: \"Mock Question 1\", isAnswered: false },\r\n    { text: \"Mock Question 2\", isAnswered: false },\r\n    { text: \"Mock Question 3\", isAnswered: false }\r\n  ];\r\n\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [answeredQuestions, setAnsweredQuestions] = useState<boolean[]>(questions.map(() => false)); // Track answers\r\n\r\n  function updateProgress(): void {\r\n    const answeredCount = answeredQuestions.filter((isAnswered) => isAnswered).length;\r\n    setProgress((answeredCount / questions.length) * 100);\r\n  }\r\n\r\n  function handleAnswerChange(index: number): void {\r\n    const updatedAnswers = [...answeredQuestions];\r\n    updatedAnswers[index] = true; // Mark this question as answered\r\n    setAnsweredQuestions(updatedAnswers);\r\n    updateProgress(); // Update progress when a question is answered\r\n  }\r\n\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n          <label htmlFor=\"question\" style={{ marginRight: \"10px\" }}>\r\n            Percent Complete: {progress.toFixed(0)}%\r\n          </label>\r\n          <progress id=\"question\" value={progress} max=\"100\" />\r\n        </div>\r\n        <h1 style={{ textAlign: \"center\" }}>Here is the Basic Career Page!</h1>\r\n        <br />\r\n        <Container style={{ border: \"2px solid red\" }}>\r\n          <p>\r\n            This assessment is designed to determine an appropriate career path going forward. You will be asked a series of multiple choice questions. Answer each question to the best of your ability.\r\n          </p>\r\n        </Container>\r\n        <div style={{ marginLeft: \"30px\" }}>\r\n          <br />\r\n          {questions.map((question, index) => (\r\n            <div key={index}>\r\n              <p>{question.text}</p>\r\n              <Form>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label=\"answer\"\r\n                  name={`quizAnswer${index}`}\r\n                  value=\"answer\"\r\n                  onChange={() => handleAnswerChange(index)} // Trigger on answer change\r\n                />\r\n              </Form>\r\n              {answeredQuestions[index] && <p>You answered this question!</p>}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}