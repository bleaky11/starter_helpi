{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\LoginForm.tsx\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = ({\n  userInfo,\n  setUserInfo,\n  remember,\n  setRemember,\n  updateStatus,\n  handleRemember,\n  handleSubmit,\n  closeForm,\n  accounts,\n  savedUser,\n  setSavedUser,\n  formTitle\n}) => {\n  const handleUserSelect = event => {\n    setSavedUser(event.target.value);\n    setUserInfo(prev => ({\n      ...prev,\n      username: event.target.value\n    })); // Update username input with selected user\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-popup\",\n    id: \"myForm\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), accounts.length === 0 ? /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"savedUsers\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"No Saved Usernames\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: savedUser,\n          onChange: handleUserSelect,\n          children: accounts.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user,\n            children: user\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"savedUsers\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Saved Usernames\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: savedUser,\n          onChange: handleUserSelect,\n          children: accounts.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user,\n            children: user\n          }, user, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 14\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInfo.username,\n        placeholder: \"Enter Username\",\n        name: \"username\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"psw\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: userInfo.password,\n        placeholder: \"Enter Password\",\n        name: \"password\",\n        onChange: updateStatus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '8px'\n          },\n          children: \"Remember me?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          id: \"save-user\",\n          name: \"save-user\",\n          checked: remember,\n          onChange: handleRemember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        type: \"button\",\n        className: \"btn cancel\",\n        onClick: closeForm,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Form","jsxDEV","_jsxDEV","LoginForm","userInfo","setUserInfo","remember","setRemember","updateStatus","handleRemember","handleSubmit","closeForm","accounts","savedUser","setSavedUser","formTitle","handleUserSelect","event","target","value","prev","username","className","id","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","length","Group","controlId","Label","Select","onChange","map","user","htmlFor","type","placeholder","name","required","password","style","display","alignItems","marginRight","Check","checked","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/LoginForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport './LoginForm.css';\r\n\r\nexport interface LoginFormProps {\r\n  closeForm: () => void;\r\n  userInfo: { username: string; password: string };\r\n  setUserInfo: (value: React.SetStateAction<{ username: string; password: string }>) => void;\r\n  remember: boolean;\r\n  setRemember: React.Dispatch<React.SetStateAction<boolean>>;\r\n  updateStatus: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleRemember: () => void;\r\n  handleSubmit: (event: React.FormEvent<HTMLFormElement>) => void; \r\n  accounts: string[]; \r\n  savedUser: string; \r\n  setSavedUser: (value: React.SetStateAction<string>) => void; \r\n  formTitle: string;\r\n}\r\n\r\nexport const LoginForm: React.FC<LoginFormProps> = ({\r\n  userInfo,\r\n  setUserInfo,\r\n  remember,\r\n  setRemember,\r\n  updateStatus,\r\n  handleRemember,\r\n  handleSubmit,\r\n  closeForm,\r\n  accounts,\r\n  savedUser,\r\n  setSavedUser,\r\n  formTitle,\r\n}) => {\r\n  \r\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setSavedUser(event.target.value);\r\n    setUserInfo(prev => ({ ...prev, username: event.target.value })); // Update username input with selected user\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-popup\" id=\"myForm\">\r\n      <form className=\"form-container\" onSubmit={handleSubmit}>\r\n        <h1>{formTitle}</h1>\r\n\r\n        {accounts.length === 0 ?\r\n          <Form.Group controlId=\"savedUsers\">\r\n          <Form.Label>No Saved Usernames</Form.Label>\r\n          <Form.Select value={savedUser} onChange={handleUserSelect}>\r\n            {accounts.map((user) => (\r\n              <option key={user} value={user}>\r\n                {user}\r\n              </option>\r\n            ))}\r\n          </Form.Select>\r\n        </Form.Group>: \r\n         <Form.Group controlId=\"savedUsers\">\r\n         <Form.Label>Saved Usernames</Form.Label>\r\n         <Form.Select value={savedUser} onChange={handleUserSelect}>\r\n           {accounts.map((user) => (\r\n             <option key={user} value={user}>\r\n               {user}\r\n             </option>\r\n           ))}\r\n         </Form.Select>\r\n       </Form.Group>\r\n      }\r\n        <label htmlFor=\"username\"><b>Username</b></label>\r\n        <input\r\n          type=\"text\"\r\n          value={userInfo.username}\r\n          placeholder=\"Enter Username\"\r\n          name=\"username\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n        <label htmlFor=\"psw\"><b>Password</b></label>\r\n        <input\r\n          type=\"password\"\r\n          value={userInfo.password}\r\n          placeholder=\"Enter Password\"\r\n          name=\"password\"\r\n          onChange={updateStatus}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"btn\">Login</button>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <span style={{ marginRight: '8px' }}>Remember me?</span>\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"save-user\"\r\n            name=\"save-user\"\r\n            checked={remember}\r\n            onChange={handleRemember}\r\n          />\r\n        </div>\r\n        <button style={{ marginTop: \"10px\" }} type=\"button\" className=\"btn cancel\" onClick={closeForm}>Close</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiBzB,OAAO,MAAMC,SAAmC,GAAGA,CAAC;EAClDC,QAAQ;EACRC,WAAW;EACXC,QAAQ;EACRC,WAAW;EACXC,YAAY;EACZC,cAAc;EACdC,YAAY;EACZC,SAAS;EACTC,QAAQ;EACRC,SAAS;EACTC,YAAY;EACZC;AACF,CAAC,KAAK;EAEJ,MAAMC,gBAAgB,GAAIC,KAA2C,IAAK;IACxEH,YAAY,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAChCd,WAAW,CAACe,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEC,QAAQ,EAAEJ,KAAK,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,YAAY;IAACC,EAAE,EAAC,QAAQ;IAAAC,QAAA,eACrCtB,OAAA;MAAMoB,SAAS,EAAC,gBAAgB;MAACG,QAAQ,EAAEf,YAAa;MAAAc,QAAA,gBACtDtB,OAAA;QAAAsB,QAAA,EAAKT;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAEnBjB,QAAQ,CAACkB,MAAM,KAAK,CAAC,gBACpB5B,OAAA,CAACF,IAAI,CAAC+B,KAAK;QAACC,SAAS,EAAC,YAAY;QAAAR,QAAA,gBAClCtB,OAAA,CAACF,IAAI,CAACiC,KAAK;UAAAT,QAAA,EAAC;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC3C3B,OAAA,CAACF,IAAI,CAACkC,MAAM;UAACf,KAAK,EAAEN,SAAU;UAACsB,QAAQ,EAAEnB,gBAAiB;UAAAQ,QAAA,EACvDZ,QAAQ,CAACwB,GAAG,CAAEC,IAAI,iBACjBnC,OAAA;YAAmBiB,KAAK,EAAEkB,IAAK;YAAAb,QAAA,EAC5Ba;UAAI,GADMA,IAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,gBACZ3B,OAAA,CAACF,IAAI,CAAC+B,KAAK;QAACC,SAAS,EAAC,YAAY;QAAAR,QAAA,gBAClCtB,OAAA,CAACF,IAAI,CAACiC,KAAK;UAAAT,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACxC3B,OAAA,CAACF,IAAI,CAACkC,MAAM;UAACf,KAAK,EAAEN,SAAU;UAACsB,QAAQ,EAAEnB,gBAAiB;UAAAQ,QAAA,EACvDZ,QAAQ,CAACwB,GAAG,CAAEC,IAAI,iBACjBnC,OAAA;YAAmBiB,KAAK,EAAEkB,IAAK;YAAAb,QAAA,EAC5Ba;UAAI,GADMA,IAAI;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEZ3B,OAAA;QAAOoC,OAAO,EAAC,UAAU;QAAAd,QAAA,eAACtB,OAAA;UAAAsB,QAAA,EAAG;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjD3B,OAAA;QACEqC,IAAI,EAAC,MAAM;QACXpB,KAAK,EAAEf,QAAQ,CAACiB,QAAS;QACzBmB,WAAW,EAAC,gBAAgB;QAC5BC,IAAI,EAAC,UAAU;QACfN,QAAQ,EAAE3B,YAAa;QACvBkC,QAAQ;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3B,OAAA;QAAOoC,OAAO,EAAC,KAAK;QAAAd,QAAA,eAACtB,OAAA;UAAAsB,QAAA,EAAG;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5C3B,OAAA;QACEqC,IAAI,EAAC,UAAU;QACfpB,KAAK,EAAEf,QAAQ,CAACuC,QAAS;QACzBH,WAAW,EAAC,gBAAgB;QAC5BC,IAAI,EAAC,UAAU;QACfN,QAAQ,EAAE3B,YAAa;QACvBkC,QAAQ;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3B,OAAA;QAAQqC,IAAI,EAAC,QAAQ;QAACjB,SAAS,EAAC,KAAK;QAAAE,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpD3B,OAAA;QAAK0C,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAtB,QAAA,gBACpDtB,OAAA;UAAM0C,KAAK,EAAE;YAAEG,WAAW,EAAE;UAAM,CAAE;UAAAvB,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACxD3B,OAAA,CAACF,IAAI,CAACgD,KAAK;UACTT,IAAI,EAAC,UAAU;UACfhB,EAAE,EAAC,WAAW;UACdkB,IAAI,EAAC,WAAW;UAChBQ,OAAO,EAAE3C,QAAS;UAClB6B,QAAQ,EAAE1B;QAAe;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAQ0C,KAAK,EAAE;UAAEM,SAAS,EAAE;QAAO,CAAE;QAACX,IAAI,EAAC,QAAQ;QAACjB,SAAS,EAAC,YAAY;QAAC6B,OAAO,EAAExC,SAAU;QAAAa,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACuB,EAAA,GAhFWjD,SAAmC;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}