{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport { LoginForm } from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  const [db, setDb] = useState(null); // Store db instance\n\n  useEffect(() => {\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"UserDatabase\", 2);\n    request.onerror = event => {\n      console.error(\"Error accessing user database!\", event);\n    };\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      const store = db.createObjectStore(\"users\", {\n        keyPath: \"username\"\n      });\n      store.createIndex(\"username\", \"username\", {\n        unique: true\n      });\n    };\n    request.onsuccess = () => {\n      const database = request.result;\n      setDb(database);\n\n      // Check if a user is already in the database\n      if (userInfo.username) {\n        const transaction = database.transaction(\"users\", \"readonly\");\n        const store = transaction.objectStore(\"users\");\n        const userQuery = store.get(userInfo.username);\n        userQuery.onsuccess = () => {\n          if (userQuery.result) {\n            // User exists, log in\n            console.log('User exists, logging in:', userInfo.username);\n            setFormTitle(\"Log In\");\n            setIsLoggedIn(true);\n          } else {\n            // User does not exist, stay in Create Account mode\n            setFormTitle(\"Create Account\");\n            setIsLoggedIn(false);\n          }\n        };\n      }\n    };\n  }, [userInfo.username]); // Dependency to check user existence when username changes\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!userInfo.username || !userInfo.password) {\n      console.error(\"Username and password must be provided.\");\n      return;\n    }\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readwrite\");\n      const store = transaction.objectStore(\"users\");\n      const userQuery = store.get(userInfo.username);\n      userQuery.onsuccess = () => {\n        if (userQuery.result) {\n          // User exists, log in\n          console.log('User exists, logging in:', userInfo.username);\n          setFormTitle(\"Log In\");\n          setIsLoggedIn(true);\n        } else {\n          // User does not exist, add new user\n          const newUser = {\n            username: userInfo.username,\n            password: userInfo.password\n          };\n          console.log('User does not exist, adding new user:', newUser);\n          const addUserRequest = store.put(newUser);\n          addUserRequest.onsuccess = () => {\n            console.log(\"User added successfully!\");\n            setFormTitle(\"Create Account\");\n            setIsLoggedIn(true);\n          };\n          addUserRequest.onerror = event => {\n            const error = event.target.error;\n            const errorMessage = error ? error.message : \"Unknown error\";\n            console.error(\"Error adding user:\", errorMessage);\n          };\n        }\n      };\n      userQuery.onerror = event => {\n        console.error(\"Error querying user data\");\n      };\n      transaction.onerror = event => {\n        const error = event.target.error;\n        const errorMessage = error ? error.message : \"Unknown error\";\n        console.error(\"Transaction failed:\", errorMessage);\n      };\n    } else {\n      console.error(\"Database not initialized\");\n    }\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleRemember = () => {\n    setRemember(!remember);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        float: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Signed in as: \", userInfo.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        userInfo: userInfo,\n        setUserInfo: setUserInfo,\n        remember: remember,\n        setRemember: setRemember,\n        handleRemember: handleRemember,\n        handleSubmit: handleSubmit,\n        updateStatus: updateStatus,\n        closeForm: () => setIsFormOpen(false),\n        formTitle: formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"kCslfHky5ZqNN6JxAPDhIHwsGN8=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","LoginForm","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","db","setDb","indexedDB","window","request","open","onerror","event","console","error","onupgradeneeded","result","store","createObjectStore","keyPath","createIndex","unique","onsuccess","database","transaction","objectStore","userQuery","get","log","handleSubmit","preventDefault","newUser","addUserRequest","put","target","errorMessage","message","toggleForm","updateStatus","name","value","prevInfo","handleRemember","children","style","position","float","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","cursor","onClick","href","color","closeForm","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport { LoginForm } from './LoginForm';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<{ username: string; password: string }>({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [formTitle, setFormTitle] = useState<string>(\"Create Account\");\r\n  const [db, setDb] = useState<IDBDatabase | null>(null); // Store db instance\r\n\r\n  useEffect(() => {\r\n    const indexedDB = window.indexedDB;\r\n    const request = indexedDB.open(\"UserDatabase\", 2);\r\n\r\n    request.onerror = (event) => {\r\n      console.error(\"Error accessing user database!\", event);\r\n    };\r\n\r\n    request.onupgradeneeded = () => {\r\n      const db = request.result;\r\n      const store = db.createObjectStore(\"users\", { keyPath: \"username\" });\r\n      store.createIndex(\"username\", \"username\", { unique: true });\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      const database = request.result;\r\n      setDb(database);\r\n\r\n      // Check if a user is already in the database\r\n      if (userInfo.username) {\r\n        const transaction = database.transaction(\"users\", \"readonly\");\r\n        const store = transaction.objectStore(\"users\");\r\n        const userQuery = store.get(userInfo.username);\r\n\r\n        userQuery.onsuccess = () => {\r\n          if (userQuery.result) {\r\n            // User exists, log in\r\n            console.log('User exists, logging in:', userInfo.username);\r\n            setFormTitle(\"Log In\");\r\n            setIsLoggedIn(true);\r\n          } else {\r\n            // User does not exist, stay in Create Account mode\r\n            setFormTitle(\"Create Account\");\r\n            setIsLoggedIn(false);\r\n          }\r\n        };\r\n      }\r\n    };\r\n  }, [userInfo.username]); // Dependency to check user existence when username changes\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!userInfo.username || !userInfo.password) {\r\n      console.error(\"Username and password must be provided.\");\r\n      return;\r\n    }\r\n\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readwrite\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const userQuery = store.get(userInfo.username);\r\n\r\n      userQuery.onsuccess = () => {\r\n        if (userQuery.result) {\r\n          // User exists, log in\r\n          console.log('User exists, logging in:', userInfo.username);\r\n          setFormTitle(\"Log In\");\r\n          setIsLoggedIn(true);\r\n        } else {\r\n          // User does not exist, add new user\r\n          const newUser = { username: userInfo.username, password: userInfo.password };\r\n          console.log('User does not exist, adding new user:', newUser);\r\n\r\n          const addUserRequest = store.put(newUser);\r\n\r\n          addUserRequest.onsuccess = () => {\r\n            console.log(\"User added successfully!\");\r\n            setFormTitle(\"Create Account\");\r\n            setIsLoggedIn(true);\r\n          };\r\n\r\n          addUserRequest.onerror = (event) => {\r\n            const error = (event.target as IDBRequest).error;\r\n            const errorMessage = error ? error.message : \"Unknown error\";\r\n            console.error(\"Error adding user:\", errorMessage);\r\n          };\r\n        }\r\n      };\r\n\r\n      userQuery.onerror = (event) => {\r\n        console.error(\"Error querying user data\");\r\n      };\r\n\r\n      transaction.onerror = (event) => {\r\n        const error = (event.target as IDBTransaction).error;\r\n        const errorMessage = error ? error.message : \"Unknown error\";\r\n        console.error(\"Transaction failed:\", errorMessage);\r\n      };\r\n    } else {\r\n      console.error(\"Database not initialized\");\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUserInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember(!remember);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div style={{ position: \"absolute\", float: \"left\" }}>\r\n          <h3>Signed in as: {userInfo.username}!</h3>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={toggleForm}\r\n          />\r\n        </div>\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n  \r\n      {isFormOpen && !isLoggedIn && (\r\n        <div>\r\n          <LoginForm\r\n            userInfo={userInfo}\r\n            setUserInfo={setUserInfo}\r\n            remember={remember}\r\n            setRemember={setRemember}\r\n            handleRemember={handleRemember}\r\n            handleSubmit={handleSubmit}\r\n            updateStatus={updateStatus}\r\n            closeForm={() => setIsFormOpen(false)}\r\n            formTitle= {formTitle}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}