{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\nimport { LoginForm } from './LoginForm';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  const [db, setDb] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [selectedUser, setSelect] = useState(\"\");\n  const initializeDatabase = async () => {\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"UserDatabase\", 2);\n    request.onerror = event => {\n      console.error(\"Error opening user database!\", event);\n    };\n    request.onupgradeneeded = event => {\n      const dbInstance = event.target.result;\n      dbInstance.createObjectStore(\"users\", {\n        keyPath: \"username\"\n      });\n    };\n    request.onsuccess = () => {\n      const dbInstance = request.result;\n      setDb(dbInstance);\n      loadRememberedUsers(dbInstance);\n    };\n  };\n  const loadRememberedUsers = dbInstance => {\n    const transaction = dbInstance.transaction(\"users\", \"readonly\");\n    const store = transaction.objectStore(\"users\");\n    const getAllRequest = store.getAll();\n    getAllRequest.onsuccess = () => {\n      const allUsers = getAllRequest.result;\n      const rememberedAccounts = allUsers.filter(user => user.remembered);\n      setAccounts(rememberedAccounts);\n      if (rememberedAccounts.length > 0) {\n        const firstUser = rememberedAccounts[0];\n        setSelect(firstUser.username);\n        setUserInfo({\n          username: firstUser.username,\n          password: firstUser.password\n        });\n      }\n    };\n  };\n  useEffect(() => {\n    initializeDatabase();\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!userInfo.username || !userInfo.password) {\n      console.error(\"Username and password must be provided.\");\n      return;\n    }\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readwrite\");\n      const store = transaction.objectStore(\"users\");\n      const userQuery = store.get(userInfo.username);\n      userQuery.onsuccess = () => {\n        if (userQuery.result) {\n          const savedUsername = userQuery.result.username;\n          const savedPassword = userQuery.result.password;\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\n            setIsLoggedIn(true);\n            updateSavedUsers();\n          }\n        } else if (formTitle === \"Create Account\") {\n          const newUser = {\n            username: userInfo.username,\n            password: userInfo.password,\n            remembered: remember\n          };\n          store.put(newUser).onsuccess = () => {\n            setIsLoggedIn(true);\n            updateSavedUsers();\n            alert(\"Account creation success!\");\n          };\n        } else {\n          alert(\"User does not exist. Please create an account first.\");\n        }\n      };\n    }\n  };\n  const updateSavedUsers = () => {\n    if (remember && !accounts.some(account => account.username === userInfo.username)) {\n      setAccounts([...accounts, {\n        username: userInfo.username,\n        password: userInfo.password\n      }]);\n      setSelect(userInfo.username);\n    }\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const clearForm = () => {\n    if (formTitle === \"Create Account\") {\n      setUserInfo({\n        username: \"\",\n        password: \"\"\n      });\n      setRemember(false);\n    }\n  };\n  const showForm = title => {\n    setFormTitle(title);\n    clearForm();\n    toggleForm();\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  const handleRemember = () => {\n    setRemember(!remember);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: jerboa,\n        alt: \"Four-Toed Jerboa\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkred\"\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showForm(\"Log in\"),\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkblue\"\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      updateStatus: updateStatus,\n      selectedUser: selectedUser,\n      setSelect: setSelect,\n      accounts: accounts,\n      closeForm: toggleForm,\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"JpDbL2NnhLqgTAzSKQpFM7xZdNY=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","jerboa","LoginForm","Button","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","db","setDb","accounts","setAccounts","selectedUser","setSelect","initializeDatabase","indexedDB","window","request","open","onerror","event","console","error","onupgradeneeded","dbInstance","target","result","createObjectStore","keyPath","onsuccess","loadRememberedUsers","transaction","store","objectStore","getAllRequest","getAll","allUsers","rememberedAccounts","filter","user","remembered","length","firstUser","handleSubmit","preventDefault","userQuery","get","savedUsername","savedPassword","checkInfo","updateSavedUsers","newUser","put","alert","some","account","toggleForm","clearForm","showForm","title","updateStatus","name","value","prevInfo","handleLogout","handleRemember","children","src","alt","style","float","width","height","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","borderRadius","backgroundColor","closeForm","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\r\nimport { LoginForm } from './LoginForm';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\r\n  const [db, setDb] = useState<IDBDatabase | null>(null);\r\n  const [accounts, setAccounts] = useState<{ username: string; password: string }[]>([]);\r\n  const [selectedUser, setSelect] = useState(\"\");\r\n\r\n  const initializeDatabase = async () => {\r\n    const indexedDB = window.indexedDB;\r\n    const request = indexedDB.open(\"UserDatabase\", 2);\r\n\r\n    request.onerror = (event) => {\r\n      console.error(\"Error opening user database!\", event);\r\n    };\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const dbInstance = (event.target as IDBOpenDBRequest).result;\r\n      dbInstance.createObjectStore(\"users\", { keyPath: \"username\" });\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      const dbInstance = request.result;\r\n      setDb(dbInstance);\r\n      loadRememberedUsers(dbInstance);\r\n    };\r\n  };\r\n\r\n  const loadRememberedUsers = (dbInstance: IDBDatabase) => {\r\n    const transaction = dbInstance.transaction(\"users\", \"readonly\");\r\n    const store = transaction.objectStore(\"users\");\r\n    const getAllRequest = store.getAll();\r\n\r\n    getAllRequest.onsuccess = () => {\r\n      const allUsers = getAllRequest.result as { username: string; password: string; remembered: boolean }[];\r\n      const rememberedAccounts = allUsers.filter(user => user.remembered);\r\n      setAccounts(rememberedAccounts);\r\n\r\n      if (rememberedAccounts.length > 0) {\r\n        const firstUser = rememberedAccounts[0];\r\n        setSelect(firstUser.username);\r\n        setUserInfo({ username: firstUser.username, password: firstUser.password });\r\n      }\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    initializeDatabase();\r\n  }, []);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!userInfo.username || !userInfo.password) {\r\n      console.error(\"Username and password must be provided.\");\r\n      return;\r\n    }\r\n\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readwrite\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const userQuery = store.get(userInfo.username);\r\n\r\n      userQuery.onsuccess = () => {\r\n        if (userQuery.result) {\r\n          const savedUsername = userQuery.result.username;\r\n          const savedPassword = userQuery.result.password;\r\n\r\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\r\n            setIsLoggedIn(true);\r\n            updateSavedUsers();\r\n          }\r\n        } else if (formTitle === \"Create Account\") {\r\n          const newUser = { username: userInfo.username, password: userInfo.password, remembered: remember };\r\n          store.put(newUser).onsuccess = () => {\r\n            setIsLoggedIn(true);\r\n            updateSavedUsers();\r\n            alert(\"Account creation success!\");\r\n          };\r\n        } else {\r\n          alert(\"User does not exist. Please create an account first.\");\r\n        }\r\n      };\r\n    }\r\n  };\r\n\r\n  const updateSavedUsers = () => {\r\n    if (remember && !accounts.some(account => account.username === userInfo.username)) {\r\n      setAccounts([...accounts, { username: userInfo.username, password: userInfo.password }]);\r\n      setSelect(userInfo.username);\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const clearForm = () => {\r\n    if (formTitle === \"Create Account\") {\r\n      setUserInfo({ username: \"\", password: \"\" });\r\n      setRemember(false);\r\n    }\r\n  };\r\n\r\n  const showForm = (title: string) => {\r\n    setFormTitle(title);\r\n    clearForm();\r\n    toggleForm();\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUserInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember(!remember);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <img\r\n            src={jerboa}\r\n            alt=\"Four-Toed Jerboa\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title={userInfo.username}\r\n          />\r\n          <Button onClick={handleLogout} style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkred\" }}>\r\n            Log out\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title=\"Guest\"\r\n          />\r\n          <Button onClick={() => showForm(\"Log in\")} style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkblue\" }}>\r\n            Log in\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          updateStatus={updateStatus}\r\n          selectedUser={selectedUser}\r\n          setSelect={setSelect}\r\n          accounts={accounts}\r\n          closeForm={toggleForm}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}