{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\nimport { LoginForm } from './LoginForm';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  const [db, setDb] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [selectedUser, setSelect] = useState(\"\");\n  const checkInfo = (savedUsername, savedPassword, userInput, passInput) => {\n    if (userInput === savedUsername && passInput === savedPassword) {\n      return true;\n    } else {\n      alert(userInput !== savedUsername ? \"Wrong username entered!\" : \"Wrong password entered!\");\n      return false;\n    }\n  };\n  const updateSavedUsers = useCallback(() => {\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readonly\");\n      const store = transaction.objectStore(\"users\");\n      const request = store.getAll();\n      request.onsuccess = () => {\n        const allAccounts = request.result || [];\n        setAccounts(allAccounts); // Update accounts with the latest data\n        if (remember) {\n          setSelect(userInfo.username); // Optionally set the selected user\n        }\n      };\n      request.onerror = () => {\n        console.error(\"Error fetching users\");\n      };\n    }\n  }, [db, remember, userInfo.username]); // Add dependencies for the values inside the function\n\n  useEffect(() => {\n    const initializeDatabase = async () => {\n      const indexedDB = window.indexedDB;\n      const request = indexedDB.open(\"UserDatabase\", 2);\n      request.onerror = event => {\n        console.error(\"Error opening user database!\", event);\n      };\n      request.onupgradeneeded = event => {\n        const dbInstance = event.target.result;\n        dbInstance.createObjectStore(\"users\", {\n          keyPath: \"username\"\n        });\n        console.log(\"Object store created.\");\n      };\n      request.onsuccess = () => {\n        const dbInstance = request.result;\n        setDb(dbInstance);\n        updateSavedUsers(); // Load remembered accounts on initial load\n      };\n    };\n    initializeDatabase();\n  }, [updateSavedUsers]); // `updateSavedUsers` is now stable and doesn't cause unnecessary rerenders\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!userInfo.username || !userInfo.password) {\n      console.error(\"Username and password must be provided.\");\n      return;\n    }\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readwrite\");\n      const store = transaction.objectStore(\"users\");\n      const userQuery = store.get(userInfo.username);\n      userQuery.onsuccess = () => {\n        if (userQuery.result) {\n          const savedUsername = userQuery.result.username;\n          const savedPassword = userQuery.result.password;\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\n            setIsLoggedIn(true);\n            updateSavedUsers(); // Update saved users on successful login\n          }\n        } else if (formTitle === \"Create Account\") {\n          const newUser = {\n            username: userInfo.username,\n            password: userInfo.password,\n            remembered: remember\n          };\n          store.put(newUser).onsuccess = () => {\n            setIsLoggedIn(true);\n            clearForm();\n            alert(\"Account creation success!\");\n            updateSavedUsers(); // Update saved users on successful account creation\n          };\n        } else {\n          alert(\"User does not exist. Please create an account first.\");\n          clearForm();\n        }\n      };\n      userQuery.onerror = () => {\n        console.error(\"Error querying user data\");\n      };\n      transaction.onerror = event => {\n        console.error(\"Transaction failed:\", event);\n      };\n    }\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const clearForm = () => {\n    setUserInfo({\n      username: \"\",\n      password: \"\"\n    });\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  const handleRemember = () => {\n    const newRememberState = !remember;\n    setRemember(newRememberState);\n  };\n  const showForm = title => {\n    setFormTitle(title);\n    if (title === \"Create Account\") {\n      setRemember(false);\n      clearForm();\n    }\n    toggleForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: jerboa,\n        alt: \"Four-Toed Jerboa\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkred\"\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showForm(\"Log in\"),\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkblue\"\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      updateStatus: updateStatus,\n      selectedUser: selectedUser,\n      setSelect: setSelect,\n      accounts: accounts,\n      closeForm: toggleForm,\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"ml4GkiggVhYveL4tx957q/a/T18=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","userProfile","jerboa","LoginForm","Button","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","db","setDb","accounts","setAccounts","selectedUser","setSelect","checkInfo","savedUsername","savedPassword","userInput","passInput","alert","updateSavedUsers","transaction","store","objectStore","request","getAll","onsuccess","allAccounts","result","onerror","console","error","initializeDatabase","indexedDB","window","open","event","onupgradeneeded","dbInstance","target","createObjectStore","keyPath","log","handleSubmit","preventDefault","userQuery","get","newUser","remembered","put","clearForm","toggleForm","updateStatus","name","value","prevInfo","handleLogout","handleRemember","newRememberState","showForm","title","children","src","alt","style","float","width","height","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","borderRadius","backgroundColor","closeForm","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\r\nimport { LoginForm } from './LoginForm';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\r\n  const [db, setDb] = useState<IDBDatabase | null>(null);\r\n  const [accounts, setAccounts] = useState<{ username: string; password: string }[]>([]);\r\n  const [selectedUser, setSelect] = useState(\"\");\r\n\r\n  const checkInfo = (savedUsername: string, savedPassword: string, userInput: string, passInput: string) => {\r\n    if (userInput === savedUsername && passInput === savedPassword) {\r\n      return true;\r\n    } else {\r\n      alert(userInput !== savedUsername ? \"Wrong username entered!\" : \"Wrong password entered!\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const updateSavedUsers = useCallback(() => {\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readonly\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const request = store.getAll();\r\n\r\n      request.onsuccess = () => {\r\n        const allAccounts = request.result || [];\r\n        setAccounts(allAccounts); // Update accounts with the latest data\r\n        if (remember) {\r\n          setSelect(userInfo.username); // Optionally set the selected user\r\n        }\r\n      };\r\n\r\n      request.onerror = () => {\r\n        console.error(\"Error fetching users\");\r\n      };\r\n    }\r\n  }, [db, remember, userInfo.username]); // Add dependencies for the values inside the function\r\n\r\n  useEffect(() => {\r\n    const initializeDatabase = async () => {\r\n      const indexedDB = window.indexedDB;\r\n      const request = indexedDB.open(\"UserDatabase\", 2);\r\n\r\n      request.onerror = (event) => {\r\n        console.error(\"Error opening user database!\", event);\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        const dbInstance = (event.target as IDBOpenDBRequest).result;\r\n        dbInstance.createObjectStore(\"users\", { keyPath: \"username\" });\r\n        console.log(\"Object store created.\");\r\n      };\r\n\r\n      request.onsuccess = () => {\r\n        const dbInstance = request.result;\r\n        setDb(dbInstance);\r\n\r\n        updateSavedUsers(); // Load remembered accounts on initial load\r\n      };\r\n    };\r\n    initializeDatabase();\r\n  }, [updateSavedUsers]); // `updateSavedUsers` is now stable and doesn't cause unnecessary rerenders\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!userInfo.username || !userInfo.password) {\r\n      console.error(\"Username and password must be provided.\");\r\n      return;\r\n    }\r\n\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readwrite\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const userQuery = store.get(userInfo.username);\r\n\r\n      userQuery.onsuccess = () => {\r\n        if (userQuery.result) {\r\n          const savedUsername = userQuery.result.username;\r\n          const savedPassword = userQuery.result.password;\r\n\r\n          if (checkInfo(savedUsername, savedPassword, userInfo.username, userInfo.password)) {\r\n            setIsLoggedIn(true);\r\n            updateSavedUsers(); // Update saved users on successful login\r\n          }\r\n        } else if (formTitle === \"Create Account\") {\r\n          const newUser = { username: userInfo.username, password: userInfo.password, remembered: remember };\r\n          store.put(newUser).onsuccess = () => {\r\n            setIsLoggedIn(true);\r\n            clearForm();\r\n            alert(\"Account creation success!\");\r\n            updateSavedUsers(); // Update saved users on successful account creation\r\n          };\r\n        } else {\r\n          alert(\"User does not exist. Please create an account first.\");\r\n          clearForm();\r\n        }\r\n      };\r\n\r\n      userQuery.onerror = () => {\r\n        console.error(\"Error querying user data\");\r\n      };\r\n\r\n      transaction.onerror = (event) => {\r\n        console.error(\"Transaction failed:\", event);\r\n      };\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setUserInfo({ username: \"\", password: \"\" });\r\n  }\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUserInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    const newRememberState = !remember;\r\n    setRemember(newRememberState);\r\n  };\r\n\r\n  const showForm = (title: string) => {\r\n    setFormTitle(title);\r\n    if(title === \"Create Account\") {\r\n      setRemember(false);\r\n      clearForm();\r\n    }\r\n    toggleForm();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <img\r\n            src={jerboa}\r\n            alt=\"Four-Toed Jerboa\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title={userInfo.username}\r\n          />\r\n          <Button\r\n            onClick={handleLogout}\r\n            style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkred\" }}\r\n          >\r\n            Log out\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title=\"Guest\"\r\n          />\r\n          <Button\r\n            onClick={() => showForm(\"Log in\")}\r\n            style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkblue\" }}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          updateStatus={updateStatus}\r\n          selectedUser={selectedUser}\r\n          setSelect={setSelect}\r\n          accounts={accounts}\r\n          closeForm={toggleForm}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}