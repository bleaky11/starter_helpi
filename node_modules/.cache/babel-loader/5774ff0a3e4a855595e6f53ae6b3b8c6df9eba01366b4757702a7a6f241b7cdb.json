{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\notification.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport bell from \"./Images/bell.png\";\nimport notificationBell from \"./Images/notificationBell.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NotifBell({\n  basicComplete,\n  detailedComplete\n}) {\n  _s();\n  const [notifBar, toggleBar] = useState(false);\n  const [image, changeImage] = useState(false);\n  const [notification, setNotification] = useState(false);\n  useEffect(() => {\n    //Runs on basicComplete or detailedComplete update\n    if (basicComplete && sessionStorage.getItem(\"basicCount\") === null) {\n      //if basicQs completed for the first time, notify user\n      setNotification(true);\n    } else if (detailedComplete && sessionStorage.getItem(\"detailedCount\") === null) {\n      //if detailedQs completed for the first time, notify user\n      setNotification(true);\n    } else {\n      //Turn notification off after viewed \n      setNotification(false);\n    }\n  }, [basicComplete, detailedComplete]);\n  useEffect(() => {\n    //Changes image of bell to notification bell when notification is updated\n    if (notification) {\n      changeImage(true);\n    } else {\n      changeImage(false);\n    }\n  }, [notification]);\n  function basicToggle() {\n    //Function to handle toggling the notification bar on and off\n    toggleBar(!notifBar);\n    if (notification === true) {\n      setNotification(false); //set notification to false if it equals true when clicked\n      if (basicComplete) {\n        sessionStorage.setItem(\"basicCount\", \"1\"); //update counter so notification doesn't keep getting displayed after being viewed\n      }\n      if (detailedComplete) {\n        //update counter so notification doesn't keep getting displayed after being viewed\n        sessionStorage.setItem(\"detailedCount\", \"1\");\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image === true ? notificationBell : bell,\n        onClick: basicToggle,\n        alt: \"Bell here\",\n        className: \"notif-bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), basicComplete && detailedComplete ? notifBar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notif-bar\",\n      children: [\"Basic Questions are complete! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 117\n      }, this), \" Detailed Questions are complete! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 160\n      }, this), \" Check out the results page! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 60\n    }, this) : basicComplete && !detailedComplete ? notifBar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notif-bar\",\n      children: [\"Basic Questions are complete! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 118\n      }, this), \" Check out the results page!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 61\n    }, this) : detailedComplete && !basicComplete ? notifBar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notif-bar\",\n      children: [\"Detailed Questions are complete! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 122\n      }, this), \" Check out the results page! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 62\n    }, this) : notifBar && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notif-bar\",\n      children: \"No questions finished yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 183\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n}\n_s(NotifBell, \"uMT15BX1u1ggYK2kgbEV58Y7Rjo=\");\n_c = NotifBell;\nvar _c;\n$RefreshReg$(_c, \"NotifBell\");","map":{"version":3,"names":["useEffect","useState","bell","notificationBell","jsxDEV","_jsxDEV","NotifBell","basicComplete","detailedComplete","_s","notifBar","toggleBar","image","changeImage","notification","setNotification","sessionStorage","getItem","basicToggle","setItem","className","children","src","onClick","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/notification.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport bell from \"./Images/bell.png\"\r\nimport notificationBell from \"./Images/notificationBell.png\"\r\n\r\nexport interface submitButton{ // Interface for keeping track of Basic Question Completion\r\n    basicComplete: boolean;\r\n    detailedComplete: boolean;\r\n}\r\n\r\nexport function NotifBell({basicComplete, detailedComplete}: submitButton): JSX.Element{\r\n    const [notifBar, toggleBar] = useState<boolean>(false);\r\n    const [image, changeImage] = useState<boolean>(false);\r\n    const [notification, setNotification] = useState<boolean>(false);\r\n\r\n    useEffect(() => { //Runs on basicComplete or detailedComplete update\r\n        if (basicComplete && sessionStorage.getItem(\"basicCount\") === null) { //if basicQs completed for the first time, notify user\r\n            setNotification(true);\r\n        } else if (detailedComplete && sessionStorage.getItem(\"detailedCount\") === null){//if detailedQs completed for the first time, notify user\r\n            setNotification(true);\r\n        } else {//Turn notification off after viewed \r\n            setNotification(false);\r\n        }\r\n    }, [basicComplete, detailedComplete]);\r\n\r\n    useEffect(() => { //Changes image of bell to notification bell when notification is updated\r\n        if(notification){\r\n            changeImage(true);\r\n        }\r\n        else{\r\n            changeImage(false);\r\n        }\r\n    }, [notification])\r\n\r\n    function basicToggle(): void{ //Function to handle toggling the notification bar on and off\r\n        toggleBar(!notifBar);\r\n        if(notification === true){\r\n            setNotification(false); //set notification to false if it equals true when clicked\r\n            if(basicComplete){\r\n                sessionStorage.setItem(\"basicCount\", \"1\") //update counter so notification doesn't keep getting displayed after being viewed\r\n            }\r\n            \r\n            if(detailedComplete){ //update counter so notification doesn't keep getting displayed after being viewed\r\n                sessionStorage.setItem(\"detailedCount\", \"1\")\r\n            }\r\n        }\r\n    }\r\n    return (<div className=\"container\">\r\n        <div>\r\n            <img src={image === true ? notificationBell : bell} onClick={basicToggle} alt=\"Bell here\" className=\"notif-bell\"></img>\r\n        </div>\r\n        {(basicComplete && detailedComplete)? (notifBar && <div className=\"notif-bar\">Basic Questions are complete! <br></br> Detailed Questions are complete! <br></br> Check out the results page! </div>) :\r\n        ((basicComplete && !detailedComplete)? (notifBar && <div className=\"notif-bar\">Basic Questions are complete! <br></br> Check out the results page!</div>) :\r\n        ((detailedComplete && !basicComplete)?  (notifBar && <div className=\"notif-bar\">Detailed Questions are complete! <br></br> Check out the results page! </div> ): (notifBar && <div className=\"notif-bar\">No questions finished yet</div>)))}\r\n\r\n    </div>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}