{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { backgroundStyle } from \"./CSS/Background\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent({\n  basicComplete,\n  toggleBasic,\n  savedCareer,\n  setCareer\n}) {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [questions, setQuestions] = useState([{\n    text: \"How much noise do you mind in your work environment?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"No noise\"\n    }, {\n      id: 2,\n      label: \"A little noise\"\n    }, {\n      id: 3,\n      label: \"A lot of noise\"\n    }, {\n      id: 4,\n      label: \"I don't mind any\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"What type of environment would you prefer to work in?\",\n    type: \"checkbox\",\n    choices: [{\n      id: 1,\n      label: \"Office\"\n    }, {\n      id: 2,\n      label: \"Outdoors\"\n    }, {\n      id: 3,\n      label: \"Remote\"\n    }, {\n      id: 4,\n      label: \"Hybrid\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"Are you interested in any STEM fields?\",\n    type: \"checkbox\",\n    choices: [{\n      id: 1,\n      label: \"Science\"\n    }, {\n      id: 2,\n      label: \"Technology\"\n    }, {\n      id: 3,\n      label: \"Engineering\"\n    }, {\n      id: 4,\n      label: \"Math\"\n    }, {\n      id: 5,\n      label: \"None\"\n    }],\n    selected: [false, false, false, false, false]\n  }, {\n    text: \"Would you be fine doing manual labor?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Not at all\"\n    }, {\n      id: 2,\n      label: \"Some is fine\"\n    }, {\n      id: 3,\n      label: \"More often than not\"\n    }, {\n      id: 4,\n      label: \"Very comfortable\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"How much would you like to interact with others?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Strictly never\"\n    }, {\n      id: 2,\n      label: \"As little as possible\"\n    }, {\n      id: 3,\n      label: \"Occasional interaction\"\n    }, {\n      id: 4,\n      label: \"Fairly often\"\n    }, {\n      id: 5,\n      label: \"All the time\"\n    }],\n    selected: [false, false, false, false, false]\n  }, {\n    text: \"How comfortable are you with technology?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Very uncomfortable\"\n    }, {\n      id: 2,\n      label: \"Slightly uncomfortable\"\n    }, {\n      id: 3,\n      label: \"Decently experienced\"\n    }, {\n      id: 4,\n      label: \"Extremely comfortable\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"What is your ideal annual salary?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"$30k - $50k\"\n    }, {\n      id: 2,\n      label: \"$50k - $70k\"\n    }, {\n      id: 3,\n      label: \"$70k - $90k\"\n    }, {\n      id: 4,\n      label: \"$90k - $110k\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"How much do you value communication skills?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Not important at all\"\n    }, {\n      id: 2,\n      label: \"A fair amount\"\n    }, {\n      id: 3,\n      label: \"A lot\"\n    }, {\n      id: 4,\n      label: \"Extremely important\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"What's the highest level of education you plan on taking?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"High School diploma\"\n    }, {\n      id: 2,\n      label: \"Bachelor's Degree\"\n    }, {\n      id: 3,\n      label: \"Master's Degree\"\n    }, {\n      id: 4,\n      label: \"Doctoral Degree\"\n    }],\n    selected: [false, false, false, false]\n  }]);\n  function handleSave() {\n    localStorage.setItem(\"quizProgress\", JSON.stringify(progress));\n    localStorage.setItem(\"quizAnswers\", JSON.stringify(questions));\n  }\n  function handleSubmit({\n    basicComplete,\n    toggleBasic\n  }) {\n    toggleBasic(!basicComplete);\n    handleSave();\n    if (questions.some(question => question.selected.some(selected => selected))) {\n      setCareer(\"quizAnswers\");\n    } else {\n      setCareer(\"\");\n    }\n    alert(\"Thanks for completing the Basic Career quiz!\");\n  }\n  useEffect(() => {\n    const savedProgress = localStorage.getItem(\"quizProgress\");\n    const savedAnswers = localStorage.getItem(\"quizAnswers\");\n    if (savedProgress) {\n      setProgress(JSON.parse(savedProgress));\n    } else {\n      setProgress(0);\n    }\n    if (savedAnswers) {\n      setQuestions(JSON.parse(savedAnswers));\n    }\n  }, []);\n  function BasicSubmit({\n    basicComplete,\n    toggleBasic\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\"\n        },\n        disabled: progress < 100,\n        onClick: () => handleSubmit({\n          basicComplete,\n          toggleBasic\n        }),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n  function BasicSave({\n    savedCareer,\n    setCareer\n  }) {\n    const savedAnswers = localStorage.getItem(\"quizAnswers\");\n    const savedProgress = localStorage.getItem(\"quizProgress\");\n    if (savedAnswers) {\n      setCareer(\"quizAnswers\");\n    } else if (savedProgress) {\n      setCareer(\"quizProgress\");\n    } else {\n      setCareer(\"\");\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\"\n        },\n        disabled: progress < 100,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  function updateAnswer(event, index, selectIndex) {\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[index].type === \"radio\") {\n      // Set all to false and only mark the selected index as true\n      updatedQuestions[index].selected = updatedQuestions[index].selected.map((_, i) => i === selectIndex);\n    } else {\n      // Checkbox logic\n      updatedQuestions[index].selected[selectIndex] = event.target.checked;\n    }\n    setQuestions(updatedQuestions);\n    updateProgress(updatedQuestions);\n  }\n  function updateProgress(updatedQuestions) {\n    const totalQuestions = updatedQuestions.length;\n    const answeredQuestions = updatedQuestions.filter(question => question.selected.some(isSelected => isSelected)).length;\n    const progressPercentage = answeredQuestions / totalQuestions * 100;\n    setProgress(progressPercentage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          style: {\n            border: \"2px solid red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This assessment is designed to determine an appropriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"100px\"\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: question.choices.map((choice, selectIndex) => /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: question.type,\n              label: choice.label,\n              name: `basic-question-${index}` // Unique name for each question\n              ,\n              value: choice.id,\n              checked: question.selected[selectIndex] // Keep track of selected state\n              ,\n              onChange: event => updateAnswer(event, index, selectIndex)\n            }, choice.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"1350px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            float: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(BasicSubmit, {\n            basicComplete: basicComplete,\n            toggleBasic: toggleBasic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(BasicSave, {\n            savedCareer: savedCareer,\n            setCareer: setCareer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicCareerComponent, \"fsk4xUPCS0LuXSQB4U4VtmGV8oY=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["backgroundStyle","useEffect","useState","Button","Container","Form","jsxDEV","_jsxDEV","BasicCareerComponent","basicComplete","toggleBasic","savedCareer","setCareer","_s","progress","setProgress","questions","setQuestions","text","type","choices","id","label","selected","handleSave","localStorage","setItem","JSON","stringify","handleSubmit","some","question","alert","savedProgress","getItem","savedAnswers","parse","BasicSubmit","children","style","height","width","borderRadius","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","BasicSave","updateAnswer","event","index","selectIndex","updatedQuestions","map","_","i","target","checked","updateProgress","totalQuestions","length","answeredQuestions","filter","isSelected","progressPercentage","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","toFixed","value","max","textAlign","border","marginLeft","choice","Check","name","onChange","float","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { backgroundStyle } from \"./CSS/Background\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { FormCheckType } from \"react-bootstrap/esm/FormCheck\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\n\r\nexport interface submitButton{ // Interface for keeping track of Basic Question Completion\r\n  basicComplete: boolean;\r\n  toggleBasic: (notBasic: boolean) => void;\r\n}\r\n\r\nexport interface saveButton\r\n{\r\n  savedCareer: string\r\n  setCareer: (newState: string) => void;\r\n}\r\n\r\nexport function BasicCareerComponent({basicComplete, toggleBasic, savedCareer, setCareer}: submitButton & saveButton): JSX.Element \r\n{\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [questions, setQuestions] = useState([\r\n    { text: \"How much noise do you mind in your work environment?\", type: \"radio\", choices: [{ id: 1, label: \"No noise\" }, { id: 2, label: \"A little noise\" }, { id: 3, label: \"A lot of noise\" }, {id: 4, label: \"I don't mind any\"}], selected: [false, false, false, false] },\r\n    { text: \"What type of environment would you prefer to work in?\", type: \"checkbox\", choices: [{ id: 1, label: \"Office\" }, { id: 2, label: \"Outdoors\" }, { id: 3, label: \"Remote\" }, {id: 4, label: \"Hybrid\" }], selected: [false, false, false, false] },\r\n    { text: \"Are you interested in any STEM fields?\", type: \"checkbox\", choices: [{ id: 1, label: \"Science\" }, { id: 2, label: \"Technology\" }, { id: 3, label: \"Engineering\" }, { id: 4, label: \"Math\" }, { id: 5, label: \"None\" } ], selected: [false, false, false, false, false]},\r\n    { text: \"Would you be fine doing manual labor?\", type: \"radio\", choices: [{ id: 1, label: \"Not at all\" }, { id: 2, label: \"Some is fine\" }, { id: 3, label: \"More often than not\" }, { id: 4, label: \"Very comfortable\" }], selected: [false, false, false, false] },\r\n    { text: \"How much would you like to interact with others?\", type: \"radio\", choices: [{ id: 1, label: \"Strictly never\" }, { id: 2, label: \"As little as possible\" }, { id: 3, label: \"Occasional interaction\" },{ id: 4, label: \"Fairly often\" }, { id: 5, label: \"All the time\" } ], selected: [false, false, false, false, false] },\r\n    { text: \"How comfortable are you with technology?\", type: \"radio\", choices: [{ id: 1, label: \"Very uncomfortable\" }, { id: 2, label: \"Slightly uncomfortable\" }, { id: 3, label: \"Decently experienced\" }, {id: 4, label: \"Extremely comfortable\"}], selected: [false, false, false, false] },\r\n    { text: \"What is your ideal annual salary?\", type: \"radio\", choices: [{ id: 1, label: \"$30k - $50k\" }, { id: 2, label: \"$50k - $70k\" }, { id: 3, label: \"$70k - $90k\" }, {id: 4, label: \"$90k - $110k\"}], selected: [false, false, false, false] },\r\n    { text: \"How much do you value communication skills?\", type: \"radio\", choices: [{ id: 1, label: \"Not important at all\" }, { id: 2, label: \"A fair amount\" }, { id: 3, label: \"A lot\" }, {id: 4, label: \"Extremely important\"}], selected: [false, false, false, false] },\r\n    { text: \"What's the highest level of education you plan on taking?\", type: \"radio\", choices: [{ id: 1, label: \"High School diploma\" }, { id: 2, label: \"Bachelor's Degree\" }, { id: 3, label: \"Master's Degree\" }, {id: 4, label: \"Doctoral Degree\"}], selected: [false, false, false, false] }\r\n  ]);\r\n\r\n  function handleSave()\r\n  {\r\n    localStorage.setItem(\"quizProgress\", JSON.stringify(progress));\r\n    localStorage.setItem(\"quizAnswers\", JSON.stringify(questions));\r\n  }\r\n\r\n  function handleSubmit({basicComplete, toggleBasic}: submitButton)\r\n  {\r\n    toggleBasic(!basicComplete);\r\n    handleSave();\r\n    if (questions.some(question => question.selected.some(selected => selected))) \r\n    {\r\n      setCareer(\"quizAnswers\");\r\n    } \r\n    else \r\n    {\r\n      setCareer(\"\");\r\n    }\r\n    alert(\"Thanks for completing the Basic Career quiz!\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const savedProgress = localStorage.getItem(\"quizProgress\");\r\n    const savedAnswers = localStorage.getItem(\"quizAnswers\");\r\n    if (savedProgress) \r\n    {\r\n      setProgress(JSON.parse(savedProgress));\r\n    }\r\n    else\r\n    {\r\n      setProgress(0);\r\n    }\r\n    if (savedAnswers) {\r\n      setQuestions(JSON.parse(savedAnswers));\r\n    }\r\n  }, []);\r\n\r\n  function BasicSubmit({basicComplete, toggleBasic}: submitButton): JSX.Element {\r\n    return(<div>\r\n      <Button style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\"}} disabled={progress < 100} onClick={() => handleSubmit({basicComplete, toggleBasic})}>Submit</Button>\r\n    </div>)\r\n  }\r\n\r\n  function BasicSave({savedCareer, setCareer }: saveButton): JSX.Element \r\n  {\r\n      const savedAnswers = localStorage.getItem(\"quizAnswers\");\r\n      const savedProgress = localStorage.getItem(\"quizProgress\");\r\n      if (savedAnswers) {\r\n        setCareer(\"quizAnswers\");\r\n      } else if (savedProgress) {\r\n        setCareer(\"quizProgress\");\r\n      } else {\r\n        setCareer(\"\");\r\n      }\r\n    return(<div>\r\n      <Button style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\"}} disabled={progress < 100}>Save</Button>\r\n    </div>)\r\n  }\r\n\r\n  \r\n  function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, index: number, selectIndex: number) {\r\n    const updatedQuestions = [...questions];\r\n\r\n    if (updatedQuestions[index].type === \"radio\") {\r\n      // Set all to false and only mark the selected index as true\r\n      updatedQuestions[index].selected = updatedQuestions[index].selected.map((_, i) => i === selectIndex);\r\n    } else {\r\n      // Checkbox logic\r\n      updatedQuestions[index].selected[selectIndex] = event.target.checked;\r\n    }\r\n    setQuestions(updatedQuestions);\r\n    updateProgress(updatedQuestions); \r\n  }\r\n\r\n  function updateProgress(updatedQuestions: typeof questions): void {\r\n    const totalQuestions = updatedQuestions.length;\r\n    const answeredQuestions = updatedQuestions.filter((question) =>\r\n      question.selected.some((isSelected) => isSelected)\r\n    ).length;\r\n    const progressPercentage = (answeredQuestions / totalQuestions) * 100;\r\n    setProgress(progressPercentage);\r\n  }\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n          <label htmlFor=\"question\" style={{ marginRight: \"10px\" }}>\r\n            Percent Complete: {progress.toFixed(0)}%\r\n          </label>\r\n          <progress id=\"question\" value={progress} max=\"100\" />\r\n        </div>\r\n        <h1 style={{ textAlign: \"center\" }}>Here is the Basic Career Page!</h1>\r\n        <br />\r\n        <div>\r\n          <Container style={{ border: \"2px solid red\" }}>\r\n            <p>\r\n              This assessment is designed to determine an appropriate career path going forward.\r\n              You will be asked a series of multiple choice questions. If you're looking for more\r\n              in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're\r\n              in a comfortable environment and answer each question to the best of your ability.\r\n            </p>\r\n          </Container>\r\n        </div>\r\n        <div style={{ marginLeft: \"100px\"}}> {/* Add styles as needed */}\r\n          <br />\r\n          {questions.map((question, index) => (\r\n            <div key={index}>\r\n              <b>{question.text}</b>\r\n              <Form>\r\n                {question.choices.map((choice, selectIndex) => (\r\n                  <Form.Check\r\n                    key={choice.id}\r\n                    type={question.type as FormCheckType}\r\n                    label={choice.label}\r\n                    name={`basic-question-${index}`} // Unique name for each question\r\n                    value={choice.id}\r\n                    checked={question.selected[selectIndex]} // Keep track of selected state\r\n                    onChange={(event) => updateAnswer(event, index, selectIndex)}\r\n                  />\r\n                ))}\r\n              </Form>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div style={{ marginLeft: \"1350px\"}}>\r\n    <div style = {{display: \"flex\", float: \"right\"}}>\r\n    <BasicSubmit basicComplete={basicComplete} toggleBasic={toggleBasic}/>\r\n    <BasicSave savedCareer= {savedCareer} setCareer={setCareer}></BasicSave>\r\n    </div>\r\n</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,MAAM,EAAEC,SAAS,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAa1D,OAAO,SAASC,oBAAoBA,CAAC;EAACC,aAAa;EAAEC,WAAW;EAAEC,WAAW;EAAEC;AAAoC,CAAC,EACpH;EAAAC,EAAA;EACE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAS,CAAC,CAAC;EACnD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,CACzC;IAAEgB,IAAI,EAAE,sDAAsD;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,EAAE;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAkB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EAC5Q;IAAEL,IAAI,EAAE,uDAAuD;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAAE;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACvP;IAAEL,IAAI,EAAE,wCAAwC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAU,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAa,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAO,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAE;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAC,CAAC,EAChR;IAAEL,IAAI,EAAE,uCAAuC;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAa,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAsB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAmB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACpQ;IAAEL,IAAI,EAAE,kDAAkD;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAwB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAyB,CAAC,EAAC;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,CAAE;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACpU;IAAEL,IAAI,EAAE,0CAA0C;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAqB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAyB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAuB,CAAC,EAAE;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAuB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EAC7R;IAAEL,IAAI,EAAE,mCAAmC;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EAClP;IAAEL,IAAI,EAAE,6CAA6C;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAuB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAgB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAAE;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAqB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACxQ;IAAEL,IAAI,EAAE,2DAA2D;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAsB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAoB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAkB,CAAC,EAAE;MAACD,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,CAChS,CAAC;EAEF,SAASC,UAAUA,CAAA,EACnB;IACEC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAC;IAC9DW,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS,CAAC,CAAC;EAChE;EAEA,SAASa,YAAYA,CAAC;IAACpB,aAAa;IAAEC;EAAyB,CAAC,EAChE;IACEA,WAAW,CAAC,CAACD,aAAa,CAAC;IAC3Be,UAAU,CAAC,CAAC;IACZ,IAAIR,SAAS,CAACc,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACR,QAAQ,CAACO,IAAI,CAACP,QAAQ,IAAIA,QAAQ,CAAC,CAAC,EAC5E;MACEX,SAAS,CAAC,aAAa,CAAC;IAC1B,CAAC,MAED;MACEA,SAAS,CAAC,EAAE,CAAC;IACf;IACAoB,KAAK,CAAC,8CAA8C,CAAC;EACvD;EAEA/B,SAAS,CAAC,MAAM;IACd,MAAMgC,aAAa,GAAGR,YAAY,CAACS,OAAO,CAAC,cAAc,CAAC;IAC1D,MAAMC,YAAY,GAAGV,YAAY,CAACS,OAAO,CAAC,aAAa,CAAC;IACxD,IAAID,aAAa,EACjB;MACElB,WAAW,CAACY,IAAI,CAACS,KAAK,CAACH,aAAa,CAAC,CAAC;IACxC,CAAC,MAED;MACElB,WAAW,CAAC,CAAC,CAAC;IAChB;IACA,IAAIoB,YAAY,EAAE;MAChBlB,YAAY,CAACU,IAAI,CAACS,KAAK,CAACD,YAAY,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,SAASE,WAAWA,CAAC;IAAC5B,aAAa;IAAEC;EAAyB,CAAC,EAAe;IAC5E,oBAAOH,OAAA;MAAA+B,QAAA,eACL/B,OAAA,CAACJ,MAAM;QAACoC,KAAK,EAAI;UAACC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAE;QAACC,QAAQ,EAAE7B,QAAQ,GAAG,GAAI;QAAC8B,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAAC;UAACpB,aAAa;UAAEC;QAAW,CAAC,CAAE;QAAA4B,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzK,CAAC;EACR;EAEA,SAASC,SAASA,CAAC;IAACtC,WAAW;IAAEC;EAAsB,CAAC,EACxD;IACI,MAAMuB,YAAY,GAAGV,YAAY,CAACS,OAAO,CAAC,aAAa,CAAC;IACxD,MAAMD,aAAa,GAAGR,YAAY,CAACS,OAAO,CAAC,cAAc,CAAC;IAC1D,IAAIC,YAAY,EAAE;MAChBvB,SAAS,CAAC,aAAa,CAAC;IAC1B,CAAC,MAAM,IAAIqB,aAAa,EAAE;MACxBrB,SAAS,CAAC,cAAc,CAAC;IAC3B,CAAC,MAAM;MACLA,SAAS,CAAC,EAAE,CAAC;IACf;IACF,oBAAOL,OAAA;MAAA+B,QAAA,eACL/B,OAAA,CAACJ,MAAM;QAACoC,KAAK,EAAI;UAACC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAE;QAACC,QAAQ,EAAE7B,QAAQ,GAAG,GAAI;QAAAwB,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5G,CAAC;EACR;EAGA,SAASE,YAAYA,CAACC,KAA0C,EAAEC,KAAa,EAAEC,WAAmB,EAAE;IACpG,MAAMC,gBAAgB,GAAG,CAAC,GAAGtC,SAAS,CAAC;IAEvC,IAAIsC,gBAAgB,CAACF,KAAK,CAAC,CAACjC,IAAI,KAAK,OAAO,EAAE;MAC5C;MACAmC,gBAAgB,CAACF,KAAK,CAAC,CAAC7B,QAAQ,GAAG+B,gBAAgB,CAACF,KAAK,CAAC,CAAC7B,QAAQ,CAACgC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKJ,WAAW,CAAC;IACtG,CAAC,MAAM;MACL;MACAC,gBAAgB,CAACF,KAAK,CAAC,CAAC7B,QAAQ,CAAC8B,WAAW,CAAC,GAAGF,KAAK,CAACO,MAAM,CAACC,OAAO;IACtE;IACA1C,YAAY,CAACqC,gBAAgB,CAAC;IAC9BM,cAAc,CAACN,gBAAgB,CAAC;EAClC;EAEA,SAASM,cAAcA,CAACN,gBAAkC,EAAQ;IAChE,MAAMO,cAAc,GAAGP,gBAAgB,CAACQ,MAAM;IAC9C,MAAMC,iBAAiB,GAAGT,gBAAgB,CAACU,MAAM,CAAEjC,QAAQ,IACzDA,QAAQ,CAACR,QAAQ,CAACO,IAAI,CAAEmC,UAAU,IAAKA,UAAU,CACnD,CAAC,CAACH,MAAM;IACR,MAAMI,kBAAkB,GAAIH,iBAAiB,GAAGF,cAAc,GAAI,GAAG;IACrE9C,WAAW,CAACmD,kBAAkB,CAAC;EACjC;EACA,oBACE3D,OAAA;IAAKgC,KAAK,EAAEvC,eAAgB;IAAAsC,QAAA,eAC1B/B,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAKgC,KAAK,EAAE;UAAE4B,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE,UAAU;UAAEC,YAAY,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAO,CAAE;QAAAjC,QAAA,gBAC3H/B,OAAA;UAAOiE,OAAO,EAAC,UAAU;UAACjC,KAAK,EAAE;YAAEgC,WAAW,EAAE;UAAO,CAAE;UAAAjC,QAAA,GAAC,oBACtC,EAACxB,QAAQ,CAAC2D,OAAO,CAAC,CAAC,CAAC,EAAC,GACzC;QAAA;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRzC,OAAA;UAAUc,EAAE,EAAC,UAAU;UAACqD,KAAK,EAAE5D,QAAS;UAAC6D,GAAG,EAAC;QAAK;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNzC,OAAA;QAAIgC,KAAK,EAAE;UAAEqC,SAAS,EAAE;QAAS,CAAE;QAAAtC,QAAA,EAAC;MAA8B;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvEzC,OAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNzC,OAAA;QAAA+B,QAAA,eACE/B,OAAA,CAACH,SAAS;UAACmC,KAAK,EAAE;YAAEsC,MAAM,EAAE;UAAgB,CAAE;UAAAvC,QAAA,eAC5C/B,OAAA;YAAA+B,QAAA,EAAG;UAKH;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACNzC,OAAA;QAAKgC,KAAK,EAAE;UAAEuC,UAAU,EAAE;QAAO,CAAE;QAAAxC,QAAA,GAAC,GAAC,eACnC/B,OAAA;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLhC,SAAS,CAACuC,GAAG,CAAC,CAACxB,QAAQ,EAAEqB,KAAK,kBAC7B7C,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,EAAIP,QAAQ,CAACb;UAAI;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBzC,OAAA,CAACF,IAAI;YAAAiC,QAAA,EACFP,QAAQ,CAACX,OAAO,CAACmC,GAAG,CAAC,CAACwB,MAAM,EAAE1B,WAAW,kBACxC9C,OAAA,CAACF,IAAI,CAAC2E,KAAK;cAET7D,IAAI,EAAEY,QAAQ,CAACZ,IAAsB;cACrCG,KAAK,EAAEyD,MAAM,CAACzD,KAAM;cACpB2D,IAAI,EAAG,kBAAiB7B,KAAM,EAAE,CAAC;cAAA;cACjCsB,KAAK,EAAEK,MAAM,CAAC1D,EAAG;cACjBsC,OAAO,EAAE5B,QAAQ,CAACR,QAAQ,CAAC8B,WAAW,CAAE,CAAC;cAAA;cACzC6B,QAAQ,EAAG/B,KAAK,IAAKD,YAAY,CAACC,KAAK,EAAEC,KAAK,EAAEC,WAAW;YAAE,GANxD0B,MAAM,CAAC1D,EAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOf,CACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,GAdCI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNzC,OAAA;QAAKgC,KAAK,EAAE;UAAEuC,UAAU,EAAE;QAAQ,CAAE;QAAAxC,QAAA,eACxC/B,OAAA;UAAKgC,KAAK,EAAI;YAAC4B,OAAO,EAAE,MAAM;YAAEgB,KAAK,EAAE;UAAO,CAAE;UAAA7C,QAAA,gBAChD/B,OAAA,CAAC8B,WAAW;YAAC5B,aAAa,EAAEA,aAAc;YAACC,WAAW,EAAEA;UAAY;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACtEzC,OAAA,CAAC0C,SAAS;YAACtC,WAAW,EAAGA,WAAY;YAACC,SAAS,EAAEA;UAAU;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CApJeL,oBAAoB;AAAA4E,EAAA,GAApB5E,oBAAoB;AAAA,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}