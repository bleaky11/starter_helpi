{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\nimport { LoginForm } from './LoginForm';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    password: ''\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState('Create Account');\n  const [db, setDb] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n\n  // Checks username/password match\n  const checkInfo = (savedUsername, savedPassword, userInput, passInput) => {\n    if (userInput === savedUsername && passInput === savedPassword) {\n      return true;\n    } else {\n      alert(userInput !== savedUsername ? 'Wrong username entered!' : 'Wrong password entered!');\n      return false;\n    }\n  };\n  useEffect(() => {\n    const initializeDatabase = async () => {\n      const indexedDB = window.indexedDB;\n      const request = indexedDB.open('UserDatabase', 2);\n      request.onerror = event => {\n        console.error('Error opening user database!', event);\n      };\n      request.onupgradeneeded = event => {\n        const dbInstance = event.target.result;\n        dbInstance.createObjectStore('users', {\n          keyPath: 'username'\n        });\n        console.log('Object store created.');\n      };\n      request.onsuccess = () => {\n        const dbInstance = request.result;\n        setDb(dbInstance);\n        loadUsers(dbInstance);\n      };\n    };\n    initializeDatabase();\n  }, []);\n  const loadUsers = dbInstance => {\n    const transaction = dbInstance.transaction('users', 'readonly');\n    const store = transaction.objectStore('users');\n    const getAllRequest = store.getAll();\n    getAllRequest.onsuccess = () => {\n      const allUsers = getAllRequest.result;\n      console.log('All users retrieved:', allUsers);\n      const rememberedAccounts = allUsers.filter(user => user.remembered);\n      setAccounts(rememberedAccounts);\n      console.log('Remembered accounts:', rememberedAccounts);\n    };\n    getAllRequest.onerror = event => {\n      console.error('Error retrieving users from the users object store:', event);\n    };\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!userInfo.username || !userInfo.password) {\n      console.error('Username and password must be provided.');\n      return;\n    }\n    if (db) {\n      const transaction = db.transaction('users', 'readwrite');\n      const store = transaction.objectStore('users');\n      const userQuery = store.get(userInfo.username);\n      userQuery.onsuccess = () => {\n        const existingUser = userQuery.result;\n        if (existingUser) {\n          const {\n            username,\n            password,\n            remembered\n          } = existingUser;\n          if (checkInfo(username, password, userInfo.username, userInfo.password)) {\n            setIsLoggedIn(true);\n            if (remembered !== remember) {\n              const updatedUser = {\n                ...existingUser,\n                remembered: remember\n              };\n              store.put(updatedUser).onsuccess = () => {\n                loadUsers(db); // Reload users after updating\n              };\n            } else {\n              loadUsers(db); // Reload users even if nothing changed\n            }\n          }\n        } else if (formTitle === 'Create Account') {\n          const newUser = {\n            username: userInfo.username,\n            password: userInfo.password,\n            remembered: remember\n          };\n          store.put(newUser).onsuccess = () => {\n            loadUsers(db); // Reload users after account creation\n            alert('Account creation success!');\n            clearForm();\n            setIsLoggedIn(true);\n          };\n        } else {\n          alert('User does not exist. Please create an account first.');\n          clearForm();\n        }\n      };\n      userQuery.onerror = () => {\n        console.error('Error querying user data');\n      };\n      transaction.onerror = event => {\n        console.error('Transaction failed:', event);\n      };\n    }\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const clearForm = () => {\n    setUserInfo({\n      username: '',\n      password: ''\n    });\n    setRemember(false);\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  const handleRemember = () => {\n    setRemember(!remember);\n  };\n  const showForm = title => {\n    setFormTitle(title);\n    if (title === 'Create Account') {\n      clearForm();\n    }\n    toggleForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: jerboa,\n        alt: \"Four-Toed Jerboa\",\n        style: {\n          float: 'left',\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm('Create Account'),\n        title: 'Logged-in User'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        style: {\n          float: 'left',\n          marginTop: '10px',\n          borderRadius: '20px',\n          backgroundColor: 'darkred'\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: 'left',\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm('Create Account'),\n        title: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showForm('Log in'),\n        style: {\n          float: 'left',\n          marginTop: '10px',\n          borderRadius: '20px',\n          backgroundColor: 'darkblue'\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      updateStatus: updateStatus,\n      selectedUser: selectedUser,\n      setSelect: setSelectedUser,\n      accounts: accounts,\n      closeForm: toggleForm,\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"ta35dCg4QBhc73yJSD/zy26pb3k=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","jerboa","LoginForm","Button","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","db","setDb","accounts","setAccounts","selectedUser","setSelectedUser","checkInfo","savedUsername","savedPassword","userInput","passInput","alert","initializeDatabase","indexedDB","window","request","open","onerror","event","console","error","onupgradeneeded","dbInstance","target","result","createObjectStore","keyPath","log","onsuccess","loadUsers","transaction","store","objectStore","getAllRequest","getAll","allUsers","rememberedAccounts","filter","user","remembered","handleSubmit","preventDefault","userQuery","get","existingUser","updatedUser","put","newUser","clearForm","toggleForm","updateStatus","name","value","prevInfo","handleLogout","handleRemember","showForm","title","children","src","alt","style","float","width","height","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","borderRadius","backgroundColor","setSelect","closeForm","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\r\nimport { LoginForm } from './LoginForm';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [userInfo, setUserInfo] = useState({ username: '', password: '' });\r\n  const [remember, setRemember] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [formTitle, setFormTitle] = useState('Create Account');\r\n  const [db, setDb] = useState<IDBDatabase | null>(null);\r\n  const [accounts, setAccounts] = useState<{ username: string; password: string }[]>([]);\r\n  const [selectedUser, setSelectedUser] = useState('');\r\n\r\n  // Checks username/password match\r\n  const checkInfo = (savedUsername: string, savedPassword: string, userInput: string, passInput: string) => {\r\n    if (userInput === savedUsername && passInput === savedPassword) {\r\n      return true;\r\n    } else {\r\n      alert(userInput !== savedUsername ? 'Wrong username entered!' : 'Wrong password entered!');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeDatabase = async () => {\r\n      const indexedDB = window.indexedDB;\r\n      const request = indexedDB.open('UserDatabase', 2);\r\n\r\n      request.onerror = (event) => {\r\n        console.error('Error opening user database!', event);\r\n      };\r\n\r\n      request.onupgradeneeded = (event) => {\r\n        const dbInstance = (event.target as IDBOpenDBRequest).result;\r\n        dbInstance.createObjectStore('users', { keyPath: 'username' });\r\n        console.log('Object store created.');\r\n      };\r\n\r\n      request.onsuccess = () => {\r\n        const dbInstance = request.result;\r\n        setDb(dbInstance);\r\n        loadUsers(dbInstance);\r\n      };\r\n    };\r\n    initializeDatabase();\r\n  }, []);\r\n\r\n  const loadUsers = (dbInstance: IDBDatabase) => {\r\n    const transaction = dbInstance.transaction('users', 'readonly');\r\n    const store = transaction.objectStore('users');\r\n    const getAllRequest = store.getAll();\r\n\r\n    getAllRequest.onsuccess = () => {\r\n      const allUsers = getAllRequest.result as { username: string; password: string; remembered: boolean }[];\r\n      console.log('All users retrieved:', allUsers);\r\n\r\n      const rememberedAccounts = allUsers.filter((user) => user.remembered);\r\n      setAccounts(rememberedAccounts);\r\n      console.log('Remembered accounts:', rememberedAccounts);\r\n    };\r\n\r\n    getAllRequest.onerror = (event) => {\r\n      console.error('Error retrieving users from the users object store:', event);\r\n    };\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!userInfo.username || !userInfo.password) {\r\n      console.error('Username and password must be provided.');\r\n      return;\r\n    }\r\n\r\n    if (db) {\r\n      const transaction = db.transaction('users', 'readwrite');\r\n      const store = transaction.objectStore('users');\r\n      const userQuery = store.get(userInfo.username);\r\n\r\n      userQuery.onsuccess = () => {\r\n        const existingUser = userQuery.result;\r\n        if (existingUser) {\r\n          const { username, password, remembered } = existingUser;\r\n\r\n          if (checkInfo(username, password, userInfo.username, userInfo.password)) {\r\n            setIsLoggedIn(true);\r\n\r\n            if (remembered !== remember) {\r\n              const updatedUser = { ...existingUser, remembered: remember };\r\n              store.put(updatedUser).onsuccess = () => {\r\n                loadUsers(db); // Reload users after updating\r\n              };\r\n            } else {\r\n              loadUsers(db); // Reload users even if nothing changed\r\n            }\r\n          }\r\n        } else if (formTitle === 'Create Account') {\r\n          const newUser = { username: userInfo.username, password: userInfo.password, remembered: remember };\r\n          store.put(newUser).onsuccess = () => {\r\n            loadUsers(db); // Reload users after account creation\r\n            alert('Account creation success!');\r\n            clearForm();\r\n            setIsLoggedIn(true);\r\n          };\r\n        } else {\r\n          alert('User does not exist. Please create an account first.');\r\n          clearForm();\r\n        }\r\n      };\r\n\r\n      userQuery.onerror = () => {\r\n        console.error('Error querying user data');\r\n      };\r\n\r\n      transaction.onerror = (event) => {\r\n        console.error('Transaction failed:', event);\r\n      };\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setUserInfo({ username: '', password: '' });\r\n    setRemember(false);\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUserInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember(!remember);\r\n  };\r\n\r\n  const showForm = (title: string) => {\r\n    setFormTitle(title);\r\n    if (title === 'Create Account') {\r\n      clearForm();\r\n    }\r\n    toggleForm();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <img\r\n            src={jerboa}\r\n            alt=\"Four-Toed Jerboa\"\r\n            style={{ float: 'left', width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm('Create Account')}\r\n            title={'Logged-in User'}\r\n          />\r\n          <Button\r\n            onClick={handleLogout}\r\n            style={{ float: 'left', marginTop: '10px', borderRadius: '20px', backgroundColor: 'darkred' }}\r\n          >\r\n            Log out\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: 'left', width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm('Create Account')}\r\n            title=\"Guest\"\r\n          />\r\n          <Button\r\n            onClick={() => showForm('Log in')}\r\n            style={{ float: 'left', marginTop: '10px', borderRadius: '20px', backgroundColor: 'darkblue' }}\r\n          >\r\n            Log in\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          updateStatus={updateStatus}\r\n          selectedUser={selectedUser}\r\n          setSelect={setSelectedUser}\r\n          accounts={accounts}\r\n          closeForm={toggleForm}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}