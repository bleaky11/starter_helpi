{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport { LoginForm } from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const savedUsername = localStorage.getItem(\"username\") || \"\";\n    const savedPassword = localStorage.getItem(\"password\") || \"\";\n    const remembered = localStorage.getItem(\"remembered\") === \"true\";\n    if (remembered) {\n      setInfo({\n        username: savedUsername,\n        password: savedPassword\n      });\n      setRemember(remembered);\n      setIsLoggedIn(true); // User is considered logged in\n    }\n  }, []);\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleRemember = () => {\n    setRemember(prevRemember => !prevRemember);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // If 'Remember Me' is checked, save credentials; otherwise, don't save them\n    if (remember) {\n      saveUser();\n    } else {\n      clearStorage();\n    }\n\n    // Set the user as logged in for the current session\n    setIsLoggedIn(true);\n  };\n  const saveUser = () => {\n    localStorage.setItem(\"username\", userInfo.username);\n    localStorage.setItem(\"password\", userInfo.password);\n    localStorage.setItem(\"remembered\", \"true\");\n  };\n  const clearStorage = () => {\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"password\");\n    localStorage.removeItem(\"remembered\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn && remember ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        float: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Signed in as: \", userInfo.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), isFormOpen && /*#__PURE__*/_jsxDEV(LoginForm, {\n        userInfo: userInfo,\n        setInfo: setInfo,\n        remember: remember,\n        setRemember: setRemember,\n        handleRemember: handleRemember,\n        handleSubmit: handleSubmit,\n        updateStatus: updateStatus,\n        closeForm: () => setIsFormOpen(false),\n        formTitle: localStorage.getItem(\"username\") ? \"Log In\" : \"Create Account\" // Pass the title based on conditions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"gDVe7bdpIn4MkF24EGkxe7sVyts=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","LoginForm","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","savedUsername","localStorage","getItem","savedPassword","remembered","toggleForm","updateStatus","event","name","value","target","prevInfo","handleRemember","prevRemember","handleSubmit","preventDefault","saveUser","clearStorage","setItem","removeItem","children","style","float","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","cursor","onClick","closeForm","formTitle","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport { LoginForm } from './LoginForm';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setInfo] = useState<{ username: string; password: string }>({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const savedUsername = localStorage.getItem(\"username\") || \"\";\r\n    const savedPassword = localStorage.getItem(\"password\") || \"\";\r\n    const remembered = localStorage.getItem(\"remembered\") === \"true\";\r\n\r\n    if (remembered) {\r\n      setInfo({ username: savedUsername, password: savedPassword });\r\n      setRemember(remembered);\r\n      setIsLoggedIn(true); // User is considered logged in\r\n    }\r\n  }, []);\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember((prevRemember) => !prevRemember);\r\n  };\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    // If 'Remember Me' is checked, save credentials; otherwise, don't save them\r\n    if (remember) {\r\n      saveUser();\r\n    } else {\r\n      clearStorage();\r\n    }\r\n\r\n    // Set the user as logged in for the current session\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const saveUser = () => {\r\n    localStorage.setItem(\"username\", userInfo.username);\r\n    localStorage.setItem(\"password\", userInfo.password);\r\n    localStorage.setItem(\"remembered\", \"true\");\r\n  };\r\n\r\n  const clearStorage = () => {\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"password\");\r\n    localStorage.removeItem(\"remembered\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {(isLoggedIn && remember) ? (\r\n        <div style = {{float: \"left\"}}><h3>Signed in as: {userInfo.username}!</h3></div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={toggleForm}\r\n          />\r\n          {isFormOpen && (\r\n            <LoginForm\r\n              userInfo={userInfo}\r\n              setInfo={setInfo}\r\n              remember={remember}\r\n              setRemember={setRemember}\r\n              handleRemember={handleRemember}\r\n              handleSubmit={handleSubmit}\r\n              updateStatus={updateStatus}\r\n              closeForm={() => setIsFormOpen(false)}\r\n              formTitle={localStorage.getItem(\"username\") ? \"Log In\" : \"Create Account\"} // Pass the title based on conditions\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}