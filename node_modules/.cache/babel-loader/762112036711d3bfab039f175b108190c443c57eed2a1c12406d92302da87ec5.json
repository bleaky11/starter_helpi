{"ast":null,"code":"import{useEffect,useState}from\"react\";import{Button,Container,Form,Row,Col}from\"react-bootstrap\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function BasicCareerComponent(_ref){let{basicComplete,toggleBasic,savedBasicCareer,setBasicCareer,answers,setAnswerVals,setPage}=_ref;const[promptValues,setValues]=useState([]);const[progress,setProgress]=useState(0);const[questions,setQuestions]=useState([{text:\"How much noise do you mind in your work environment?\",type:\"radio\",choices:[{id:1,label:\"No noise\"},{id:2,label:\"A little noise\"},{id:3,label:\"A lot of noise\"},{id:4,label:\"As much as possible\"}],selected:[false,false,false,false]},{text:\"What type of environment would you prefer to work in?\",type:\"checkbox\",choices:[{id:1,label:\"Office\"},{id:2,label:\"Outdoors\"},{id:3,label:\"Remote\"},{id:4,label:\"Hybrid\"}],selected:[false,false,false,false]},{text:\"Are you interested in any STEM fields?\",type:\"checkbox\",choices:[{id:1,label:\"Science\"},{id:2,label:\"Technology\"},{id:3,label:\"Engineering\"},{id:4,label:\"Math\"},{id:5,label:\"None\"}],selected:[false,false,false,false,false]},{text:\"Would you be fine doing manual labor?\",type:\"radio\",choices:[{id:1,label:\"Not at all\"},{id:2,label:\"Somewhat\"},{id:3,label:\"More often than not\"},{id:4,label:\"Extremely\"}],selected:[false,false,false,false]},{text:\"How much would you like to interact with others?\",type:\"radio\",choices:[{id:1,label:\"Strictly never\"},{id:2,label:\"As little as possible\"},{id:3,label:\"Occasionally\"},{id:4,label:\"Fairly often\"},{id:5,label:\"All the time\"}],selected:[false,false,false,false,false]},{text:\"How comfortable are you with technology?\",type:\"radio\",choices:[{id:1,label:\"Very uncomfortable\"},{id:2,label:\"Slightly uncomfortable\"},{id:3,label:\"Decently experienced\"},{id:4,label:\"Extremely comfortable\"}],selected:[false,false,false,false]},{text:\"What is your ideal annual salary?\",type:\"radio\",choices:[{id:1,label:\"$30k - $50k\"},{id:2,label:\"$50k - $70k\"},{id:3,label:\"$70k - $90k\"},{id:4,label:\"$90k - $110k\"}],selected:[false,false,false,false]},{text:\"How much do you value communication skills?\",type:\"radio\",choices:[{id:1,label:\"Not important at all\"},{id:2,label:\"Slightly Important\"},{id:3,label:\"Very Important\"},{id:4,label:\"Extremely important\"}],selected:[false,false,false,false]},{text:\"What's the highest level of education you plan on taking?\",type:\"radio\",choices:[{id:1,label:\"High School diploma\"},{id:2,label:\"Bachelor's Degree\"},{id:3,label:\"Master's Degree\"},{id:4,label:\"Doctoral Degree\"}],selected:[false,false,false,false]}]);function handleBasicSave()//Saves user's progress to local storage\n{localStorage.setItem(\"basicQuizProgress\",JSON.stringify(progress));//keep track of question and progress states\nlocalStorage.setItem(\"basicQuizAnswers\",JSON.stringify(questions));if(progress<100){alert(\"Quiz saved!\");}}function handleClear(){//Clears user's saved progress and resets quiz\nlocalStorage.removeItem(\"basicQuizProgress\");localStorage.removeItem(\"basicQuizAnswers\");const clearedQuestions=questions.map(question=>({...question,selected:question.selected.map(()=>false)// Reset all selected states to false\n}));setQuestions(clearedQuestions);setProgress(0);setTimeout(()=>{alert(\"Quiz Cleared!\");},0);}const getSelectedAnswer=questions=>{// Helper function to grab the user's selected answer string from each question\nreturn questions.map(question=>{const selectedChoiceIndex=question.selected.findIndex(selected=>selected===true);if(selectedChoiceIndex!==-1){return{selectedAnswer:question.choices[selectedChoiceIndex].label};}else{return{selectedAnswer:\"\"};}});};const handleUpdateValues=()=>{// Helper function to populate array with user's answers\nconst selectedAnswers=getSelectedAnswer(questions);const selectedAnswerLabels=selectedAnswers.map(answer=>answer.selectedAnswer);setValues(selectedAnswerLabels);};const answerTags={//Assigns a tag to identify each index of the answerVals array\n0:'noise',1:'environment',2:'STEM',3:'manualLabor',4:'interaction',5:'techComfort',6:'salary',7:'communication',8:'education'};// eslint-disable-next-line react-hooks/exhaustive-deps\nfunction assignTagsToAnswers(answers){//Assigns initialized tags to each answer\nreturn answers.map((answer,index)=>({answer,tag:answerTags[index]||'unknown'}));}function handleSubmit(_ref2)//Handles user submission of quiz\n{let{basicComplete,toggleBasic}=_ref2;toggleBasic(true);//Sets state that tracks basic quiz completion to true\nhandleBasicSave();//Saves user's progress\nsetBasicCareer(\"basicQuizAnswers\");//Sets state that tracks user's saved answers\nhandleUpdateValues();//Populates array to track user's answers to each question\nalert(\"Thanks for completing the Basic Career quiz!\");}const clearStorage=()=>{localStorage.removeItem(\"basicQuizProgress\");localStorage.removeItem(\"basicQuizAnswers\");sessionStorage.removeItem(\"quizAttempt\");};useEffect(()=>{//Loads saved quiz data\nconst savedBasicProgress=localStorage.getItem(\"basicQuizProgress\");const savedBasicAnswers=localStorage.getItem(\"basicQuizAnswers\");if(!savedBasicProgress&&!savedBasicAnswers){clearStorage();sessionStorage.setItem(\"quizAttempt\",\"true\");// track if the user has a saved quiz for next visit\n}else if(savedBasicProgress&&savedBasicAnswers){setProgress(JSON.parse(savedBasicProgress||\"0\"));// Load saved progress\nsetQuestions(JSON.parse(savedBasicAnswers||\"[]\"));// Load saved answers\n}},[]);useEffect(()=>{//Populates and tags array of answers each time an answer is selected\nif(promptValues.length>0){const taggedAnswers=assignTagsToAnswers(promptValues);setAnswerVals(taggedAnswers);}},[assignTagsToAnswers,promptValues,setAnswerVals]);function BasicSubmit(_ref3){let{basicComplete,toggleBasic}=_ref3;//Submit button - Disabled if progress is less than 100%\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{style:{height:\"50px\",width:\"75px\",borderRadius:\"15px\",background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\"},disabled:progress<100,onClick:()=>[handleSubmit({basicComplete,toggleBasic})],children:\"Submit\"})});}function BasicSave(_ref4)//Save button\n{let{savedBasicCareer,setBasicCareer}=_ref4;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{onClick:handleBasicSave,style:{height:\"50px\",width:\"75px\",borderRadius:\"15px\",background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\"},children:\"Save\"})});}function BasicClear(){//Clear button\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{onClick:handleClear,style:{height:\"50px\",width:\"75px\",borderRadius:\"15px\",background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\"},children:\"Clear\"})});}function updateAnswer(event,index,selectIndex){//Function to accurately update progress - sets \"answered\" to true if question is answered, updates progress\nconst updatedQuestions=[...questions];if(updatedQuestions[index].type===\"radio\"){updatedQuestions[index].selected=updatedQuestions[index].selected.map((_,i)=>i===selectIndex);// line written by ChatGPT\n}else{// Checkbox logic\nupdatedQuestions[index].selected[selectIndex]=event.target.checked;}setQuestions(updatedQuestions);updateProgress(updatedQuestions);}function updateProgress(updatedQuestions){//Function to handle progress bar updates\nconst totalQuestions=updatedQuestions.length;const answeredQuestions=updatedQuestions.filter(question=>question.selected.some(isSelected=>isSelected)).length;const progressPercentage=answeredQuestions/totalQuestions*100;setProgress(progressPercentage);}return/*#__PURE__*/_jsx(\"div\",{className:\"Background\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\",justifyContent:\"flex-end\",marginBottom:\"10px\",marginRight:\"30px\"},children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"question\",style:{marginRight:\"10px\",fontSize:\"25px\"},children:[\"Percent Complete: \",progress.toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"progress\",{id:\"question\",value:progress,max:\"100\",style:{height:\"45px\",width:\"300px\"}})]}),/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:\"center\"},children:\"Here is the Basic Career Page!\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Container,{style:{border:\"2px solid red\"},children:/*#__PURE__*/_jsx(\"p\",{children:\"This assessment is designed to determine an appropriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best of your ability.\"})})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"100px\",marginRight:\"100px\"},children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Row,{children:questions.map((question,index)=>/*#__PURE__*/_jsxs(Col,{xs:12,md:4,children:[\" \",/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:question.text}),/*#__PURE__*/_jsx(Form,{children:question.choices.map((choice,selectIndex)=>/*#__PURE__*/_jsx(Form.Check,{type:question.type,label:choice.label,name:\"basic-question-\".concat(index)// Unique name for each question\n,value:choice.id,checked:question.selected[selectIndex]// Keep track of selected state\n,onChange:event=>updateAnswer(event,index,selectIndex)},choice.id))})]})]},index))})]}),/*#__PURE__*/_jsx(\"div\",{style:{justifyContent:\"center\",marginTop:\"80px\"},children:basicComplete&&/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(Link,{to:\"/results-page\",onClick:()=>setPage(\"Results-Page\"),children:/*#__PURE__*/_jsx(Button,{className:\"flashy-button\",children:\"Results\"})})})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:\"2px\"},children:[/*#__PURE__*/_jsx(BasicSave,{savedBasicCareer:savedBasicCareer,setBasicCareer:setBasicCareer}),/*#__PURE__*/_jsx(BasicSubmit,{basicComplete:basicComplete,toggleBasic:toggleBasic}),/*#__PURE__*/_jsx(BasicClear,{})]})]})});}","map":{"version":3,"names":["useEffect","useState","Button","Container","Form","Row","Col","Link","jsx","_jsx","jsxs","_jsxs","BasicCareerComponent","_ref","basicComplete","toggleBasic","savedBasicCareer","setBasicCareer","answers","setAnswerVals","setPage","promptValues","setValues","progress","setProgress","questions","setQuestions","text","type","choices","id","label","selected","handleBasicSave","localStorage","setItem","JSON","stringify","alert","handleClear","removeItem","clearedQuestions","map","question","setTimeout","getSelectedAnswer","selectedChoiceIndex","findIndex","selectedAnswer","handleUpdateValues","selectedAnswers","selectedAnswerLabels","answer","answerTags","assignTagsToAnswers","index","tag","handleSubmit","_ref2","clearStorage","sessionStorage","savedBasicProgress","getItem","savedBasicAnswers","parse","length","taggedAnswers","BasicSubmit","_ref3","children","style","height","width","borderRadius","background","border","borderColor","borderStyle","disabled","onClick","BasicSave","_ref4","BasicClear","updateAnswer","event","selectIndex","updatedQuestions","_","i","target","checked","updateProgress","totalQuestions","answeredQuestions","filter","some","isSelected","progressPercentage","className","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","fontSize","toFixed","value","max","textAlign","marginLeft","xs","md","choice","Check","name","concat","onChange","marginTop","to"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { FormCheckType } from 'react-bootstrap/esm/FormCheck';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport interface SubmitButton {\r\n  basicComplete: boolean;\r\n  toggleBasic: (notBasic: boolean) => void;\r\n}\r\n\r\nexport interface saveButton\r\n{\r\n  savedBasicCareer: string\r\n  setBasicCareer: (newState: string) => void;\r\n}\r\n\r\ninterface Question \r\n{\r\n  text: string;\r\n  type: string;\r\n  choices: { id: number; label: string }[];\r\n  selected: boolean[];\r\n}\r\n\r\ninterface Answers\r\n{\r\n  answers: {answer: string, tag: string}[];\r\n  setAnswerVals: (newState: {answer: string, tag: string}[]) => void;\r\n}\r\n\r\nexport interface Pages \r\n{\r\n  setPage: (page: string) => void;\r\n}\r\n\r\nexport function BasicCareerComponent({ basicComplete, toggleBasic , savedBasicCareer, setBasicCareer, answers, setAnswerVals, setPage }: SubmitButton & saveButton & Answers & Pages): JSX.Element \r\n{\r\n  const [promptValues, setValues] = useState<string[]>([])\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [questions, setQuestions] = useState<Question[]>([{ text: \"How much noise do you mind in your work environment?\", type: \"radio\", choices: [{ id: 1, label: \"No noise\" }, { id: 2, label: \"A little noise\" }, { id: 3, label: \"A lot of noise\" }, { id: 4, label: \"As much as possible\" }], selected: [false, false, false, false] },\r\n    { text: \"What type of environment would you prefer to work in?\", type: \"checkbox\", choices: [{ id: 1, label: \"Office\" }, { id: 2, label: \"Outdoors\" }, { id: 3, label: \"Remote\" }, { id: 4, label: \"Hybrid\" }], selected: [false, false, false, false] },\r\n    { text: \"Are you interested in any STEM fields?\", type: \"checkbox\", choices: [{ id: 1, label: \"Science\" }, { id: 2, label: \"Technology\" }, { id: 3, label: \"Engineering\" }, { id: 4, label: \"Math\" }, { id: 5, label: \"None\" }], selected: [false, false, false, false, false] },\r\n    { text: \"Would you be fine doing manual labor?\", type: \"radio\", choices: [{ id: 1, label: \"Not at all\" }, { id: 2, label: \"Somewhat\" }, { id: 3, label: \"More often than not\" }, { id: 4, label: \"Extremely\" }], selected: [false, false, false, false] },\r\n    { text: \"How much would you like to interact with others?\", type: \"radio\", choices: [{ id: 1, label: \"Strictly never\" }, { id: 2, label: \"As little as possible\" }, { id: 3, label: \"Occasionally\" }, { id: 4, label: \"Fairly often\" }, { id: 5, label: \"All the time\" }], selected: [false, false, false, false, false] },\r\n    { text: \"How comfortable are you with technology?\", type: \"radio\", choices: [{ id: 1, label: \"Very uncomfortable\" }, { id: 2, label: \"Slightly uncomfortable\" }, { id: 3, label: \"Decently experienced\" }, { id: 4, label: \"Extremely comfortable\" }], selected: [false, false, false, false] },\r\n    { text: \"What is your ideal annual salary?\", type: \"radio\", choices: [{ id: 1, label: \"$30k - $50k\" }, { id: 2, label: \"$50k - $70k\" }, { id: 3, label: \"$70k - $90k\" }, { id: 4, label: \"$90k - $110k\" }], selected: [false, false, false, false] },\r\n    { text: \"How much do you value communication skills?\", type: \"radio\", choices: [{ id: 1, label: \"Not important at all\" }, { id: 2, label: \"Slightly Important\" }, { id: 3, label: \"Very Important\" }, { id: 4, label: \"Extremely important\" }], selected: [false, false, false, false] },\r\n    { text: \"What's the highest level of education you plan on taking?\", type: \"radio\", choices: [{ id: 1, label: \"High School diploma\" }, { id: 2, label: \"Bachelor's Degree\" }, { id: 3, label: \"Master's Degree\" }, { id: 4, label: \"Doctoral Degree\" }], selected: [false, false, false, false]}]);\r\n\r\n  function handleBasicSave() //Saves user's progress to local storage\r\n  {\r\n    localStorage.setItem(\"basicQuizProgress\", JSON.stringify(progress)); //keep track of question and progress states\r\n    localStorage.setItem(\"basicQuizAnswers\", JSON.stringify(questions));\r\n    if(progress < 100)\r\n    {\r\n      alert(\"Quiz saved!\");\r\n    }\r\n  }\r\n\r\n  function handleClear(){ //Clears user's saved progress and resets quiz\r\n    localStorage.removeItem(\"basicQuizProgress\");\r\n    localStorage.removeItem(\"basicQuizAnswers\");\r\n    const clearedQuestions = questions.map(question => ({\r\n      ...question,\r\n      selected: question.selected.map(() => false) // Reset all selected states to false\r\n    }));\r\n    setQuestions(clearedQuestions);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      alert(\"Quiz Cleared!\");\r\n  }, 0);\r\n  }\r\n\r\n  const getSelectedAnswer = (questions: Question[]) => { // Helper function to grab the user's selected answer string from each question\r\n    return questions.map((question) => {\r\n      const selectedChoiceIndex = question.selected.findIndex((selected) => selected === true);\r\n      \r\n      if (selectedChoiceIndex !== -1) {\r\n        return {\r\n          selectedAnswer: question.choices[selectedChoiceIndex].label,\r\n        };\r\n      } else {\r\n        return {\r\n          selectedAnswer: \"\"\r\n        };\r\n      }\r\n    });\r\n  };\r\n  \r\n\r\n  const handleUpdateValues = () => { // Helper function to populate array with user's answers\r\n    const selectedAnswers = getSelectedAnswer(questions);\r\n    const selectedAnswerLabels = selectedAnswers.map((answer) => answer.selectedAnswer);\r\n    setValues(selectedAnswerLabels);\r\n  };\r\n\r\n  type AnswerTagMap = { // Initalize a key:value pair in order to assign an identifier for each question's answer\r\n    [key: number]: string;\r\n  };\r\n\r\n  const answerTags: AnswerTagMap = { //Assigns a tag to identify each index of the answerVals array\r\n    0: 'noise',\r\n    1: 'environment',\r\n    2: 'STEM',\r\n    3: 'manualLabor',\r\n    4: 'interaction',\r\n    5: 'techComfort',\r\n    6: 'salary',\r\n    7: 'communication',\r\n    8: 'education'\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  function assignTagsToAnswers(answers: string[]): { answer: string, tag: string }[] { //Assigns initialized tags to each answer\r\n    return answers.map((answer, index) => ({\r\n      answer,\r\n      tag: answerTags[index] || 'unknown',\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  function handleSubmit({basicComplete, toggleBasic}: SubmitButton) //Handles user submission of quiz\r\n  {\r\n    toggleBasic(true); //Sets state that tracks basic quiz completion to true\r\n    handleBasicSave(); //Saves user's progress\r\n    setBasicCareer(\"basicQuizAnswers\"); //Sets state that tracks user's saved answers\r\n    handleUpdateValues(); //Populates array to track user's answers to each question\r\n    alert(\"Thanks for completing the Basic Career quiz!\");\r\n  }\r\n\r\n  const clearStorage = () => \r\n    {\r\n      localStorage.removeItem(\"basicQuizProgress\");\r\n      localStorage.removeItem(\"basicQuizAnswers\");\r\n      sessionStorage.removeItem(\"quizAttempt\");\r\n}\r\n\r\nuseEffect(() => { //Loads saved quiz data\r\n  const savedBasicProgress = localStorage.getItem(\"basicQuizProgress\");\r\n  const savedBasicAnswers = localStorage.getItem(\"basicQuizAnswers\");\r\n\r\n  if (!savedBasicProgress && !savedBasicAnswers) {\r\n      clearStorage(); \r\n      sessionStorage.setItem(\"quizAttempt\", \"true\"); // track if the user has a saved quiz for next visit\r\n  } \r\n  else if (savedBasicProgress && savedBasicAnswers )\r\n  {\r\n      setProgress(JSON.parse(savedBasicProgress || \"0\")); // Load saved progress\r\n      setQuestions(JSON.parse(savedBasicAnswers || \"[]\")); // Load saved answers\r\n  }\r\n}, []);\r\n\r\nuseEffect(() => { //Populates and tags array of answers each time an answer is selected\r\n  if (promptValues.length > 0) {\r\n    const taggedAnswers = assignTagsToAnswers(promptValues);\r\n    setAnswerVals(taggedAnswers);\r\n  }\r\n}, [assignTagsToAnswers, promptValues, setAnswerVals]);\r\n\r\n  function BasicSubmit({basicComplete, toggleBasic}: SubmitButton): JSX.Element { //Submit button - Disabled if progress is less than 100%\r\n    return(<div>\r\n      <Button style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} disabled={progress < 100} onClick={() => [handleSubmit({basicComplete, toggleBasic}), ]}>Submit</Button>\r\n    </div>)\r\n  }\r\n\r\n  function BasicSave({savedBasicCareer, setBasicCareer}: saveButton): JSX.Element  //Save button\r\n  {\r\n    return(<div>\r\n      <Button onClick = {handleBasicSave} style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}}>Save</Button>\r\n    </div>)\r\n  }\r\n\r\n  function BasicClear(){ //Clear button\r\n    return(<div>\r\n      <Button onClick={handleClear} style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}}>Clear</Button>\r\n    </div>)\r\n  }\r\n\r\n\r\n  function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, index: number, selectIndex: number) { //Function to accurately update progress - sets \"answered\" to true if question is answered, updates progress\r\n    const updatedQuestions = [...questions];\r\n\r\n    if (updatedQuestions[index].type === \"radio\") {\r\n      updatedQuestions[index].selected = updatedQuestions[index].selected.map((_, i) => i === selectIndex); // line written by ChatGPT\r\n    } else {\r\n      // Checkbox logic\r\n      updatedQuestions[index].selected[selectIndex] = event.target.checked;\r\n    }\r\n    setQuestions(updatedQuestions);\r\n    updateProgress(updatedQuestions);\r\n  }\r\n\r\n  function updateProgress(updatedQuestions: typeof questions): void { //Function to handle progress bar updates\r\n    const totalQuestions = updatedQuestions.length;\r\n    const answeredQuestions = updatedQuestions.filter((question) =>\r\n      question.selected.some((isSelected) => isSelected)\r\n    ).length;\r\n    const progressPercentage = (answeredQuestions / totalQuestions) * 100;\r\n    setProgress(progressPercentage);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Background\">\r\n      <div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n          <label htmlFor=\"question\" style={{ marginRight: \"10px\", fontSize: \"25px\" }}>\r\n            Percent Complete: {progress.toFixed(0)}%\r\n          </label>\r\n          <progress id=\"question\" value={progress} max=\"100\" style={{ height: \"45px\", width: \"300px\" }} />\r\n        </div>\r\n        <h1 style={{ textAlign: \"center\" }}>Here is the Basic Career Page!</h1>\r\n        <br />\r\n        <div>\r\n          <Container style={{ border: \"2px solid red\" }}>\r\n            <p>\r\n              This assessment is designed to determine an appropriate career path going forward.\r\n              You will be asked a series of multiple choice questions. If you're looking for more\r\n              in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're\r\n              in a comfortable environment and answer each question to the best of your ability.\r\n            </p>\r\n          </Container>\r\n        </div>\r\n        <div style={{ marginLeft: \"100px\", marginRight: \"100px\" }}>\r\n          <br />\r\n          <Row>\r\n            {questions.map((question, index) => (\r\n              <Col key={index} xs={12} md={4}> {/* 4 columns in medium size and above, full width on smaller screens */}\r\n                <div>\r\n                  <b>{question.text}</b>\r\n                  <Form>\r\n                    {question.choices.map((choice, selectIndex) => (\r\n                      <Form.Check\r\n                        key={choice.id}\r\n                        type={question.type as FormCheckType}\r\n                        label={choice.label}\r\n                        name={`basic-question-${index}`} // Unique name for each question\r\n                        value={choice.id}\r\n                        checked={question.selected[selectIndex]} // Keep track of selected state\r\n                        onChange={(event) => updateAnswer(event, index, selectIndex)}\r\n                      />\r\n                    ))}\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </div>\r\n    <div style={{justifyContent: \"center\", marginTop: \"80px\"}}>\r\n      {basicComplete && <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Link\r\n        to=\"/results-page\"\r\n        onClick={() => setPage(\"Results-Page\")}\r\n        >\r\n        <Button className=\"flashy-button\">Results</Button>\r\n      </Link>\r\n      </div>}\r\n    </div>\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"2px\"}}>\r\n      <BasicSave savedBasicCareer= {savedBasicCareer} setBasicCareer={setBasicCareer}/>\r\n      <BasicSubmit basicComplete={basicComplete} toggleBasic={toggleBasic}/>\r\n      <BasicClear/>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}