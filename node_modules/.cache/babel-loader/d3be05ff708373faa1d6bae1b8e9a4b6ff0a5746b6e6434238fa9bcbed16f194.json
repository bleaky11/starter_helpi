{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Form } from 'react-bootstrap';\nimport { HomePage } from './homepagelogo';\n//import { BasicCareerComponent } from './basicCareer';\n\n//local storage and API Key: key should be entered in by the user and will be stored in local storage (NOT session storage)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet keyData = \"\";\nconst saveKeyData = \"MYKEY\";\nconst prevKey = localStorage.getItem(saveKeyData); //so it'll look like: MYKEY: <api_key_value here> in the local storage when you inspect\nif (prevKey !== null) {\n  keyData = JSON.parse(prevKey);\n}\nfunction SwitchPage({\n  visible\n}) {\n  const handleClick = () => {\n    // Navigate to the Basic Career Page if it's currently hidden\n    if (!visible) {\n      window.location.href = \"/src/basicCareer.tsx\"; // Use the actual path you want\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"Basic Career Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_c = SwitchPage;\nfunction App() {\n  _s();\n  const [key, setKey] = useState(keyData); //for api key input\n  //const [visible, setVisible] = useState<boolean>(false); // visibilty for accessing basic questions\n\n  //sets the local storage item to the api key the user inputed\n  function handleSubmit() {\n    localStorage.setItem(saveKeyData, JSON.stringify(key));\n    window.location.reload(); //when making a mistake and changing the key again, I found that I have to reload the whole site before openai refreshes what it has stores for the local storage variable\n  }\n\n  //whenever there's a change it'll store the api key in a local state called key but it won't be set in the local storage until the user clicks the submit button\n  function changeKey(event) {\n    setKey(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchPage, {\n        visible: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React | Ryan Burtson | Levi Chen | Thomas Florio | Tolu AKin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"API Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Insert API Key Here\",\n        onChange: changeKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Submit-Button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L2OZV9K7mUn0kDMpsvb5gdgU2IY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SwitchPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","logo","Button","Form","HomePage","jsxDEV","_jsxDEV","keyData","saveKeyData","prevKey","localStorage","getItem","JSON","parse","SwitchPage","visible","handleClick","window","location","href","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","key","setKey","handleSubmit","setItem","stringify","reload","changeKey","event","target","value","className","src","alt","rel","Label","Control","type","placeholder","onChange","_c2","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { HomePage } from './homepagelogo';\r\n//import { BasicCareerComponent } from './basicCareer';\r\n\r\n//local storage and API Key: key should be entered in by the user and will be stored in local storage (NOT session storage)\r\nlet keyData = \"\";\r\nconst saveKeyData = \"MYKEY\";\r\nconst prevKey = localStorage.getItem(saveKeyData); //so it'll look like: MYKEY: <api_key_value here> in the local storage when you inspect\r\nif (prevKey !== null) {\r\n  keyData = JSON.parse(prevKey);\r\n}\r\n\r\ninterface BasicCareer\r\n{\r\n    visible: boolean\r\n}\r\n  \r\nfunction SwitchPage({ visible }: BasicCareer): JSX.Element {\r\n  const handleClick = () => {\r\n      // Navigate to the Basic Career Page if it's currently hidden\r\n      if (!visible) {\r\n          window.location.href = \"/src/basicCareer.tsx\"; // Use the actual path you want\r\n      }\r\n  };\r\n\r\n  return (\r\n      <div>\r\n          <Button onClick={handleClick}>\r\n              Basic Career Page\r\n          </Button>\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [key, setKey] = useState<string>(keyData); //for api key input\r\n  //const [visible, setVisible] = useState<boolean>(false); // visibilty for accessing basic questions\r\n\r\n  //sets the local storage item to the api key the user inputed\r\n  function handleSubmit() {\r\n    localStorage.setItem(saveKeyData, JSON.stringify(key));\r\n    window.location.reload(); //when making a mistake and changing the key again, I found that I have to reload the whole site before openai refreshes what it has stores for the local storage variable\r\n  }\r\n\r\n  //whenever there's a change it'll store the api key in a local state called key but it won't be set in the local storage until the user clicks the submit button\r\n  function changeKey(event: React.ChangeEvent<HTMLInputElement>) {\r\n    setKey(event.target.value);\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <HomePage></HomePage>\r\n        <SwitchPage visible={false}/>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React | Ryan Burtson | Levi Chen | Thomas Florio | Tolu AKin\r\n        </a>\r\n      </header>\r\n      <Form>\r\n        <Form.Label>API Key:</Form.Label>\r\n        <Form.Control type=\"password\" placeholder=\"Insert API Key Here\" onChange={changeKey}></Form.Control>\r\n        <br></br>\r\n        <Button className=\"Submit-Button\" onClick={handleSubmit}>Submit</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}