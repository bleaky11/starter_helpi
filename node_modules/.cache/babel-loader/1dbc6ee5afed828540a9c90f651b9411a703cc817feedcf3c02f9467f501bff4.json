{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent({\n  basicComplete,\n  toggleBasic,\n  savedBasicCareer,\n  setBasicCareer,\n  answers,\n  setAnswerVals\n}) {\n  _s();\n  const [promptValues, setValues] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [questions, setQuestions] = useState([{\n    text: \"How much noise do you mind in your work environment?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"No noise\"\n    }, {\n      id: 2,\n      label: \"A little noise\"\n    }, {\n      id: 3,\n      label: \"A lot of noise\"\n    }, {\n      id: 4,\n      label: \"As much as possible\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"What type of environment would you prefer to work in?\",\n    type: \"checkbox\",\n    choices: [{\n      id: 1,\n      label: \"Office\"\n    }, {\n      id: 2,\n      label: \"Outdoors\"\n    }, {\n      id: 3,\n      label: \"Remote\"\n    }, {\n      id: 4,\n      label: \"Hybrid\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"Are you interested in any STEM fields?\",\n    type: \"checkbox\",\n    choices: [{\n      id: 1,\n      label: \"Science\"\n    }, {\n      id: 2,\n      label: \"Technology\"\n    }, {\n      id: 3,\n      label: \"Engineering\"\n    }, {\n      id: 4,\n      label: \"Math\"\n    }, {\n      id: 5,\n      label: \"None\"\n    }],\n    selected: [false, false, false, false, false]\n  }, {\n    text: \"Would you be fine doing manual labor?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Not at all\"\n    }, {\n      id: 2,\n      label: \"Somewhat\"\n    }, {\n      id: 3,\n      label: \"More often than not\"\n    }, {\n      id: 4,\n      label: \"Extremely\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"How much would you like to interact with others?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Strictly never\"\n    }, {\n      id: 2,\n      label: \"As little as possible\"\n    }, {\n      id: 3,\n      label: \"Occasionally\"\n    }, {\n      id: 4,\n      label: \"Fairly often\"\n    }, {\n      id: 5,\n      label: \"All the time\"\n    }],\n    selected: [false, false, false, false, false]\n  }, {\n    text: \"How comfortable are you with technology?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Very uncomfortable\"\n    }, {\n      id: 2,\n      label: \"Slightly uncomfortable\"\n    }, {\n      id: 3,\n      label: \"Decently experienced\"\n    }, {\n      id: 4,\n      label: \"Extremely comfortable\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"What is your ideal annual salary?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"$30k - $50k\"\n    }, {\n      id: 2,\n      label: \"$50k - $70k\"\n    }, {\n      id: 3,\n      label: \"$70k - $90k\"\n    }, {\n      id: 4,\n      label: \"$90k - $110k\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"How much do you value communication skills?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"Not important at all\"\n    }, {\n      id: 2,\n      label: \"Slightly Important\"\n    }, {\n      id: 3,\n      label: \"Very Important\"\n    }, {\n      id: 4,\n      label: \"Extremely important\"\n    }],\n    selected: [false, false, false, false]\n  }, {\n    text: \"What's the highest level of education you plan on taking?\",\n    type: \"radio\",\n    choices: [{\n      id: 1,\n      label: \"High School diploma\"\n    }, {\n      id: 2,\n      label: \"Bachelor's Degree\"\n    }, {\n      id: 3,\n      label: \"Master's Degree\"\n    }, {\n      id: 4,\n      label: \"Doctoral Degree\"\n    }],\n    selected: [false, false, false, false]\n  }]);\n  function handleBasicSave()\n  //Saves user's progress to local storage\n  {\n    localStorage.setItem(\"basicQuizProgress\", JSON.stringify(progress)); //keep track of question and progress states\n    localStorage.setItem(\"basicQuizAnswers\", JSON.stringify(questions));\n    if (progress < 100) {\n      alert(\"Quiz saved!\");\n    }\n  }\n  function handleClear() {\n    //Clears user's saved progress and resets quiz\n    localStorage.removeItem(\"basicQuizProgress\");\n    localStorage.removeItem(\"basicQuizAnswers\");\n    const clearedQuestions = questions.map(question => ({\n      ...question,\n      selected: question.selected.map(() => false) // Reset all selected states to false\n    }));\n    setQuestions(clearedQuestions);\n    setProgress(0);\n    setTimeout(() => {\n      alert(\"Quiz Cleared!\");\n    }, 0);\n  }\n  const getSelectedAnswer = questions => {\n    // Helper function to grab the user's selected answer string from each question\n    return questions.map(question => {\n      const selectedChoiceIndex = question.selected.findIndex(selected => selected === true);\n      if (selectedChoiceIndex !== -1) {\n        return {\n          selectedAnswer: question.choices[selectedChoiceIndex].label\n        };\n      } else {\n        return {\n          selectedAnswer: \"\"\n        };\n      }\n    });\n  };\n  const handleUpdateValues = () => {\n    // Helper function to populate array with user's answers\n    const selectedAnswers = getSelectedAnswer(questions);\n    const selectedAnswerLabels = selectedAnswers.map(answer => answer.selectedAnswer);\n    setValues(selectedAnswerLabels);\n  };\n  const answerTags = {\n    //Assigns a tag to identify each index of the answerVals array\n    0: 'noise',\n    1: 'environment',\n    2: 'STEM',\n    3: 'manualLabor',\n    4: 'interaction',\n    5: 'techComfort',\n    6: 'salary',\n    7: 'communication',\n    8: 'education'\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function assignTagsToAnswers(answers) {\n    //Assigns initialized tags to each answer\n    return answers.map((answer, index) => ({\n      answer,\n      tag: answerTags[index] || 'unknown'\n    }));\n  }\n  function handleSubmit({\n    basicComplete,\n    toggleBasic\n  })\n  //Handles user submission of quiz\n  {\n    toggleBasic(true); //Sets state that tracks basic quiz completion to true\n    handleBasicSave(); //Saves user's progress\n    setBasicCareer(\"basicQuizAnswers\"); //Sets state that tracks user's saved answers\n    handleUpdateValues(); //Populates array to track user's answers to each question\n    alert(\"Thanks for completing the Basic Career quiz!\");\n  }\n  const clearStorage = () => {\n    localStorage.removeItem(\"basicQuizProgress\");\n    localStorage.removeItem(\"basicQuizAnswers\");\n    sessionStorage.removeItem(\"quizAttempt\");\n  };\n  useEffect(() => {\n    //Loads saved quiz data\n    const savedBasicProgress = localStorage.getItem(\"basicQuizProgress\");\n    const savedBasicAnswers = localStorage.getItem(\"basicQuizAnswers\");\n    if (!savedBasicProgress && !savedBasicAnswers) {\n      clearStorage();\n      sessionStorage.setItem(\"quizAttempt\", \"true\"); // track if the user has a saved quiz for next visit\n    } else if (savedBasicProgress && savedBasicAnswers) {\n      setProgress(JSON.parse(savedBasicProgress || \"0\")); // Load saved progress\n      setQuestions(JSON.parse(savedBasicAnswers || \"[]\")); // Load saved answers\n    }\n  }, []);\n  useEffect(() => {\n    //Populates and tags array of answers each time an answer is selected\n    if (promptValues.length > 0) {\n      const taggedAnswers = assignTagsToAnswers(promptValues);\n      setAnswerVals(taggedAnswers);\n    }\n  }, [assignTagsToAnswers, promptValues, setAnswerVals]);\n  function BasicSubmit({\n    basicComplete,\n    toggleBasic\n  }) {\n    //Submit button - Disabled if progress is less than 100%\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\",\n          background: \"#DDA15E\",\n          border: \"3px\",\n          borderColor: \"#bc6c25\",\n          borderStyle: \"solid\"\n        },\n        disabled: progress < 100,\n        onClick: () => [handleSubmit({\n          basicComplete,\n          toggleBasic\n        })],\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, this);\n  }\n  function BasicSave({\n    savedBasicCareer,\n    setBasicCareer\n  })\n  //Save button\n  {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleBasicSave,\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\",\n          background: \"#DDA15E\",\n          border: \"3px\",\n          borderColor: \"#bc6c25\",\n          borderStyle: \"solid\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }, this);\n  }\n  function BasicClear() {\n    //Clear button\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClear,\n        style: {\n          height: \"50px\",\n          width: \"75px\",\n          borderRadius: \"15px\",\n          background: \"#DDA15E\",\n          border: \"3px\",\n          borderColor: \"#bc6c25\",\n          borderStyle: \"solid\"\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 12\n    }, this);\n  }\n  function updateAnswer(event, index, selectIndex) {\n    //Function to accurately update progress - sets \"answered\" to true if question is answered, updates progress\n    const updatedQuestions = [...questions];\n    if (updatedQuestions[index].type === \"radio\") {\n      updatedQuestions[index].selected = updatedQuestions[index].selected.map((_, i) => i === selectIndex); // line written by ChatGPT\n    } else {\n      // Checkbox logic\n      updatedQuestions[index].selected[selectIndex] = event.target.checked;\n    }\n    setQuestions(updatedQuestions);\n    updateProgress(updatedQuestions);\n  }\n  function updateProgress(updatedQuestions) {\n    //Function to handle progress bar updates\n    const totalQuestions = updatedQuestions.length;\n    const answeredQuestions = updatedQuestions.filter(question => question.selected.some(isSelected => isSelected)).length;\n    const progressPercentage = answeredQuestions / totalQuestions * 100;\n    setProgress(progressPercentage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\",\n            fontSize: \"25px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\",\n          style: {\n            height: \"45px\",\n            width: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          style: {\n            border: \"2px solid red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This assessment is designed to determine an appropriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"100px\",\n          marginRight: \"100px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            md: 4,\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: question.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                children: question.choices.map((choice, selectIndex) => /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: question.type,\n                  label: choice.label,\n                  name: `basic-question-${index}` // Unique name for each question\n                  ,\n                  value: choice.id,\n                  checked: question.selected[selectIndex] // Keep track of selected state\n                  ,\n                  onChange: event => updateAnswer(event, index, selectIndex)\n                }, choice.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"80px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(BasicSave, {\n          savedBasicCareer: savedBasicCareer,\n          setBasicCareer: setBasicCareer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(BasicSubmit, {\n          basicComplete: basicComplete,\n          toggleBasic: toggleBasic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(BasicClear, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicCareerComponent, \"UgkNTuj8uj1ls+DvH2giWwJzopc=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["useEffect","useState","Button","Container","Form","Row","Col","jsxDEV","_jsxDEV","BasicCareerComponent","basicComplete","toggleBasic","savedBasicCareer","setBasicCareer","answers","setAnswerVals","_s","promptValues","setValues","progress","setProgress","questions","setQuestions","text","type","choices","id","label","selected","handleBasicSave","localStorage","setItem","JSON","stringify","alert","handleClear","removeItem","clearedQuestions","map","question","setTimeout","getSelectedAnswer","selectedChoiceIndex","findIndex","selectedAnswer","handleUpdateValues","selectedAnswers","selectedAnswerLabels","answer","answerTags","assignTagsToAnswers","index","tag","handleSubmit","clearStorage","sessionStorage","savedBasicProgress","getItem","savedBasicAnswers","parse","length","taggedAnswers","BasicSubmit","children","style","height","width","borderRadius","background","border","borderColor","borderStyle","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","BasicSave","BasicClear","updateAnswer","event","selectIndex","updatedQuestions","_","i","target","checked","updateProgress","totalQuestions","answeredQuestions","filter","some","isSelected","progressPercentage","className","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","fontSize","toFixed","value","max","textAlign","marginLeft","xs","md","choice","Check","name","onChange","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { FormCheckType } from 'react-bootstrap/esm/FormCheck';\r\n\r\nexport interface SubmitButton {\r\n  basicComplete: boolean;\r\n  toggleBasic: (notBasic: boolean) => void;\r\n}\r\n\r\nexport interface saveButton\r\n{\r\n  savedBasicCareer: string\r\n  setBasicCareer: (newState: string) => void;\r\n}\r\n\r\ninterface Question \r\n{\r\n  text: string;\r\n  type: string;\r\n  choices: { id: number; label: string }[];\r\n  selected: boolean[];\r\n}\r\n\r\ninterface Answers\r\n{\r\n  answers: {answer: string, tag: string}[];\r\n  setAnswerVals: (newState: {answer: string, tag: string}[]) => void;\r\n}\r\n\r\nexport function BasicCareerComponent({ basicComplete, toggleBasic , savedBasicCareer, setBasicCareer, answers, setAnswerVals }: SubmitButton & saveButton & Answers): JSX.Element \r\n{\r\n  const [promptValues, setValues] = useState<string[]>([])\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [questions, setQuestions] = useState<Question[]>([{ text: \"How much noise do you mind in your work environment?\", type: \"radio\", choices: [{ id: 1, label: \"No noise\" }, { id: 2, label: \"A little noise\" }, { id: 3, label: \"A lot of noise\" }, { id: 4, label: \"As much as possible\" }], selected: [false, false, false, false] },\r\n    { text: \"What type of environment would you prefer to work in?\", type: \"checkbox\", choices: [{ id: 1, label: \"Office\" }, { id: 2, label: \"Outdoors\" }, { id: 3, label: \"Remote\" }, { id: 4, label: \"Hybrid\" }], selected: [false, false, false, false] },\r\n    { text: \"Are you interested in any STEM fields?\", type: \"checkbox\", choices: [{ id: 1, label: \"Science\" }, { id: 2, label: \"Technology\" }, { id: 3, label: \"Engineering\" }, { id: 4, label: \"Math\" }, { id: 5, label: \"None\" }], selected: [false, false, false, false, false] },\r\n    { text: \"Would you be fine doing manual labor?\", type: \"radio\", choices: [{ id: 1, label: \"Not at all\" }, { id: 2, label: \"Somewhat\" }, { id: 3, label: \"More often than not\" }, { id: 4, label: \"Extremely\" }], selected: [false, false, false, false] },\r\n    { text: \"How much would you like to interact with others?\", type: \"radio\", choices: [{ id: 1, label: \"Strictly never\" }, { id: 2, label: \"As little as possible\" }, { id: 3, label: \"Occasionally\" }, { id: 4, label: \"Fairly often\" }, { id: 5, label: \"All the time\" }], selected: [false, false, false, false, false] },\r\n    { text: \"How comfortable are you with technology?\", type: \"radio\", choices: [{ id: 1, label: \"Very uncomfortable\" }, { id: 2, label: \"Slightly uncomfortable\" }, { id: 3, label: \"Decently experienced\" }, { id: 4, label: \"Extremely comfortable\" }], selected: [false, false, false, false] },\r\n    { text: \"What is your ideal annual salary?\", type: \"radio\", choices: [{ id: 1, label: \"$30k - $50k\" }, { id: 2, label: \"$50k - $70k\" }, { id: 3, label: \"$70k - $90k\" }, { id: 4, label: \"$90k - $110k\" }], selected: [false, false, false, false] },\r\n    { text: \"How much do you value communication skills?\", type: \"radio\", choices: [{ id: 1, label: \"Not important at all\" }, { id: 2, label: \"Slightly Important\" }, { id: 3, label: \"Very Important\" }, { id: 4, label: \"Extremely important\" }], selected: [false, false, false, false] },\r\n    { text: \"What's the highest level of education you plan on taking?\", type: \"radio\", choices: [{ id: 1, label: \"High School diploma\" }, { id: 2, label: \"Bachelor's Degree\" }, { id: 3, label: \"Master's Degree\" }, { id: 4, label: \"Doctoral Degree\" }], selected: [false, false, false, false]}]);\r\n\r\n  function handleBasicSave() //Saves user's progress to local storage\r\n  {\r\n    localStorage.setItem(\"basicQuizProgress\", JSON.stringify(progress)); //keep track of question and progress states\r\n    localStorage.setItem(\"basicQuizAnswers\", JSON.stringify(questions));\r\n    if(progress < 100)\r\n    {\r\n      alert(\"Quiz saved!\");\r\n    }\r\n  }\r\n\r\n  function handleClear(){ //Clears user's saved progress and resets quiz\r\n    localStorage.removeItem(\"basicQuizProgress\");\r\n    localStorage.removeItem(\"basicQuizAnswers\");\r\n    const clearedQuestions = questions.map(question => ({\r\n      ...question,\r\n      selected: question.selected.map(() => false) // Reset all selected states to false\r\n    }));\r\n    setQuestions(clearedQuestions);\r\n    setProgress(0);\r\n    setTimeout(() => {\r\n      alert(\"Quiz Cleared!\");\r\n  }, 0);\r\n  }\r\n\r\n  const getSelectedAnswer = (questions: Question[]) => { // Helper function to grab the user's selected answer string from each question\r\n    return questions.map((question) => {\r\n      const selectedChoiceIndex = question.selected.findIndex((selected) => selected === true);\r\n      \r\n      if (selectedChoiceIndex !== -1) {\r\n        return {\r\n          selectedAnswer: question.choices[selectedChoiceIndex].label,\r\n        };\r\n      } else {\r\n        return {\r\n          selectedAnswer: \"\"\r\n        };\r\n      }\r\n    });\r\n  };\r\n  \r\n\r\n  const handleUpdateValues = () => { // Helper function to populate array with user's answers\r\n    const selectedAnswers = getSelectedAnswer(questions);\r\n    const selectedAnswerLabels = selectedAnswers.map((answer) => answer.selectedAnswer);\r\n    setValues(selectedAnswerLabels);\r\n  };\r\n\r\n  type AnswerTagMap = { // Initalize a key:value pair in order to assign an identifier for each question's answer\r\n    [key: number]: string;\r\n  };\r\n\r\n  const answerTags: AnswerTagMap = { //Assigns a tag to identify each index of the answerVals array\r\n    0: 'noise',\r\n    1: 'environment',\r\n    2: 'STEM',\r\n    3: 'manualLabor',\r\n    4: 'interaction',\r\n    5: 'techComfort',\r\n    6: 'salary',\r\n    7: 'communication',\r\n    8: 'education'\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  function assignTagsToAnswers(answers: string[]): { answer: string, tag: string }[] { //Assigns initialized tags to each answer\r\n    return answers.map((answer, index) => ({\r\n      answer,\r\n      tag: answerTags[index] || 'unknown',\r\n    }));\r\n  }\r\n\r\n\r\n\r\n  function handleSubmit({basicComplete, toggleBasic}: SubmitButton) //Handles user submission of quiz\r\n  {\r\n    toggleBasic(true); //Sets state that tracks basic quiz completion to true\r\n    handleBasicSave(); //Saves user's progress\r\n    setBasicCareer(\"basicQuizAnswers\"); //Sets state that tracks user's saved answers\r\n    handleUpdateValues(); //Populates array to track user's answers to each question\r\n    alert(\"Thanks for completing the Basic Career quiz!\");\r\n  }\r\n\r\n  const clearStorage = () => \r\n    {\r\n      localStorage.removeItem(\"basicQuizProgress\");\r\n      localStorage.removeItem(\"basicQuizAnswers\");\r\n      sessionStorage.removeItem(\"quizAttempt\");\r\n}\r\n\r\nuseEffect(() => { //Loads saved quiz data\r\n  const savedBasicProgress = localStorage.getItem(\"basicQuizProgress\");\r\n  const savedBasicAnswers = localStorage.getItem(\"basicQuizAnswers\");\r\n\r\n  if (!savedBasicProgress && !savedBasicAnswers) {\r\n      clearStorage(); \r\n      sessionStorage.setItem(\"quizAttempt\", \"true\"); // track if the user has a saved quiz for next visit\r\n  } \r\n  else if (savedBasicProgress && savedBasicAnswers )\r\n  {\r\n      setProgress(JSON.parse(savedBasicProgress || \"0\")); // Load saved progress\r\n      setQuestions(JSON.parse(savedBasicAnswers || \"[]\")); // Load saved answers\r\n  }\r\n}, []);\r\n\r\nuseEffect(() => { //Populates and tags array of answers each time an answer is selected\r\n  if (promptValues.length > 0) {\r\n    const taggedAnswers = assignTagsToAnswers(promptValues);\r\n    setAnswerVals(taggedAnswers);\r\n  }\r\n}, [assignTagsToAnswers, promptValues, setAnswerVals]);\r\n\r\n  function BasicSubmit({basicComplete, toggleBasic}: SubmitButton): JSX.Element { //Submit button - Disabled if progress is less than 100%\r\n    return(<div>\r\n      <Button style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} disabled={progress < 100} onClick={() => [handleSubmit({basicComplete, toggleBasic}), ]}>Submit</Button>\r\n    </div>)\r\n  }\r\n\r\n  function BasicSave({savedBasicCareer, setBasicCareer}: saveButton): JSX.Element  //Save button\r\n  {\r\n    return(<div>\r\n      <Button onClick = {handleBasicSave} style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}}>Save</Button>\r\n    </div>)\r\n  }\r\n\r\n  function BasicClear(){ //Clear button\r\n    return(<div>\r\n      <Button onClick={handleClear} style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}}>Clear</Button>\r\n    </div>)\r\n  }\r\n\r\n\r\n  function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, index: number, selectIndex: number) { //Function to accurately update progress - sets \"answered\" to true if question is answered, updates progress\r\n    const updatedQuestions = [...questions];\r\n\r\n    if (updatedQuestions[index].type === \"radio\") {\r\n      updatedQuestions[index].selected = updatedQuestions[index].selected.map((_, i) => i === selectIndex); // line written by ChatGPT\r\n    } else {\r\n      // Checkbox logic\r\n      updatedQuestions[index].selected[selectIndex] = event.target.checked;\r\n    }\r\n    setQuestions(updatedQuestions);\r\n    updateProgress(updatedQuestions);\r\n  }\r\n\r\n  function updateProgress(updatedQuestions: typeof questions): void { //Function to handle progress bar updates\r\n    const totalQuestions = updatedQuestions.length;\r\n    const answeredQuestions = updatedQuestions.filter((question) =>\r\n      question.selected.some((isSelected) => isSelected)\r\n    ).length;\r\n    const progressPercentage = (answeredQuestions / totalQuestions) * 100;\r\n    setProgress(progressPercentage);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Background\">\r\n      <div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n          <label htmlFor=\"question\" style={{ marginRight: \"10px\", fontSize: \"25px\" }}>\r\n            Percent Complete: {progress.toFixed(0)}%\r\n          </label>\r\n          <progress id=\"question\" value={progress} max=\"100\" style={{ height: \"45px\", width: \"300px\" }} />\r\n        </div>\r\n        <h1 style={{ textAlign: \"center\" }}>Here is the Basic Career Page!</h1>\r\n        <br />\r\n        <div>\r\n          <Container style={{ border: \"2px solid red\" }}>\r\n            <p>\r\n              This assessment is designed to determine an appropriate career path going forward.\r\n              You will be asked a series of multiple choice questions. If you're looking for more\r\n              in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're\r\n              in a comfortable environment and answer each question to the best of your ability.\r\n            </p>\r\n          </Container>\r\n        </div>\r\n        <div style={{ marginLeft: \"100px\", marginRight: \"100px\" }}>\r\n          <br />\r\n          <Row>\r\n            {questions.map((question, index) => (\r\n              <Col key={index} xs={12} md={4}> {/* 4 columns in medium size and above, full width on smaller screens */}\r\n                <div>\r\n                  <b>{question.text}</b>\r\n                  <Form>\r\n                    {question.choices.map((choice, selectIndex) => (\r\n                      <Form.Check\r\n                        key={choice.id}\r\n                        type={question.type as FormCheckType}\r\n                        label={choice.label}\r\n                        name={`basic-question-${index}`} // Unique name for each question\r\n                        value={choice.id}\r\n                        checked={question.selected[selectIndex]} // Keep track of selected state\r\n                        onChange={(event) => updateAnswer(event, index, selectIndex)}\r\n                      />\r\n                    ))}\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </div>\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"80px\"}}>\r\n    <BasicSave savedBasicCareer= {savedBasicCareer} setBasicCareer={setBasicCareer}/>\r\n    <BasicSubmit basicComplete={basicComplete} toggleBasic={toggleBasic}/>\r\n    <BasicClear/>\r\n    </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,EAAEC,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA4BpE,OAAO,SAASC,oBAAoBA,CAAC;EAAEC,aAAa;EAAEC,WAAW;EAAGC,gBAAgB;EAAEC,cAAc;EAAEC,OAAO;EAAEC;AAAmD,CAAC,EACnK;EAAAC,EAAA;EACE,MAAM,CAACC,YAAY,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAW,EAAE,CAAC;EACxD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAS,CAAC,CAAC;EACnD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAa,CAAC;IAAEsB,IAAI,EAAE,sDAAsD;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAsB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACvU;IAAEL,IAAI,EAAE,uDAAuD;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACxP;IAAEL,IAAI,EAAE,wCAAwC;IAAEC,IAAI,EAAE,UAAU;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAU,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAa,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAO,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EAChR;IAAEL,IAAI,EAAE,uCAAuC;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAa,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAW,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAsB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAY,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACzP;IAAEL,IAAI,EAAE,kDAAkD;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAwB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EAC1T;IAAEL,IAAI,EAAE,0CAA0C;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAqB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAyB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAuB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAwB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EAC/R;IAAEL,IAAI,EAAE,mCAAmC;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAc,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAe,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACpP;IAAEL,IAAI,EAAE,6CAA6C;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAuB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAqB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAiB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAsB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAE,CAAC,EACxR;IAAEL,IAAI,EAAE,2DAA2D;IAAEC,IAAI,EAAE,OAAO;IAAEC,OAAO,EAAE,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAsB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAoB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAkB,CAAC,EAAE;MAAED,EAAE,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAkB,CAAC,CAAC;IAAEC,QAAQ,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EAAC,CAAC,CAAC,CAAC;EAEpS,SAASC,eAAeA,CAAA;EAAG;EAC3B;IACEC,YAAY,CAACC,OAAO,CAAC,mBAAmB,EAAEC,IAAI,CAACC,SAAS,CAACd,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrEW,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS,CAAC,CAAC;IACnE,IAAGF,QAAQ,GAAG,GAAG,EACjB;MACEe,KAAK,CAAC,aAAa,CAAC;IACtB;EACF;EAEA,SAASC,WAAWA,CAAA,EAAE;IAAE;IACtBL,YAAY,CAACM,UAAU,CAAC,mBAAmB,CAAC;IAC5CN,YAAY,CAACM,UAAU,CAAC,kBAAkB,CAAC;IAC3C,MAAMC,gBAAgB,GAAGhB,SAAS,CAACiB,GAAG,CAACC,QAAQ,KAAK;MAClD,GAAGA,QAAQ;MACXX,QAAQ,EAAEW,QAAQ,CAACX,QAAQ,CAACU,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IACHhB,YAAY,CAACe,gBAAgB,CAAC;IAC9BjB,WAAW,CAAC,CAAC,CAAC;IACdoB,UAAU,CAAC,MAAM;MACfN,KAAK,CAAC,eAAe,CAAC;IAC1B,CAAC,EAAE,CAAC,CAAC;EACL;EAEA,MAAMO,iBAAiB,GAAIpB,SAAqB,IAAK;IAAE;IACrD,OAAOA,SAAS,CAACiB,GAAG,CAAEC,QAAQ,IAAK;MACjC,MAAMG,mBAAmB,GAAGH,QAAQ,CAACX,QAAQ,CAACe,SAAS,CAAEf,QAAQ,IAAKA,QAAQ,KAAK,IAAI,CAAC;MAExF,IAAIc,mBAAmB,KAAK,CAAC,CAAC,EAAE;QAC9B,OAAO;UACLE,cAAc,EAAEL,QAAQ,CAACd,OAAO,CAACiB,mBAAmB,CAAC,CAACf;QACxD,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACLiB,cAAc,EAAE;QAClB,CAAC;MACH;IACF,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAAE;IACjC,MAAMC,eAAe,GAAGL,iBAAiB,CAACpB,SAAS,CAAC;IACpD,MAAM0B,oBAAoB,GAAGD,eAAe,CAACR,GAAG,CAAEU,MAAM,IAAKA,MAAM,CAACJ,cAAc,CAAC;IACnF1B,SAAS,CAAC6B,oBAAoB,CAAC;EACjC,CAAC;EAMD,MAAME,UAAwB,GAAG;IAAE;IACjC,CAAC,EAAE,OAAO;IACV,CAAC,EAAE,aAAa;IAChB,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,aAAa;IAChB,CAAC,EAAE,aAAa;IAChB,CAAC,EAAE,aAAa;IAChB,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,eAAe;IAClB,CAAC,EAAE;EACL,CAAC;;EAED;EACA,SAASC,mBAAmBA,CAACpC,OAAiB,EAAqC;IAAE;IACnF,OAAOA,OAAO,CAACwB,GAAG,CAAC,CAACU,MAAM,EAAEG,KAAK,MAAM;MACrCH,MAAM;MACNI,GAAG,EAAEH,UAAU,CAACE,KAAK,CAAC,IAAI;IAC5B,CAAC,CAAC,CAAC;EACL;EAIA,SAASE,YAAYA,CAAC;IAAC3C,aAAa;IAAEC;EAAyB,CAAC;EAAE;EAClE;IACEA,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACnBkB,eAAe,CAAC,CAAC,CAAC,CAAC;IACnBhB,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACpCgC,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACtBX,KAAK,CAAC,8CAA8C,CAAC;EACvD;EAEA,MAAMoB,YAAY,GAAGA,CAAA,KACnB;IACExB,YAAY,CAACM,UAAU,CAAC,mBAAmB,CAAC;IAC5CN,YAAY,CAACM,UAAU,CAAC,kBAAkB,CAAC;IAC3CmB,cAAc,CAACnB,UAAU,CAAC,aAAa,CAAC;EAC9C,CAAC;EAEDpC,SAAS,CAAC,MAAM;IAAE;IAChB,MAAMwD,kBAAkB,GAAG1B,YAAY,CAAC2B,OAAO,CAAC,mBAAmB,CAAC;IACpE,MAAMC,iBAAiB,GAAG5B,YAAY,CAAC2B,OAAO,CAAC,kBAAkB,CAAC;IAElE,IAAI,CAACD,kBAAkB,IAAI,CAACE,iBAAiB,EAAE;MAC3CJ,YAAY,CAAC,CAAC;MACdC,cAAc,CAACxB,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;IACnD,CAAC,MACI,IAAIyB,kBAAkB,IAAIE,iBAAiB,EAChD;MACItC,WAAW,CAACY,IAAI,CAAC2B,KAAK,CAACH,kBAAkB,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;MACpDlC,YAAY,CAACU,IAAI,CAAC2B,KAAK,CAACD,iBAAiB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACzD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN1D,SAAS,CAAC,MAAM;IAAE;IAChB,IAAIiB,YAAY,CAAC2C,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,aAAa,GAAGX,mBAAmB,CAACjC,YAAY,CAAC;MACvDF,aAAa,CAAC8C,aAAa,CAAC;IAC9B;EACF,CAAC,EAAE,CAACX,mBAAmB,EAAEjC,YAAY,EAAEF,aAAa,CAAC,CAAC;EAEpD,SAAS+C,WAAWA,CAAC;IAACpD,aAAa;IAAEC;EAAyB,CAAC,EAAe;IAAE;IAC9E,oBAAOH,OAAA;MAAAuD,QAAA,eACLvD,OAAA,CAACN,MAAM;QAAC8D,KAAK,EAAI;UAACC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,MAAM;UAAEC,UAAU,EAAE,SAAS;UAAEC,MAAM,EAAE,KAAK;UAAEC,WAAW,EAAE,SAAS;UAAEC,WAAW,EAAE;QAAO,CAAE;QAACC,QAAQ,EAAErD,QAAQ,GAAG,GAAI;QAACsD,OAAO,EAAEA,CAAA,KAAM,CAACpB,YAAY,CAAC;UAAC3C,aAAa;UAAEC;QAAW,CAAC,CAAC,CAAI;QAAAoD,QAAA,EAAC;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjQ,CAAC;EACR;EAEA,SAASC,SAASA,CAAC;IAAClE,gBAAgB;IAAEC;EAA0B,CAAC;EAAgB;EACjF;IACE,oBAAOL,OAAA;MAAAuD,QAAA,eACLvD,OAAA,CAACN,MAAM;QAACuE,OAAO,EAAI5C,eAAgB;QAACmC,KAAK,EAAI;UAACC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,MAAM;UAAEC,UAAU,EAAE,SAAS;UAAEC,MAAM,EAAE,KAAK;UAAEC,WAAW,EAAE,SAAS;UAAEC,WAAW,EAAE;QAAO,CAAE;QAAAR,QAAA,EAAC;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClM,CAAC;EACR;EAEA,SAASE,UAAUA,CAAA,EAAE;IAAE;IACrB,oBAAOvE,OAAA;MAAAuD,QAAA,eACLvD,OAAA,CAACN,MAAM;QAACuE,OAAO,EAAEtC,WAAY;QAAC6B,KAAK,EAAI;UAACC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,YAAY,EAAE,MAAM;UAAEC,UAAU,EAAE,SAAS;UAAEC,MAAM,EAAE,KAAK;UAAEC,WAAW,EAAE,SAAS;UAAEC,WAAW,EAAE;QAAO,CAAE;QAAAR,QAAA,EAAC;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7L,CAAC;EACR;EAGA,SAASG,YAAYA,CAACC,KAA0C,EAAE9B,KAAa,EAAE+B,WAAmB,EAAE;IAAE;IACtG,MAAMC,gBAAgB,GAAG,CAAC,GAAG9D,SAAS,CAAC;IAEvC,IAAI8D,gBAAgB,CAAChC,KAAK,CAAC,CAAC3B,IAAI,KAAK,OAAO,EAAE;MAC5C2D,gBAAgB,CAAChC,KAAK,CAAC,CAACvB,QAAQ,GAAGuD,gBAAgB,CAAChC,KAAK,CAAC,CAACvB,QAAQ,CAACU,GAAG,CAAC,CAAC8C,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,WAAW,CAAC,CAAC,CAAC;IACxG,CAAC,MAAM;MACL;MACAC,gBAAgB,CAAChC,KAAK,CAAC,CAACvB,QAAQ,CAACsD,WAAW,CAAC,GAAGD,KAAK,CAACK,MAAM,CAACC,OAAO;IACtE;IACAjE,YAAY,CAAC6D,gBAAgB,CAAC;IAC9BK,cAAc,CAACL,gBAAgB,CAAC;EAClC;EAEA,SAASK,cAAcA,CAACL,gBAAkC,EAAQ;IAAE;IAClE,MAAMM,cAAc,GAAGN,gBAAgB,CAACvB,MAAM;IAC9C,MAAM8B,iBAAiB,GAAGP,gBAAgB,CAACQ,MAAM,CAAEpD,QAAQ,IACzDA,QAAQ,CAACX,QAAQ,CAACgE,IAAI,CAAEC,UAAU,IAAKA,UAAU,CACnD,CAAC,CAACjC,MAAM;IACR,MAAMkC,kBAAkB,GAAIJ,iBAAiB,GAAGD,cAAc,GAAI,GAAG;IACrErE,WAAW,CAAC0E,kBAAkB,CAAC;EACjC;EAEA,oBACEtF,OAAA;IAAKuF,SAAS,EAAC,YAAY;IAAAhC,QAAA,eACzBvD,OAAA;MAAAuD,QAAA,gBACEvD,OAAA;QAAKwD,KAAK,EAAE;UAAEgC,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE,UAAU;UAAEC,YAAY,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAO,CAAE;QAAArC,QAAA,gBAC3HvD,OAAA;UAAO6F,OAAO,EAAC,UAAU;UAACrC,KAAK,EAAE;YAAEoC,WAAW,EAAE,MAAM;YAAEE,QAAQ,EAAE;UAAO,CAAE;UAAAvC,QAAA,GAAC,oBACxD,EAAC5C,QAAQ,CAACoF,OAAO,CAAC,CAAC,CAAC,EAAC,GACzC;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrE,OAAA;UAAUkB,EAAE,EAAC,UAAU;UAAC8E,KAAK,EAAErF,QAAS;UAACsF,GAAG,EAAC,KAAK;UAACzC,KAAK,EAAE;YAAEC,MAAM,EAAE,MAAM;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7F,CAAC,eACNrE,OAAA;QAAIwD,KAAK,EAAE;UAAE0C,SAAS,EAAE;QAAS,CAAE;QAAA3C,QAAA,EAAC;MAA8B;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvErE,OAAA;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNrE,OAAA;QAAAuD,QAAA,eACEvD,OAAA,CAACL,SAAS;UAAC6D,KAAK,EAAE;YAAEK,MAAM,EAAE;UAAgB,CAAE;UAAAN,QAAA,eAC5CvD,OAAA;YAAAuD,QAAA,EAAG;UAKH;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACNrE,OAAA;QAAKwD,KAAK,EAAE;UAAE2C,UAAU,EAAE,OAAO;UAAEP,WAAW,EAAE;QAAQ,CAAE;QAAArC,QAAA,gBACxDvD,OAAA;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNrE,OAAA,CAACH,GAAG;UAAA0D,QAAA,EACD1C,SAAS,CAACiB,GAAG,CAAC,CAACC,QAAQ,EAAEY,KAAK,kBAC7B3C,OAAA,CAACF,GAAG;YAAasG,EAAE,EAAE,EAAG;YAACC,EAAE,EAAE,CAAE;YAAA9C,QAAA,GAAC,GAAC,eAC/BvD,OAAA;cAAAuD,QAAA,gBACEvD,OAAA;gBAAAuD,QAAA,EAAIxB,QAAQ,CAAChB;cAAI;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtBrE,OAAA,CAACJ,IAAI;gBAAA2D,QAAA,EACFxB,QAAQ,CAACd,OAAO,CAACa,GAAG,CAAC,CAACwE,MAAM,EAAE5B,WAAW,kBACxC1E,OAAA,CAACJ,IAAI,CAAC2G,KAAK;kBAETvF,IAAI,EAAEe,QAAQ,CAACf,IAAsB;kBACrCG,KAAK,EAAEmF,MAAM,CAACnF,KAAM;kBACpBqF,IAAI,EAAG,kBAAiB7D,KAAM,EAAE,CAAC;kBAAA;kBACjCqD,KAAK,EAAEM,MAAM,CAACpF,EAAG;kBACjB6D,OAAO,EAAEhD,QAAQ,CAACX,QAAQ,CAACsD,WAAW,CAAE,CAAC;kBAAA;kBACzC+B,QAAQ,EAAGhC,KAAK,IAAKD,YAAY,CAACC,KAAK,EAAE9B,KAAK,EAAE+B,WAAW;gBAAE,GANxD4B,MAAM,CAACpF,EAAE;kBAAAgD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAOf,CACF;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA,GAhBE1B,KAAK;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACVrE,OAAA;QAAKwD,KAAK,EAAE;UAAEgC,OAAO,EAAE,MAAM;UAAEE,cAAc,EAAE,QAAQ;UAAEgB,SAAS,EAAE;QAAM,CAAE;QAAAnD,QAAA,gBAC5EvD,OAAA,CAACsE,SAAS;UAAClE,gBAAgB,EAAGA,gBAAiB;UAACC,cAAc,EAAEA;QAAe;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACjFrE,OAAA,CAACsD,WAAW;UAACpD,aAAa,EAAEA,aAAc;UAACC,WAAW,EAAEA;QAAY;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtErE,OAAA,CAACuE,UAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7D,EAAA,CA7NeP,oBAAoB;AAAA0G,EAAA,GAApB1G,oBAAoB;AAAA,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}