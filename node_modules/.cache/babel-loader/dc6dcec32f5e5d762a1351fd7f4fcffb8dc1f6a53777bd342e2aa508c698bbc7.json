{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\nimport { LoginForm } from './LoginForm';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: \"Guest\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  const [accounts, setAccounts] = useState([]);\n  const [savedUser, setSavedUser] = useState(\"\");\n  const checkInfo = (savedUsername, savedPassword, userInput, passInput) => {\n    return userInput === savedUsername && passInput === savedPassword;\n  };\n  useEffect(() => {\n    // Load accounts from localStorage\n    const savedAccounts = JSON.parse(localStorage.getItem(\"savedAccounts\") || \"[]\");\n    setAccounts(savedAccounts);\n\n    // Handle remember me functionality\n    const rememberMe = localStorage.getItem(\"rememberMe\") === \"true\";\n    setRemember(rememberMe);\n    if (rememberMe) {\n      const savedUsername = localStorage.getItem(\"savedUsername\");\n      if (savedUsername) {\n        const user = savedAccounts.find(account => account.username === savedUsername);\n        if (user) {\n          setUserInfo({\n            username: user.username,\n            password: user.password\n          });\n          setIsLoggedIn(true);\n        }\n      }\n    }\n  }, []);\n  useEffect(() => {\n    // Check if a saved account matches the current pathname\n    const currentPath = window.location.pathname;\n    const matchingAccount = accounts.find(account => account.pathname === currentPath);\n    if (matchingAccount) {\n      setUserInfo({\n        username: matchingAccount.username,\n        password: matchingAccount.password\n      });\n    }\n  }, [accounts]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const existingAccount = accounts.find(account => account.username === userInfo.username);\n    if (existingAccount) {\n      // Login existing account\n      if (checkInfo(existingAccount.username, existingAccount.password, userInfo.username, userInfo.password)) {\n        setIsLoggedIn(true);\n      } else {\n        alert(\"Incorrect username or password.\");\n        setUserInfo({\n          username: \"Guest\",\n          password: \"\"\n        }); // Clear password on failure\n      }\n    } else if (formTitle === \"Create Account\") {\n      // Register new account\n      const newAccount = {\n        ...userInfo,\n        pathname: `/profile/${userInfo.username}`\n      };\n      const updatedAccounts = [...accounts, newAccount];\n      setAccounts(updatedAccounts);\n      localStorage.setItem(\"savedAccounts\", JSON.stringify(updatedAccounts));\n      setIsLoggedIn(true);\n    }\n    if (remember) {\n      localStorage.setItem(\"savedUsername\", userInfo.username);\n    } else {\n      localStorage.removeItem(\"savedUsername\");\n    }\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setUserInfo({\n      username: \"Guest\",\n      password: \"\"\n    });\n  };\n  const handleRemember = () => {\n    const newRememberState = !remember;\n    setRemember(newRememberState);\n    localStorage.setItem(\"rememberMe\", newRememberState ? \"true\" : \"false\");\n  };\n  const showForm = title => {\n    setFormTitle(title);\n    setIsFormOpen(!isFormOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: jerboa,\n        alt: \"Four-Toed Jerboa\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkred\"\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: () => showForm(\"Create Account\"),\n        title: \"Guest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => showForm(\"Log in\"),\n        style: {\n          float: \"left\",\n          marginTop: \"10px\",\n          borderRadius: \"20px\",\n          backgroundColor: \"darkblue\"\n        },\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      accounts: accounts.map(account => account.username) // Pass usernames for dropdown\n      ,\n      savedUser: savedUser,\n      setSavedUser: setSavedUser,\n      updateStatus: event => setUserInfo({\n        ...userInfo,\n        [event.target.name]: event.target.value\n      }),\n      closeForm: () => setIsFormOpen(false),\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 86\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"fzEjHQH0WHLNzQK+GdlFbjeA60s=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","jerboa","LoginForm","Button","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","accounts","setAccounts","savedUser","setSavedUser","checkInfo","savedUsername","savedPassword","userInput","passInput","savedAccounts","JSON","parse","localStorage","getItem","rememberMe","user","find","account","currentPath","window","location","pathname","matchingAccount","handleSubmit","event","preventDefault","existingAccount","alert","newAccount","updatedAccounts","setItem","stringify","removeItem","handleLogout","handleRemember","newRememberState","showForm","title","children","src","alt","style","float","width","height","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","borderRadius","backgroundColor","map","updateStatus","target","name","value","closeForm","href","color","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport jerboa from './Images/Four-toes-jerboa-modified.png';\r\nimport { LoginForm } from './LoginForm';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<{ username: string; password: string }>({ username: \"Guest\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [formTitle, setFormTitle] = useState<string>(\"Create Account\");\r\n  const [accounts, setAccounts] = useState<{ username: string; password: string; pathname: string }[]>([]);\r\n  const [savedUser, setSavedUser] = useState<string>(\"\");\r\n\r\n  const checkInfo = (savedUsername: string, savedPassword: string, userInput: string, passInput: string) => {\r\n    return userInput === savedUsername && passInput === savedPassword;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load accounts from localStorage\r\n    const savedAccounts = JSON.parse(localStorage.getItem(\"savedAccounts\") || \"[]\");\r\n    setAccounts(savedAccounts);\r\n\r\n    // Handle remember me functionality\r\n    const rememberMe = localStorage.getItem(\"rememberMe\") === \"true\";\r\n    setRemember(rememberMe);\r\n\r\n    if (rememberMe) {\r\n      const savedUsername = localStorage.getItem(\"savedUsername\");\r\n      if (savedUsername) {\r\n        const user = savedAccounts.find((account: { username: string }) => account.username === savedUsername);\r\n        if (user) {\r\n          setUserInfo({ username: user.username, password: user.password });\r\n          setIsLoggedIn(true);\r\n        }\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Check if a saved account matches the current pathname\r\n    const currentPath = window.location.pathname;\r\n    const matchingAccount = accounts.find((account) => account.pathname === currentPath);\r\n\r\n    if (matchingAccount) {\r\n      setUserInfo({ username: matchingAccount.username, password: matchingAccount.password });\r\n    }\r\n  }, [accounts]);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n  \r\n    const existingAccount = accounts.find((account) => account.username === userInfo.username);\r\n  \r\n    if (existingAccount) {\r\n      // Login existing account\r\n      if (checkInfo(existingAccount.username, existingAccount.password, userInfo.username, userInfo.password)) {\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        alert(\"Incorrect username or password.\");\r\n        setUserInfo({ username: \"Guest\", password: \"\" }); // Clear password on failure\r\n      }\r\n    } else if (formTitle === \"Create Account\") {\r\n      // Register new account\r\n      const newAccount = { ...userInfo, pathname: `/profile/${userInfo.username}` };\r\n      const updatedAccounts = [...accounts, newAccount];\r\n      setAccounts(updatedAccounts);\r\n      localStorage.setItem(\"savedAccounts\", JSON.stringify(updatedAccounts));\r\n      setIsLoggedIn(true);\r\n    }\r\n  \r\n    if (remember) {\r\n      localStorage.setItem(\"savedUsername\", userInfo.username);\r\n    } else {\r\n      localStorage.removeItem(\"savedUsername\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    setUserInfo({ username: \"Guest\", password: \"\" });\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    const newRememberState = !remember;\r\n    setRemember(newRememberState);\r\n    localStorage.setItem(\"rememberMe\", newRememberState ? \"true\" : \"false\");\r\n  };\r\n\r\n  const showForm = (title: string) => {\r\n    setFormTitle(title);\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div>\r\n          <img\r\n            src={jerboa}\r\n            alt=\"Four-Toed Jerboa\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title={userInfo.username}\r\n          />\r\n          <Button onClick={handleLogout} style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkred\" }}>Log out</Button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={() => showForm(\"Create Account\")}\r\n            title=\"Guest\"\r\n          />\r\n          <Button onClick={() => showForm(\"Log in\")} style={{ float: \"left\", marginTop: \"10px\", borderRadius: \"20px\", backgroundColor: \"darkblue\" }}>Log in</Button>\r\n        </div>\r\n      )}\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          accounts={accounts.map((account) => account.username)} // Pass usernames for dropdown\r\n          savedUser={savedUser}\r\n          setSavedUser={setSavedUser}\r\n          updateStatus={(event) => setUserInfo({ ...userInfo, [event.target.name]: event.target.value })}\r\n          closeForm={() => setIsFormOpen(false)}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}><h1>The Career Quiz</h1></a>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}