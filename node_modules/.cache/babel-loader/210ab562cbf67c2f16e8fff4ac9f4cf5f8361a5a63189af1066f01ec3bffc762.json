{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport { LoginForm } from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  const [db, setDb] = useState(null); // State to store the database instance\n\n  const initializeDatabase = () => {\n    const request = indexedDB.open(\"UserDatabase\", 1);\n    request.onerror = event => {\n      console.error(\"Error accessing user database!\", event);\n    };\n    request.onupgradeneeded = event => {\n      const db = request.result;\n      const store = db.createObjectStore(\"users\", {\n        autoIncrement: true\n      });\n      store.createIndex(\"username\", \"username\", {\n        unique: true\n      });\n    };\n    request.onsuccess = () => {\n      const db = request.result;\n      setDb(db);\n    };\n  };\n  useEffect(() => {\n    initializeDatabase();\n  }, []);\n  useEffect(() => {\n    if (db) {\n      const transaction = db.transaction(\"users\", \"readonly\");\n      const store = transaction.objectStore(\"users\");\n      const usernameIndex = store.index(\"username\");\n      const userQuery = usernameIndex.get(userInfo.username);\n      userQuery.onsuccess = () => {\n        // Check if user exists and password matches\n        if (userQuery.result && userQuery.result.password === userInfo.password) {\n          setFormTitle(\"Log In\");\n        } else {\n          setFormTitle(\"Create Account\");\n        }\n      };\n      userQuery.onerror = () => {\n        console.error(\"Error accessing user index\");\n      };\n    }\n  }, [userInfo.username, userInfo.password, db]); // Ensure db is available before running\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!db) return;\n    const transaction = db.transaction(\"users\", \"readwrite\");\n    const store = transaction.objectStore(\"users\");\n    const userRecord = {\n      username: userInfo.username,\n      password: userInfo.password\n    };\n    const putRequest = store.put(userRecord);\n    putRequest.onsuccess = () => {\n      console.log(\"User data added/updated successfully\");\n      setIsLoggedIn(true);\n    };\n    putRequest.onerror = () => {\n      console.error(\"Error adding/updating user data\");\n    };\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleRemember = () => {\n    setRemember(!remember);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        float: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Signed in as: \", userInfo.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setUserInfo: setUserInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      updateStatus: updateStatus,\n      closeForm: () => setIsFormOpen(false),\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"DevT9MfPCEQnOnsQLPDsRMHm1oo=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","LoginForm","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setUserInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","db","setDb","initializeDatabase","request","indexedDB","open","onerror","event","console","error","onupgradeneeded","result","store","createObjectStore","autoIncrement","createIndex","unique","onsuccess","transaction","objectStore","usernameIndex","index","userQuery","get","handleSubmit","preventDefault","userRecord","putRequest","put","log","toggleForm","updateStatus","name","value","target","prevInfo","handleRemember","children","style","position","float","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","cursor","onClick","href","color","closeForm","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport userProfile from './Images/user-profile.png';\r\nimport { LoginForm } from './LoginForm';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setUserInfo] = useState<{ username: string; password: string }>({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [formTitle, setFormTitle] = useState<string>(\"Create Account\");\r\n  const [db, setDb] = useState<IDBDatabase | null>(null); // State to store the database instance\r\n\r\n  const initializeDatabase = () => {\r\n    const request = indexedDB.open(\"UserDatabase\", 1);\r\n\r\n    request.onerror = (event) => {\r\n      console.error(\"Error accessing user database!\", event);\r\n    };\r\n\r\n    request.onupgradeneeded = (event) => {\r\n      const db = request.result;\r\n      const store = db.createObjectStore(\"users\", { autoIncrement: true });\r\n      store.createIndex(\"username\", \"username\", { unique: true });\r\n    };\r\n\r\n    request.onsuccess = () => {\r\n      const db = request.result;\r\n      setDb(db);\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    initializeDatabase();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (db) {\r\n      const transaction = db.transaction(\"users\", \"readonly\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const usernameIndex = store.index(\"username\");\r\n\r\n      const userQuery = usernameIndex.get(userInfo.username);\r\n\r\n      userQuery.onsuccess = () => {\r\n        // Check if user exists and password matches\r\n        if (userQuery.result && userQuery.result.password === userInfo.password) {\r\n          setFormTitle(\"Log In\");\r\n        } else {\r\n          setFormTitle(\"Create Account\");\r\n        }\r\n      };\r\n\r\n      userQuery.onerror = () => {\r\n        console.error(\"Error accessing user index\");\r\n      };\r\n    }\r\n  }, [userInfo.username, userInfo.password, db]); // Ensure db is available before running\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    if (!db) return;\r\n\r\n    const transaction = db.transaction(\"users\", \"readwrite\");\r\n    const store = transaction.objectStore(\"users\");\r\n\r\n    const userRecord = {\r\n      username: userInfo.username,\r\n      password: userInfo.password,\r\n    };\r\n\r\n    const putRequest = store.put(userRecord);\r\n    putRequest.onsuccess = () => {\r\n      console.log(\"User data added/updated successfully\");\r\n      setIsLoggedIn(true);\r\n    };\r\n\r\n    putRequest.onerror = () => {\r\n      console.error(\"Error adding/updating user data\");\r\n    };\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setUserInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember(!remember);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div style={{ position: \"absolute\", float: \"left\" }}>\r\n          <h3>Signed in as: {userInfo.username}!</h3>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={toggleForm}\r\n          />\r\n        </div>\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setUserInfo={setUserInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          updateStatus={updateStatus}\r\n          closeForm={() => setIsFormOpen(false)}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}