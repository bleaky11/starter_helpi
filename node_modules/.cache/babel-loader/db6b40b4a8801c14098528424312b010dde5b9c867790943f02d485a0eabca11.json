{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Button, Form } from 'react-bootstrap';\nimport { HomePage } from './homepagelogo';\nimport { BasicCareerComponent } from './basicCareer';\n\n//local storage and API Key: key should be entered in by the user and will be stored in local storage (NOT session storage)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet keyData = \"\";\nconst saveKeyData = \"MYKEY\";\nconst prevKey = localStorage.getItem(saveKeyData); //so it'll look like: MYKEY: <api_key_value here> in the local storage when you inspect\nif (prevKey !== null) {\n  keyData = JSON.parse(prevKey);\n}\nfunction SwitchPage({\n  setPage,\n  page\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setPage(\"Home\"),\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setPage(\"Basic Questions\"),\n      children: \"Basic Career Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setPage(\"Detailed Questions\"),\n      children: \"Basic Career Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n// function rerender(): JSX.Element\n// {\n\n// }\n_c = SwitchPage;\nfunction App() {\n  _s();\n  const [key, setKey] = useState(keyData); //for api key input\n  const [page, setPage] = useState(\"Home\"); // visibilty for accessing basic questions\n\n  //sets the local storage item to the api key the user inputed\n  function handleSubmit() {\n    localStorage.setItem(saveKeyData, JSON.stringify(key));\n    window.location.reload(); //when making a mistake and changing the key again, I found that I have to reload the whole site before openai refreshes what it has stores for the local storage variable\n  }\n\n  //whenever there's a change it'll store the api key in a local state called key but it won't be set in the local storage until the user clicks the submit button\n  function changeKey(event) {\n    setKey(event.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(SwitchPage, {\n        setPage: setPage,\n        page: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), page === \"Home\" ? /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }, this) : page === \"Basic Questions\" ? /*#__PURE__*/_jsxDEV(BasicCareerComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 84\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React | Ryan Burtson | Levi Chen | Thomas Florio | Tolu AKin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"API Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Insert API Key Here\",\n        onChange: changeKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"Submit-Button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"x0wyHKZkmkRwzNzowaOfPcqVuFQ=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SwitchPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","logo","Button","Form","HomePage","BasicCareerComponent","jsxDEV","_jsxDEV","keyData","saveKeyData","prevKey","localStorage","getItem","JSON","parse","SwitchPage","setPage","page","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","key","setKey","handleSubmit","setItem","stringify","window","location","reload","changeKey","event","target","value","className","src","alt","href","rel","Label","Control","type","placeholder","onChange","_c2","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { HomePage } from './homepagelogo';\r\nimport { BasicCareerComponent } from './basicCareer';\r\n\r\n//local storage and API Key: key should be entered in by the user and will be stored in local storage (NOT session storage)\r\nlet keyData = \"\";\r\nconst saveKeyData = \"MYKEY\";\r\nconst prevKey = localStorage.getItem(saveKeyData); //so it'll look like: MYKEY: <api_key_value here> in the local storage when you inspect\r\nif (prevKey !== null) {\r\n  keyData = JSON.parse(prevKey);\r\n}\r\n\r\ninterface pageProps\r\n{\r\n    setPage: (newPage: string) => void\r\n    page: string\r\n}\r\n  \r\nfunction SwitchPage({setPage, page}: pageProps): JSX.Element \r\n{\r\n  return (\r\n      <div>\r\n          <Button onClick={() => setPage(\"Home\")}>Home</Button>\r\n          <Button onClick={() => setPage(\"Basic Questions\")}>Basic Career Page</Button>\r\n          <Button onClick={() => setPage(\"Detailed Questions\")}>Basic Career Page</Button>\r\n      </div>\r\n  );\r\n}\r\n\r\n// function rerender(): JSX.Element\r\n// {\r\n  \r\n// }\r\n\r\nfunction App() {\r\n  const [key, setKey] = useState<string>(keyData); //for api key input\r\n  const [page, setPage] = useState<string>(\"Home\"); // visibilty for accessing basic questions\r\n\r\n  //sets the local storage item to the api key the user inputed\r\n  function handleSubmit() {\r\n    localStorage.setItem(saveKeyData, JSON.stringify(key));\r\n    window.location.reload(); //when making a mistake and changing the key again, I found that I have to reload the whole site before openai refreshes what it has stores for the local storage variable\r\n  }\r\n\r\n  //whenever there's a change it'll store the api key in a local state called key but it won't be set in the local storage until the user clicks the submit button\r\n  function changeKey(event: React.ChangeEvent<HTMLInputElement>) {\r\n    setKey(event.target.value);\r\n  }\r\n  return (\r\n      <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <HomePage />\r\n            <SwitchPage setPage = {setPage} page = {page}></SwitchPage>\r\n            {page === \"Home\" ? <HomePage></HomePage>: page === \"Basic Questions\" ? <BasicCareerComponent></BasicCareerComponent>:\r\n            null}\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <p>\r\n              Edit <code>src/App.tsx</code> and save to reload.\r\n            </p>\r\n            <a\r\n              className=\"App-link\"\r\n              href=\"https://reactjs.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Learn React | Ryan Burtson | Levi Chen | Thomas Florio | Tolu AKin\r\n            </a>\r\n          </header>\r\n          <Form>\r\n            <Form.Label>API Key:</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Insert API Key Here\"\r\n              onChange={changeKey}\r\n            ></Form.Control>\r\n            <br />\r\n            <Button className=\"Submit-Button\" onClick={handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      )}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}