{"ast":null,"code":"import{useCallback,useEffect,useState}from\"react\";import{Button,Container}from\"react-bootstrap\";import questionMarks from\"./Images/Questions.png\";import detective2 from\"./Images/Detective2.png\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function DetailedCareerComponent(_ref){let{detailedComplete,toggleDetailed}=_ref;const[questionPage,setQuestionPage]=useState(0);const[tempAnswers,setTempAnswers]=useState(new Array(7).fill(\"\"));const[questions,setQuestions]=useState([]);const[progress,setProgress]=useState(0);const[showExplanation,setShowExplanation]=useState(false);const currentQuestion=questions.find(q=>q.page===questionPage);//Variable to track which question is displayed\nif(sessionStorage.getItem(\"quizAnswers\")===null){sessionStorage.setItem(\"quizAnswers\",JSON.stringify({}));}const updateProgress=useCallback(()=>{//When an answer to a question is saved, update progress\nconst totalQuestions=questions.length;const savedAnswers=JSON.parse(sessionStorage.getItem(\"quizAnswers\")||\"{}\");sessionStorage.setItem(\"quizAnswers\",JSON.stringify(savedAnswers));const answeredQuestions=Object.keys(savedAnswers).filter(key=>savedAnswers[key]).length;const progressPercentage=answeredQuestions/totalQuestions*100;setProgress(progressPercentage);},[questions]);useEffect(()=>{//Allows for each question to have a different answerbox while still being editable\nconst storedQuestions=JSON.parse(sessionStorage.getItem(\"quizQuestions\")||\"[]\");if(storedQuestions.length>0){setQuestions(storedQuestions);}else{const defaultQuestions=[{text:\"What have you always wanted to be when you grew up?\",type:\"text\",answered:false,page:0,answer:\"\",tip:\"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\"},{text:\"Whether inside or outside of school, what is your favorite class that you have ever taken?\",type:\"text\",answered:false,page:1,answer:\"\",tip:\"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"},{text:\"What societal stressor do you feel most passionate about addressing?\",type:\"text\",answered:false,page:2,answer:\"\",tip:\"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"},{text:\"What did you dislike most about jobs or tasks you've had to do in the past?\",type:\"text\",answered:false,page:3,answer:\"\",tip:\"A lot of people dislike working in groups as they have less control over the task at hand.\"},{text:\"What is a topic or subject that you could teach someone about?\",type:\"text\",answered:false,page:4,answer:\"\",tip:\"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"},{text:\"What are your favorite hobbies?\",type:\"text\",answered:false,page:5,answer:\"\",tip:\"Do you enjoy any outdoor activities, sports, instruments, or games?\"},{text:\"What 3 words would others use to describe you?\",type:\"text\",answered:false,page:6,answer:\"\",tip:\"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"}];setQuestions(defaultQuestions);sessionStorage.setItem(\"quizQuestions\",JSON.stringify(defaultQuestions));}// Load saved answers from session storage when the component mounts\nconst savedAnswers=JSON.parse(sessionStorage.getItem(\"quizAnswers\")||\"{}\");const updatedTempAnswers=new Array(7).fill(\"\");// Populate tempAnswers with saved answers\nObject.keys(savedAnswers).forEach(key=>{updatedTempAnswers[parseInt(key)]=savedAnswers[key];});setTempAnswers(updatedTempAnswers);// Calculate progress after setting questions\nconst totalQuestions=storedQuestions.length;const answeredQuestions=Object.keys(savedAnswers).filter(key=>savedAnswers[key]).length;const progressPercentage=totalQuestions>0?answeredQuestions/totalQuestions*100:0;setProgress(progressPercentage);},[]);function updateAnswered(){//Function to record the user's answer when they click the \"Record Answer\" button\nif(currentQuestion){const updatedQuestions=[...questions];updatedQuestions[questionPage].answered=true;//Updates the answered status of the question to true\nupdatedQuestions[questionPage].answer=tempAnswers[questionPage];//Sets the answer value of the question to the user's answer\nsetQuestions(updatedQuestions);//Update the questions state to include user's answer\nconst savedAnswers=JSON.parse(sessionStorage.getItem(\"quizAnswers\")||\"{}\");//Creates an array from \"quizAnswers\" in storage, or returns an empty array if it doesn't exist\nsavedAnswers[questionPage]=tempAnswers[questionPage];//Populate array with user's answer\nsessionStorage.setItem(\"quizAnswers\",JSON.stringify(savedAnswers));//Update \"quizAnswers\" in storage with the new array\nupdateProgress();}if(tempAnswers[questionPage]){setQuestionPage(prev=>Math.min(questions.length-1,prev+1));}}function handleAnswerChange(event){//Function to place a user's new answer in a temp variable to hold before recording\nsetTempAnswers(prevAnswers=>{const updatedAnswers=[...prevAnswers];updatedAnswers[questionPage]=event.target.value;return updatedAnswers;});}function toggleExplanation(){//Turns explanation blurb on and off\nsetShowExplanation(prev=>!prev);}function IsRecorded(_ref2){let{savedAnswer,currentText}=_ref2;//Displays the user's recorded answer\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[\"Your Answer: \",savedAnswer,/*#__PURE__*/_jsx(\"div\",{children:savedAnswer===currentText?\"Response Recorded!\":\"Please Record Your Response!\"})]});}function handleSubmit(_ref3){let{detailedComplete,toggleDetailed}=_ref3;toggleDetailed(true);alert(\"Thanks for completing the Detailed Career quiz!\");}function DetailedSubmit(_ref4){let{detailedComplete,toggleDetailed}=_ref4;//Submit button - disabled if progress is less than 100\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{style:{height:\"50px\",width:\"75px\",borderRadius:\"15px\",background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\"},disabled:progress<100,onClick:()=>handleSubmit({detailedComplete,toggleDetailed}),children:\"Submit\"})});}function handleClear(){//Function to handle clearing quiz and resetting progress\nsessionStorage.removeItem(\"quizAnswers\");//removes saved answers from storage\nsessionStorage.removeItem(\"quizQuestions\");//removes saved questions from storage\nconst defaultQuestions=[{text:\"What have you always wanted to be when you grew up?\",type:\"text\",answered:false,page:0,answer:\"\",tip:\"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\"},{text:\"Whether inside or outside of school, what is your favorite class that you have ever taken?\",type:\"text\",answered:false,page:1,answer:\"\",tip:\"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"},{text:\"What societal stressor do you feel most passionate about addressing?\",type:\"text\",answered:false,page:2,answer:\"\",tip:\"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"},{text:\"What did you dislike most about jobs or tasks you've had to do in the past?\",type:\"text\",answered:false,page:3,answer:\"\",tip:\"A lot of people dislike working in groups as they have less control over the task at hand.\"},{text:\"What is a topic or subject that you could teach someone about?\",type:\"text\",answered:false,page:4,answer:\"\",tip:\"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"},{text:\"What are your favorite hobbies?\",type:\"text\",answered:false,page:5,answer:\"\",tip:\"Do you enjoy any outdoor activities, sports, instruments, or games?\"},{text:\"What 3 words would others use to describe you?\",type:\"text\",answered:false,page:6,answer:\"\",tip:\"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"}];//Initializes a questions array with blank answers, false answer value\nsetQuestions(defaultQuestions);//Update state with empty questions array\nsetTempAnswers(new Array(defaultQuestions.length).fill(\"\"));//Initializes a new array the length of the defaultQuestions array and fills it with empty strings\nsetProgress(0);//Reset progress\nsetTimeout(()=>{alert(\"Quiz Cleared!\");},0);//Wait until all of the clear logic runs before displaying message\nsetQuestionPage(prev=>Math.min(questions.length-1,0));}function DetailedClear(){//Clear button\nreturn/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{onClick:handleClear,style:{height:\"50px\",width:\"75px\",borderRadius:\"15px\",background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\"},children:\"Clear\"})});}function getSavedAnswer(page){//Helper function to get and display the user's saved answer from storage\nconst savedAnswers=JSON.parse(sessionStorage.getItem(\"quizAnswers\")||\"{}\");return savedAnswers[page]||\"\";// Return the saved answer or an empty string if not present\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"Background\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\",justifyContent:\"flex-end\",marginBottom:\"10px\",marginRight:\"30px\"},children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"question\",style:{marginRight:\"10px\",fontSize:\"25px\"},children:[\"Percent Complete: \",progress.toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"progress\",{id:\"question\",value:progress,max:\"100\",style:{height:\"45px\",width:\"300px\"}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Here is the Detailed Career Page!\"}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(Container,{style:{border:\"2px solid red\"},children:/*#__PURE__*/_jsx(\"p\",{children:\"This assessment is designed to determine an appopriate career path going forward. You will be asked a series of elaborate questions that may require some additional thought to answer. Before you begin, make sure you're in a comfortable environment and answer each question to your best ability.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[currentQuestion&&/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"h2\",{children:[currentQuestion.text,/*#__PURE__*/_jsx(Button,{onClick:toggleExplanation,style:{fontSize:'24px',marginLeft:'10px',background:'transparent',border:'none',cursor:'pointer',color:'blue'},children:\"?\"})]}),showExplanation&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'10px',padding:'10px',border:'1px solid lightgray',borderRadius:'5px',background:'#f9f9f9'},children:/*#__PURE__*/_jsx(\"p\",{children:currentQuestion.tip})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"img\",{src:detective2,alt:\"Detective\",style:{width:'10%',height:'10%',marginRight:'10px'}}),/*#__PURE__*/_jsx(\"textarea\",{value:tempAnswers[questionPage],onChange:handleAnswerChange,style:{width:'25%',height:'5em',resize:'none'}}),/*#__PURE__*/_jsx(\"img\",{src:questionMarks,alt:\"Question Marks\",style:{width:'10%',height:'10%',marginLeft:'10px'}})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"center\"},children:currentQuestion&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:\"20px\"},children:/*#__PURE__*/_jsx(IsRecorded,{savedAnswer:getSavedAnswer(questionPage),currentText:tempAnswers[questionPage]})})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',width:'100%',marginTop:'20px',padding:\"0 37%\"},children:[/*#__PURE__*/_jsx(Button,{style:{background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\"},onClick:()=>setQuestionPage(prev=>Math.max(0,prev-1)),disabled:questionPage===0,children:\"Previous\"}),/*#__PURE__*/_jsx(Button,{style:{background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\",width:\"200px\"},onClick:()=>updateAnswered(),children:\"Record Answer\"}),/*#__PURE__*/_jsx(Button,{style:{background:\"#DDA15E\",border:\"3px\",borderColor:\"#bc6c25\",borderStyle:\"solid\"},onClick:()=>setQuestionPage(prev=>Math.min(questions.length-1,prev+1)),disabled:questionPage===6,children:\"Next\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",justifyContent:\"center\",marginTop:\"80px\"},children:[/*#__PURE__*/_jsx(DetailedSubmit,{detailedComplete:detailedComplete,toggleDetailed:toggleDetailed}),/*#__PURE__*/_jsx(DetailedClear,{})]})]});}","map":{"version":3,"names":["useCallback","useEffect","useState","Button","Container","questionMarks","detective2","jsx","_jsx","jsxs","_jsxs","DetailedCareerComponent","_ref","detailedComplete","toggleDetailed","questionPage","setQuestionPage","tempAnswers","setTempAnswers","Array","fill","questions","setQuestions","progress","setProgress","showExplanation","setShowExplanation","currentQuestion","find","q","page","sessionStorage","getItem","setItem","JSON","stringify","updateProgress","totalQuestions","length","savedAnswers","parse","answeredQuestions","Object","keys","filter","key","progressPercentage","storedQuestions","defaultQuestions","text","type","answered","answer","tip","updatedTempAnswers","forEach","parseInt","updateAnswered","updatedQuestions","prev","Math","min","handleAnswerChange","event","prevAnswers","updatedAnswers","target","value","toggleExplanation","IsRecorded","_ref2","savedAnswer","currentText","children","handleSubmit","_ref3","alert","DetailedSubmit","_ref4","style","height","width","borderRadius","background","border","borderColor","borderStyle","disabled","onClick","handleClear","removeItem","setTimeout","DetailedClear","getSavedAnswer","className","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","fontSize","toFixed","id","max","textAlign","flexDirection","marginLeft","cursor","color","marginTop","padding","src","alt","onChange","resize"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/detailedCareer.tsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport questionMarks from \"./Images/Questions.png\";\r\nimport detective2 from \"./Images/Detective2.png\";\r\n\r\ninterface submitButton{ // Interface for keeping track of Detailed Question Completion\r\n  detailedComplete: boolean;\r\n  toggleDetailed: (notDetailed: boolean) => void;\r\n}\r\n\r\ninterface Question // Interface to handle question attributes\r\n{\r\n  text: string;\r\n  type: string;\r\n  answered: boolean;\r\n  page: number;\r\n  answer: string;\r\n  tip?: string;\r\n}\r\n\r\nexport function DetailedCareerComponent({ detailedComplete, toggleDetailed }: submitButton): JSX.Element {\r\n  const [questionPage, setQuestionPage] = useState<number>(0);\r\n  const [tempAnswers, setTempAnswers] = useState<string[]>(new Array(7).fill(\"\"));\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const [showExplanation, setShowExplanation] = useState<boolean>(false);\r\n\r\n\r\n  const currentQuestion = questions.find(q => q.page === questionPage); //Variable to track which question is displayed\r\n  if(sessionStorage.getItem(\"quizAnswers\") === null){\r\n    sessionStorage.setItem(\"quizAnswers\", JSON.stringify({}))\r\n  }\r\n\r\n  const updateProgress = useCallback(() => { //When an answer to a question is saved, update progress\r\n    const totalQuestions = questions.length;\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\r\n    sessionStorage.setItem(\"quizAnswers\", JSON.stringify(savedAnswers));\r\n    const answeredQuestions = Object.keys(savedAnswers).filter(key => savedAnswers[key]).length;\r\n    const progressPercentage = (answeredQuestions / totalQuestions) * 100;\r\n    setProgress(progressPercentage);\r\n  }, [questions]);\r\n\r\n  useEffect(() => { //Allows for each question to have a different answerbox while still being editable\r\n    const storedQuestions = JSON.parse(sessionStorage.getItem(\"quizQuestions\") || \"[]\");\r\n    if (storedQuestions.length > 0){\r\n      setQuestions(storedQuestions)\r\n    } else {\r\n      const defaultQuestions = [\r\n        { text: \"What have you always wanted to be when you grew up?\", type: \"text\", answered: false, page: 0, answer: \"\", tip: \"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\" },\r\n        { text: \"Whether inside or outside of school, what is your favorite class that you have ever taken?\", type: \"text\", answered: false, page: 1, answer: \"\", tip: \"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"  },\r\n        { text: \"What societal stressor do you feel most passionate about addressing?\", type: \"text\", answered: false, page: 2, answer: \"\", tip: \"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"  },\r\n        { text: \"What did you dislike most about jobs or tasks you've had to do in the past?\", type: \"text\", answered: false, page: 3, answer: \"\", tip: \"A lot of people dislike working in groups as they have less control over the task at hand.\"  },\r\n        { text: \"What is a topic or subject that you could teach someone about?\", type: \"text\", answered: false, page: 4, answer: \"\", tip: \"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"  },\r\n        { text: \"What are your favorite hobbies?\", type: \"text\", answered: false, page: 5, answer: \"\", tip: \"Do you enjoy any outdoor activities, sports, instruments, or games?\"  },\r\n        { text: \"What 3 words would others use to describe you?\", type: \"text\", answered: false, page: 6, answer: \"\", tip: \"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"  }\r\n      ]\r\n      setQuestions(defaultQuestions)\r\n      sessionStorage.setItem(\"quizQuestions\", JSON.stringify(defaultQuestions));\r\n    }\r\n\r\n    // Load saved answers from session storage when the component mounts\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\r\n    const updatedTempAnswers = new Array(7).fill(\"\");\r\n\r\n    // Populate tempAnswers with saved answers\r\n    Object.keys(savedAnswers).forEach((key) => {\r\n      updatedTempAnswers[parseInt(key)] = savedAnswers[key];\r\n    });\r\n    setTempAnswers(updatedTempAnswers);\r\n  \r\n    // Calculate progress after setting questions\r\n    const totalQuestions = storedQuestions.length;\r\n    const answeredQuestions = Object.keys(savedAnswers).filter(key => savedAnswers[key]).length;\r\n    const progressPercentage = totalQuestions > 0 ? (answeredQuestions / totalQuestions) * 100 : 0;\r\n    setProgress(progressPercentage);\r\n  \r\n  }, []);\r\n\r\n  function updateAnswered() { //Function to record the user's answer when they click the \"Record Answer\" button\r\n    if (currentQuestion) {\r\n      const updatedQuestions = [...questions];\r\n      updatedQuestions[questionPage].answered = true; //Updates the answered status of the question to true\r\n      updatedQuestions[questionPage].answer = tempAnswers[questionPage]; //Sets the answer value of the question to the user's answer\r\n      setQuestions(updatedQuestions); //Update the questions state to include user's answer\r\n      const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\"); //Creates an array from \"quizAnswers\" in storage, or returns an empty array if it doesn't exist\r\n      savedAnswers[questionPage] = tempAnswers[questionPage]; //Populate array with user's answer\r\n      sessionStorage.setItem(\"quizAnswers\", JSON.stringify(savedAnswers)); //Update \"quizAnswers\" in storage with the new array\r\n      updateProgress();\r\n    }if(tempAnswers[questionPage]){\r\n      setQuestionPage(prev => Math.min(questions.length - 1, prev + 1))\r\n    }\r\n  }\r\n\r\n  function handleAnswerChange(event: React.ChangeEvent<HTMLTextAreaElement>) { //Function to place a user's new answer in a temp variable to hold before recording\r\n    setTempAnswers(prevAnswers => {\r\n      const updatedAnswers = [...prevAnswers];\r\n      updatedAnswers[questionPage] = event.target.value;\r\n      return updatedAnswers;\r\n    });\r\n  }\r\n\r\n  function toggleExplanation() { //Turns explanation blurb on and off\r\n    setShowExplanation(prev => !prev);\r\n  }\r\n\r\n  function IsRecorded({ savedAnswer, currentText }: { savedAnswer: string; currentText: string }) { //Displays the user's recorded answer\r\n    return (\r\n      <div>\r\n        Your Answer: {savedAnswer}\r\n        <div>\r\n        {savedAnswer === currentText ? \"Response Recorded!\" : \"Please Record Your Response!\"}\r\n        </div>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  function handleSubmit({detailedComplete, toggleDetailed}: submitButton)\r\n{\r\n  toggleDetailed(true);\r\n  alert(\"Thanks for completing the Detailed Career quiz!\");\r\n}\r\n\r\nfunction DetailedSubmit({detailedComplete, toggleDetailed}: submitButton): JSX.Element { //Submit button - disabled if progress is less than 100\r\n  return(<div>\r\n    <Button style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} disabled={progress < 100} onClick={() => handleSubmit({detailedComplete, toggleDetailed})}>Submit</Button>\r\n  </div>)\r\n}\r\n\r\n  function handleClear(){ //Function to handle clearing quiz and resetting progress\r\n    sessionStorage.removeItem(\"quizAnswers\"); //removes saved answers from storage\r\n    sessionStorage.removeItem(\"quizQuestions\"); //removes saved questions from storage\r\n    const defaultQuestions = [\r\n      { text: \"What have you always wanted to be when you grew up?\", type: \"text\", answered: false, page: 0, answer: \"\", tip: \"A lot of kids want to be a police officer, firefighter, nurse, doctor, etc. when they grow up.\" },\r\n      { text: \"Whether inside or outside of school, what is your favorite class that you have ever taken?\", type: \"text\", answered: false, page: 1, answer: \"\", tip: \"The class “Nebula Formation of Dying Stars” was Sarah's favorite, now she is an Aerospace Engineer.\"  },\r\n      { text: \"What societal stressor do you feel most passionate about addressing?\", type: \"text\", answered: false, page: 2, answer: \"\", tip: \"Epidemics/Pandemics, Homelessness, Crime, Education, Agriculture, Technology, National Defense, Environmental Conservation, etc.\"  },\r\n      { text: \"What did you dislike most about jobs or tasks you've had to do in the past?\", type: \"text\", answered: false, page: 3, answer: \"\", tip: \"A lot of people dislike working in groups as they have less control over the task at hand.\"  },\r\n      { text: \"What is a topic or subject that you could teach someone about?\", type: \"text\", answered: false, page: 4, answer: \"\", tip: \"Bailey loves History, as a result she loves to share new historical facts that fascinate her. She is happy to discuss History with anybody that is willing to listen.\"  },\r\n      { text: \"What are your favorite hobbies?\", type: \"text\", answered: false, page: 5, answer: \"\", tip: \"Do you enjoy any outdoor activities, sports, instruments, or games?\"  },\r\n      { text: \"What 3 words would others use to describe you?\", type: \"text\", answered: false, page: 6, answer: \"\", tip: \"How might a friend describe you? How might your sister describe you? How might a therapist describe you? How would you describe yourself? Are there any similarities?\"  }\r\n    ]; //Initializes a questions array with blank answers, false answer value\r\n    setQuestions(defaultQuestions); //Update state with empty questions array\r\n    setTempAnswers(new Array(defaultQuestions.length).fill(\"\")); //Initializes a new array the length of the defaultQuestions array and fills it with empty strings\r\n    setProgress(0); //Reset progress\r\n    setTimeout(() => {\r\n      alert(\"Quiz Cleared!\");\r\n  }, 0); //Wait until all of the clear logic runs before displaying message\r\n    setQuestionPage(prev => Math.min(questions.length - 1, 0))\r\n  }\r\n\r\n  function DetailedClear(){ //Clear button\r\n    return(<div>\r\n      <Button onClick={handleClear} style = {{height: \"50px\", width: \"75px\", borderRadius: \"15px\", background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}}>Clear</Button>\r\n    </div>)\r\n  }\r\n\r\n  function getSavedAnswer(page: number) { //Helper function to get and display the user's saved answer from storage\r\n    const savedAnswers = JSON.parse(sessionStorage.getItem(\"quizAnswers\") || \"{}\");\r\n    return savedAnswers[page] || \"\"; // Return the saved answer or an empty string if not present\r\n  }\r\n  \r\n  return (\r\n    <div className=\"Background\">\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n          <label htmlFor=\"question\" style={{ marginRight: \"10px\", fontSize: \"25px\" }}>\r\n            Percent Complete: {progress.toFixed(0)}%\r\n          </label>\r\n          <progress id=\"question\" value={progress} max=\"100\" style={{ height: \"45px\", width: \"300px\" }} />\r\n        </div>\r\n      <div style={{textAlign: \"center\"}}>\r\n        <h1>Here is the Detailed Career Page!</h1>\r\n        <div></div>\r\n        <Container style={{ border: \"2px solid red\" }}>\r\n            <p>\r\n            This assessment is designed to determine an appopriate career path going\r\n            forward. You will be asked a series of elaborate questions that may require some\r\n            additional thought to answer. Before you begin, make sure you're in a comfortable environment and\r\n            answer each question to your best ability.\r\n            </p>\r\n        </Container>\r\n      </div>\r\n      <div>\r\n      {currentQuestion && (\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', textAlign: 'center' }}>\r\n          <h2>{currentQuestion.text}\r\n          <Button \r\n            onClick={toggleExplanation} \r\n            style={{fontSize: '24px', marginLeft: '10px', background: 'transparent', border: 'none', cursor: 'pointer', color: 'blue' }}>\r\n            ?\r\n          </Button>\r\n          </h2>\r\n          {showExplanation && (\r\n            <div style={{ marginTop: '10px', padding: '10px', border: '1px solid lightgray', borderRadius: '5px', background: '#f9f9f9' }}>\r\n              <p>{currentQuestion.tip}</p>\r\n            </div>\r\n          )}\r\n          \r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '10px' }}>\r\n            <img src={detective2} alt=\"Detective\" style={{ width: '10%', height: '10%', marginRight: '10px' }} />\r\n              <textarea \r\n                value={tempAnswers[questionPage]} \r\n                onChange={handleAnswerChange} \r\n                style={{ width: '25%', height: '5em', resize: 'none' }} \r\n              />\r\n            <img src={questionMarks} alt=\"Question Marks\" style={{ width: '10%', height: '10%', marginLeft: '10px' }} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div style={{textAlign: \"center\"}}>\r\n        {currentQuestion && (<div style={{marginTop: \"20px\"}}>\r\n          <IsRecorded savedAnswer={getSavedAnswer(questionPage)} currentText={tempAnswers[questionPage]} /></div>\r\n        )}\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginTop: '20px', padding: \"0 37%\" }}>\r\n        <Button style={{background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} onClick={() => setQuestionPage(prev => Math.max(0, prev - 1))} disabled={questionPage === 0}>Previous</Button>\r\n        <Button style={{background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\", width: \"200px\"}} onClick={() => updateAnswered()}>Record Answer</Button>\r\n        <Button style={{background: \"#DDA15E\", border: \"3px\", borderColor: \"#bc6c25\", borderStyle: \"solid\"}} onClick={() => setQuestionPage(prev => Math.min(questions.length - 1, prev + 1))} disabled={questionPage === 6}>Next</Button>\r\n      </div>\r\n    </div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"80px\" }}>\r\n        <DetailedSubmit detailedComplete={detailedComplete} toggleDetailed={toggleDetailed}/>\r\n        <DetailedClear />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}