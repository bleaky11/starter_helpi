{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\homepagelogo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userProfile from './Images/user-profile.png';\nimport { LoginForm } from './LoginForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [userInfo, setInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [remember, setRemember] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [formTitle, setFormTitle] = useState(\"Create Account\");\n  useEffect(() => {\n    const initializeDB = () => {\n      const indexedDB = window.indexedDB;\n      const request = indexedDB.open(\"UserDatabase\", 1);\n      request.onupgradeneeded = () => {\n        console.log(\"Setting up database...\");\n        const db = request.result;\n        // Create object store with autoIncrement\n        const store = db.createObjectStore(\"users\", {\n          autoIncrement: true\n        });\n        store.createIndex(\"username\", \"username\", {\n          unique: true\n        });\n      };\n      request.onsuccess = () => {\n        console.log(\"Database opened successfully!\");\n        const db = request.result;\n        checkExistingUser(db);\n      };\n      request.onerror = event => {\n        console.error(\"Error accessing user database!\", event);\n      };\n    };\n    const checkExistingUser = db => {\n      const transaction = db.transaction(\"users\", \"readonly\");\n      const store = transaction.objectStore(\"users\");\n      const allUsers = store.getAll();\n      allUsers.onsuccess = () => {\n        if (allUsers.result && allUsers.result.length > 0) {\n          setFormTitle(\"Log In\");\n        } else {\n          setFormTitle(\"Create Account\");\n        }\n      };\n      transaction.oncomplete = () => {\n        db.close();\n      };\n    };\n    initializeDB();\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    saveUser();\n  };\n  const saveUser = () => {\n    if (!userInfo.username || !userInfo.password) {\n      console.error(\"Username or password is missing\");\n      return;\n    }\n    const indexedDB = window.indexedDB;\n    const request = indexedDB.open(\"UserDatabase\", 1);\n    request.onsuccess = () => {\n      console.log(\"Saving user:\", userInfo);\n      const db = request.result;\n      const transaction = db.transaction(\"users\", \"readwrite\");\n      const store = transaction.objectStore(\"users\");\n\n      // Creating an object without an id, since it will be auto-incremented\n      const userObject = {\n        username: userInfo.username,\n        password: userInfo.password\n      };\n      const addRequest = store.add(userObject); // Save the user object\n\n      addRequest.onsuccess = () => {\n        console.log(\"User successfully added to database!\");\n        setIsLoggedIn(true);\n        setIsFormOpen(false);\n      };\n      addRequest.onerror = event => {\n        console.error(\"Error adding user to database:\", event);\n      };\n      transaction.oncomplete = () => {\n        db.close();\n      };\n    };\n    request.onerror = event => {\n      console.error(\"Error opening database for saving user:\", event);\n    };\n  };\n  const toggleForm = () => {\n    setIsFormOpen(!isFormOpen);\n  };\n  const updateStatus = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: value\n    }));\n  };\n  const handleRemember = () => {\n    setRemember(!remember);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        float: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Signed in as: \", userInfo.username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfile,\n        alt: \"User Profile\",\n        style: {\n          float: \"left\",\n          width: '50px',\n          height: '55px',\n          cursor: 'pointer'\n        },\n        onClick: toggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://bleaky11.github.io/starter_helpi/\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"The Career Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), isFormOpen && !isLoggedIn && /*#__PURE__*/_jsxDEV(LoginForm, {\n      userInfo: userInfo,\n      setInfo: setInfo,\n      remember: remember,\n      setRemember: setRemember,\n      handleRemember: handleRemember,\n      handleSubmit: handleSubmit,\n      updateStatus: updateStatus,\n      closeForm: () => setIsFormOpen(false),\n      formTitle: formTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"Sy5Xcaz+/FFoyv7W0eLv3F3KsCE=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","userProfile","LoginForm","jsxDEV","_jsxDEV","HomePage","_s","isFormOpen","setIsFormOpen","userInfo","setInfo","username","password","remember","setRemember","isLoggedIn","setIsLoggedIn","formTitle","setFormTitle","initializeDB","indexedDB","window","request","open","onupgradeneeded","console","log","db","result","store","createObjectStore","autoIncrement","createIndex","unique","onsuccess","checkExistingUser","onerror","event","error","transaction","objectStore","allUsers","getAll","length","oncomplete","close","handleSubmit","preventDefault","saveUser","userObject","addRequest","add","toggleForm","updateStatus","name","value","target","prevInfo","handleRemember","children","style","position","float","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","height","cursor","onClick","href","color","closeForm","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/homepagelogo.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport userProfile from './Images/user-profile.png';\r\nimport { LoginForm } from './LoginForm';\r\n\r\nexport const HomePage: React.FC = () => {\r\n  const [isFormOpen, setIsFormOpen] = useState<boolean>(false);\r\n  const [userInfo, setInfo] = useState<{ username: string; password: string }>({ username: \"\", password: \"\" });\r\n  const [remember, setRemember] = useState<boolean>(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\r\n  const [formTitle, setFormTitle] = useState<string>(\"Create Account\");\r\n\r\n  useEffect(() => {\r\n    const initializeDB = () => {\r\n      const indexedDB = window.indexedDB;\r\n      const request = indexedDB.open(\"UserDatabase\", 1);\r\n\r\n      request.onupgradeneeded = () => {\r\n        console.log(\"Setting up database...\");\r\n        const db = request.result;\r\n        // Create object store with autoIncrement\r\n        const store = db.createObjectStore(\"users\", { autoIncrement: true });\r\n        store.createIndex(\"username\", \"username\", { unique: true });\r\n      };\r\n\r\n      request.onsuccess = () => {\r\n        console.log(\"Database opened successfully!\");\r\n        const db = request.result;\r\n        checkExistingUser(db);\r\n      };\r\n\r\n      request.onerror = (event) => {\r\n        console.error(\"Error accessing user database!\", event);\r\n      };\r\n    };\r\n\r\n    const checkExistingUser = (db: IDBDatabase) => {\r\n      const transaction = db.transaction(\"users\", \"readonly\");\r\n      const store = transaction.objectStore(\"users\");\r\n      const allUsers = store.getAll();\r\n\r\n      allUsers.onsuccess = () => {\r\n        if (allUsers.result && allUsers.result.length > 0) {\r\n          setFormTitle(\"Log In\");\r\n        } else {\r\n          setFormTitle(\"Create Account\");\r\n        }\r\n      };\r\n\r\n      transaction.oncomplete = () => {\r\n        db.close();\r\n      };\r\n    };\r\n\r\n    initializeDB();\r\n  }, []);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    saveUser();\r\n  };\r\n\r\n  const saveUser = () => {\r\n    if (!userInfo.username || !userInfo.password) {\r\n      console.error(\"Username or password is missing\");\r\n      return;\r\n    }\r\n\r\n    const indexedDB = window.indexedDB;\r\n    const request = indexedDB.open(\"UserDatabase\", 1);\r\n\r\n    request.onsuccess = () => {\r\n      console.log(\"Saving user:\", userInfo);\r\n      const db = request.result;\r\n      const transaction = db.transaction(\"users\", \"readwrite\");\r\n      const store = transaction.objectStore(\"users\");\r\n\r\n      // Creating an object without an id, since it will be auto-incremented\r\n      const userObject = {\r\n        username: userInfo.username,\r\n        password: userInfo.password,\r\n      };\r\n\r\n      const addRequest = store.add(userObject); // Save the user object\r\n\r\n      addRequest.onsuccess = () => {\r\n        console.log(\"User successfully added to database!\");\r\n        setIsLoggedIn(true);\r\n        setIsFormOpen(false);\r\n      };\r\n\r\n      addRequest.onerror = (event) => {\r\n        console.error(\"Error adding user to database:\", event);\r\n      };\r\n\r\n      transaction.oncomplete = () => {\r\n        db.close();\r\n      };\r\n    };\r\n\r\n    request.onerror = (event) => {\r\n      console.error(\"Error opening database for saving user:\", event);\r\n    };\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsFormOpen(!isFormOpen);\r\n  };\r\n\r\n  const updateStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setInfo((prevInfo) => ({\r\n      ...prevInfo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRemember = () => {\r\n    setRemember(!remember);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <div style={{ position: \"absolute\", float: \"left\" }}>\r\n          <h3>Signed in as: {userInfo.username}!</h3>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <img\r\n            src={userProfile}\r\n            alt=\"User Profile\"\r\n            style={{ float: \"left\", width: '50px', height: '55px', cursor: 'pointer' }}\r\n            onClick={toggleForm}\r\n          />\r\n        </div>\r\n      )}\r\n      <a href=\"https://bleaky11.github.io/starter_helpi/\" style={{ color: 'black' }}>\r\n        <h1>The Career Quiz</h1>\r\n      </a>\r\n\r\n      {isFormOpen && !isLoggedIn && (\r\n        <LoginForm\r\n          userInfo={userInfo}\r\n          setInfo={setInfo}\r\n          remember={remember}\r\n          setRemember={setRemember}\r\n          handleRemember={handleRemember}\r\n          handleSubmit={handleSubmit}\r\n          updateStatus={updateStatus}\r\n          closeForm={() => setIsFormOpen(false)}\r\n          formTitle={formTitle}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}