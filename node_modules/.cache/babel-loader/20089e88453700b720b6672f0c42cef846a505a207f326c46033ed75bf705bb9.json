{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tommy\\\\Project_Final\\\\starter_helpi\\\\src\\\\basicCareer.tsx\",\n  _s = $RefreshSig$();\nimport { backgroundStyle } from \"./CSS/Background\";\nimport { useState } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function BasicCareerComponent() {\n  _s();\n  const questions = [\"Mock Question 1\", \"Mock Question 2\", \"Mock Question 3\"];\n  const [progress, setProgress] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const [isAnswered, setIsAnswered] = useState(Array(questions.length).fill(false));\n  function updateAnswer(event, index) {\n    if (!isAnswered[index]) {\n      setIsAnswered(prev => {\n        const newCopy = [...prev];\n        newCopy[index] = true;\n        return newCopy;\n      });\n    }\n    setAnswer(event.target.value);\n    setProgress(prevProgress => Math.min(prevProgress + 100 / questions.length, 100));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          marginBottom: \"10px\",\n          marginRight: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"question\",\n          style: {\n            marginRight: \"10px\"\n          },\n          children: [\"Percent Complete: \", progress.toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          id: \"question\",\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Here is the Basic Career Page!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          style: {\n            border: \"2px solid red\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This assessment is designed to determine an appopriate career path going forward. You will be asked a series of multiple choice questions. If you're looking for more in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're in a comfortable environment and answer each question to the best ability of your ability.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Answer 1\" // Replace with actual answer options\n              ,\n              name: `quizAnswer${index}` // Unique name for each question\n              ,\n              value: \"answer1\" // Unique value for each answer\n              ,\n              onChange: event => updateAnswer(event, index) // Pass question index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Answer 2\" // Replace with actual answer options\n              ,\n              name: `quizAnswer${index}` // Unique name for each question\n              ,\n              value: \"answer2\" // Unique value for each answer\n              ,\n              onChange: event => updateAnswer(event, index) // Pass question index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(BasicCareerComponent, \"fnW2q+Ot/0QxQ5sP4rA79HjJqT8=\");\n_c = BasicCareerComponent;\nvar _c;\n$RefreshReg$(_c, \"BasicCareerComponent\");","map":{"version":3,"names":["backgroundStyle","useState","Container","Form","jsxDEV","_jsxDEV","BasicCareerComponent","_s","questions","progress","setProgress","answer","setAnswer","isAnswered","setIsAnswered","Array","length","fill","updateAnswer","event","index","prev","newCopy","target","value","prevProgress","Math","min","style","children","display","alignItems","justifyContent","marginBottom","marginRight","htmlFor","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","id","max","textAlign","border","marginLeft","map","question","Check","type","label","name","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Tommy/Project_Final/starter_helpi/src/basicCareer.tsx"],"sourcesContent":["import { backgroundStyle } from \"./CSS/Background\";\r\nimport { useState } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\n\r\nexport function BasicCareerComponent(): JSX.Element \r\n{\r\n\r\n  const questions = [\"Mock Question 1\", \"Mock Question 2\", \"Mock Question 3\"]\r\n\r\n  const [progress, setProgress] = useState<number>(0);\r\n  const[answer, setAnswer] = useState<string>(\"\");\r\n  const [isAnswered, setIsAnswered] = useState<boolean[]>(Array(questions.length).fill(false));\r\n\r\n  function updateAnswer(event: React.ChangeEvent<HTMLInputElement>, index: number) \r\n  {\r\n    if(!isAnswered[index])\r\n    {\r\n      setIsAnswered((prev) =>\r\n      {\r\n        const newCopy = [...prev];\r\n        newCopy[index] = true;\r\n        return newCopy;\r\n      })\r\n    }\r\n    setAnswer(event.target.value);\r\n    setProgress((prevProgress) => Math.min(prevProgress + (100 / questions.length), 100));\r\n  }\r\n\r\n  return (\r\n    <div style={backgroundStyle}>\r\n      <div>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"flex-end\", marginBottom: \"10px\", marginRight: \"30px\" }}>\r\n      <label htmlFor=\"question\" style={{ marginRight: \"10px\" }}>\r\n          Percent Complete: {progress.toFixed(0)}%\r\n     </label>\r\n      <progress id=\"question\" value={progress} max=\"100\" />\r\n</div>\r\n        <h1 style= {{textAlign: \"center\"}}>Here is the Basic Career Page!</h1>\r\n        <br></br>\r\n        <div>\r\n        <Container style = {{border:\"2px solid red\"}}>\r\n        <p> \r\n          This assessment is designed to determine an appopriate career path going forward. \r\n          You will be asked a series of multiple choice questions. If you're looking for more \r\n          in-depth questions, go to the Detailed Career Page. Before you begin, make sure you're \r\n          in a comfortable environment and answer each question to the best ability of your ability.\r\n        </p>\r\n        </Container>\r\n        </div>\r\n        <div\r\n          style = {{marginLeft: \"30px\"}}>\r\n           <br />\r\n          {questions.map((question, index) => (\r\n            <div key={index}>\r\n              <p>{question}</p>\r\n              <Form>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label=\"Answer 1\" // Replace with actual answer options\r\n                  name={`quizAnswer${index}`} // Unique name for each question\r\n                  value=\"answer1\" // Unique value for each answer\r\n                  onChange={(event) => updateAnswer(event, index)} // Pass question index\r\n                />\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label=\"Answer 2\" // Replace with actual answer options\r\n                  name={`quizAnswer${index}`} // Unique name for each question\r\n                  value=\"answer2\" // Unique value for each answer\r\n                  onChange={(event) => updateAnswer(event, index)} // Pass question index\r\n                />\r\n                {/* Add more answer options as needed */}\r\n              </Form>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}